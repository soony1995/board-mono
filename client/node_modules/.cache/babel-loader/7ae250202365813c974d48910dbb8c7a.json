{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nclass RootPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source hook\n   * @param {Array<string>} root roots\n   * @param {string | ResolveStepHook} target target hook\n   * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n   */\n  constructor(source, root, target, ignoreErrors) {\n    this.root = root;\n    this.source = source;\n    this.target = target;\n    this._ignoreErrors = ignoreErrors;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"RootPlugin\", (request, resolveContext, callback) => {\n      const req = request.request;\n      if (!req) return callback();\n      if (!req.startsWith(\"/\")) return callback();\n      const path = resolver.join(this.root, req.slice(1));\n      const obj = Object.assign(request, {\n        path,\n        relativePath: request.relativePath && path\n      });\n      resolver.doResolve(target, obj, `root path ${this.root}`, resolveContext, this._ignoreErrors ? (err, result) => {\n        if (err) {\n          if (resolveContext.log) {\n            resolveContext.log(`Ignored fatal error while resolving root path:\\n${err}`);\n          }\n          return callback();\n        }\n        if (result) return callback(null, result);\n        callback();\n      } : callback);\n    });\n  }\n}\nmodule.exports = RootPlugin;","map":{"version":3,"names":["RootPlugin","constructor","source","root","target","ignoreErrors","_ignoreErrors","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","startsWith","path","join","slice","obj","Object","assign","relativePath","doResolve","err","result","log","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/enhanced-resolve/lib/RootPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source hook\n\t * @param {Array<string>} root roots\n\t * @param {string | ResolveStepHook} target target hook\n\t * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n\t */\n\tconstructor(source, root, target, ignoreErrors) {\n\t\tthis.root = root;\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t\tthis._ignoreErrors = ignoreErrors;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RootPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\t\t\t\tif (!req.startsWith(\"/\")) return callback();\n\n\t\t\t\tconst path = resolver.join(this.root, req.slice(1));\n\t\t\t\tconst obj = Object.assign(request, {\n\t\t\t\t\tpath,\n\t\t\t\t\trelativePath: request.relativePath && path\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t`root path ${this.root}`,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tthis._ignoreErrors\n\t\t\t\t\t\t? (err, result) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t\t`Ignored fatal error while resolving root path:\\n${err}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: callback\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\nmodule.exports = RootPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAMA,UAAU,CAAC;EAChB;AACD;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,YAAY,EAAE;IAC/C,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,aAAa,GAAGD,YAAY;EAClC;;EAEA;AACD;AACA;AACA;EACCE,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMJ,MAAM,GAAGI,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACL,MAAM,CAAC;IAE/CI,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACR,MAAM,CAAC,CACpBS,QAAQ,CAAC,YAAY,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MAC9D,MAAMC,GAAG,GAAGH,OAAO,CAACA,OAAO;MAC3B,IAAI,CAACG,GAAG,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC3B,IAAI,CAACC,GAAG,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE,OAAOF,QAAQ,CAAC,CAAC;MAE3C,MAAMG,IAAI,GAAGT,QAAQ,CAACU,IAAI,CAAC,IAAI,CAACf,IAAI,EAAEY,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;MACnD,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;QAClCK,IAAI;QACJM,YAAY,EAAEX,OAAO,CAACW,YAAY,IAAIN;MACvC,CAAC,CAAC;MACFT,QAAQ,CAACgB,SAAS,CACjBpB,MAAM,EACNgB,GAAG,EACH,aAAa,IAAI,CAACjB,IAAI,EAAE,EACxBU,cAAc,EACd,IAAI,CAACP,aAAa,GACf,CAACmB,GAAG,EAAEC,MAAM,KAAK;QACjB,IAAID,GAAG,EAAE;UACR,IAAIZ,cAAc,CAACc,GAAG,EAAE;YACvBd,cAAc,CAACc,GAAG,CACjB,mDAAmDF,GAAG,EACvD,CAAC;UACF;UACA,OAAOX,QAAQ,CAAC,CAAC;QAClB;QACA,IAAIY,MAAM,EAAE,OAAOZ,QAAQ,CAAC,IAAI,EAAEY,MAAM,CAAC;QACzCZ,QAAQ,CAAC,CAAC;MACV,CAAC,GACDA,QACJ,CAAC;IACF,CAAC,CAAC;EACJ;AACD;AAEAc,MAAM,CAACC,OAAO,GAAG7B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script"}