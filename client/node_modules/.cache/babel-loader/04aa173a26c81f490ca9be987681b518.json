{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"./Parser\");\nconst Template = require(\"./Template\");\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\nconst JavascriptGenerator = require(\"./JavascriptGenerator\");\nconst createHash = require(\"./util/createHash\");\nclass JavascriptModulesPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"JavascriptModulesPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      normalModuleFactory.hooks.createParser.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", options => {\n        return new Parser(options, \"auto\");\n      });\n      normalModuleFactory.hooks.createParser.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", options => {\n        return new Parser(options, \"script\");\n      });\n      normalModuleFactory.hooks.createParser.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", options => {\n        return new Parser(options, \"module\");\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", () => {\n        return new JavascriptGenerator();\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", () => {\n        return new JavascriptGenerator();\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", () => {\n        return new JavascriptGenerator();\n      });\n      compilation.mainTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", (result, options) => {\n        const chunk = options.chunk;\n        const hash = options.hash;\n        const fullHash = options.fullHash;\n        const outputOptions = options.outputOptions;\n        const moduleTemplates = options.moduleTemplates;\n        const dependencyTemplates = options.dependencyTemplates;\n        const filenameTemplate = chunk.filenameTemplate || outputOptions.filename;\n        const useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n        result.push({\n          render: () => compilation.mainTemplate.render(hash, chunk, moduleTemplates.javascript, dependencyTemplates),\n          filenameTemplate,\n          pathOptions: {\n            noChunkHash: !useChunkHash,\n            contentHashType: \"javascript\",\n            chunk\n          },\n          identifier: `chunk${chunk.id}`,\n          hash: useChunkHash ? chunk.hash : fullHash\n        });\n        return result;\n      });\n      compilation.mainTemplate.hooks.modules.tap(\"JavascriptModulesPlugin\", (source, chunk, hash, moduleTemplate, dependencyTemplates) => {\n        return Template.renderChunkModules(chunk, m => typeof m.source === \"function\", moduleTemplate, dependencyTemplates, \"/******/ \");\n      });\n      compilation.chunkTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", (result, options) => {\n        const chunk = options.chunk;\n        const outputOptions = options.outputOptions;\n        const moduleTemplates = options.moduleTemplates;\n        const dependencyTemplates = options.dependencyTemplates;\n        const filenameTemplate = chunk.filenameTemplate || outputOptions.chunkFilename;\n        result.push({\n          render: () => this.renderJavascript(compilation.chunkTemplate, chunk, moduleTemplates.javascript, dependencyTemplates),\n          filenameTemplate,\n          pathOptions: {\n            chunk,\n            contentHashType: \"javascript\"\n          },\n          identifier: `chunk${chunk.id}`,\n          hash: chunk.hash\n        });\n        return result;\n      });\n      compilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", chunk => {\n        const outputOptions = compilation.outputOptions;\n        const {\n          hashSalt,\n          hashDigest,\n          hashDigestLength,\n          hashFunction\n        } = outputOptions;\n        const hash = createHash(hashFunction);\n        if (hashSalt) hash.update(hashSalt);\n        const template = chunk.hasRuntime() ? compilation.mainTemplate : compilation.chunkTemplate;\n        hash.update(`${chunk.id} `);\n        hash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n        template.updateHashForChunk(hash, chunk, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n        for (const m of chunk.modulesIterable) {\n          if (typeof m.source === \"function\") {\n            hash.update(m.hash);\n          }\n        }\n        const digest = /** @type {string} */hash.digest(hashDigest);\n        chunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n      });\n    });\n  }\n  renderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n    const moduleSources = Template.renderChunkModules(chunk, m => typeof m.source === \"function\", moduleTemplate, dependencyTemplates);\n    const core = chunkTemplate.hooks.modules.call(moduleSources, chunk, moduleTemplate, dependencyTemplates);\n    let source = chunkTemplate.hooks.render.call(core, chunk, moduleTemplate, dependencyTemplates);\n    if (chunk.hasEntryModule()) {\n      source = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n    }\n    chunk.rendered = true;\n    return new ConcatSource(source, \";\");\n  }\n}\nmodule.exports = JavascriptModulesPlugin;","map":{"version":3,"names":["Parser","require","Template","ConcatSource","JavascriptGenerator","createHash","JavascriptModulesPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","options","createGenerator","mainTemplate","renderManifest","result","chunk","hash","fullHash","outputOptions","moduleTemplates","dependencyTemplates","filenameTemplate","filename","useChunkHash","push","render","javascript","pathOptions","noChunkHash","contentHashType","identifier","id","modules","source","moduleTemplate","renderChunkModules","m","chunkTemplate","chunkFilename","renderJavascript","contentHash","hashSalt","hashDigest","hashDigestLength","hashFunction","update","template","hasRuntime","ids","join","updateHashForChunk","modulesIterable","digest","substr","moduleSources","core","call","hasEntryModule","renderWithEntry","rendered","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/JavascriptModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"./Parser\");\nconst Template = require(\"./Template\");\nconst { ConcatSource } = require(\"webpack-sources\");\nconst JavascriptGenerator = require(\"./JavascriptGenerator\");\nconst createHash = require(\"./util/createHash\");\n\nclass JavascriptModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"auto\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"script\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"module\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tcompilation.mainTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst hash = options.hash;\n\t\t\t\t\t\tconst fullHash = options.fullHash;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.filename;\n\n\t\t\t\t\t\tconst useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tcompilation.mainTemplate.render(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tnoChunkHash: !useChunkHash,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\",\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: useChunkHash ? chunk.hash : fullHash\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.mainTemplate.hooks.modules.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(source, chunk, hash, moduleTemplate, dependencyTemplates) => {\n\t\t\t\t\t\treturn Template.renderChunkModules(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tm => typeof m.source === \"function\",\n\t\t\t\t\t\t\tmoduleTemplate,\n\t\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\t\t\"/******/ \"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.chunkTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.chunkFilename;\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderJavascript(\n\t\t\t\t\t\t\t\t\tcompilation.chunkTemplate,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.hash\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", chunk => {\n\t\t\t\t\tconst outputOptions = compilation.outputOptions;\n\t\t\t\t\tconst {\n\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\thashFunction\n\t\t\t\t\t} = outputOptions;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t\t? compilation.mainTemplate\n\t\t\t\t\t\t: compilation.chunkTemplate;\n\t\t\t\t\thash.update(`${chunk.id} `);\n\t\t\t\t\thash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n\t\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t);\n\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\tif (typeof m.source === \"function\") {\n\t\t\t\t\t\t\thash.update(m.hash);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\trenderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst moduleSources = Template.renderChunkModules(\n\t\t\tchunk,\n\t\t\tm => typeof m.source === \"function\",\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst core = chunkTemplate.hooks.modules.call(\n\t\t\tmoduleSources,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tlet source = chunkTemplate.hooks.render.call(\n\t\t\tcore,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tif (chunk.hasEntryModule()) {\n\t\t\tsource = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n\t\t}\n\t\tchunk.rendered = true;\n\t\treturn new ConcatSource(source, \";\");\n\t}\n}\n\nmodule.exports = JavascriptModulesPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}