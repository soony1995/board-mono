{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nclass AMDRequireArrayDependency extends Dependency {\n  constructor(depsArray, range) {\n    super();\n    this.depsArray = depsArray;\n    this.range = range;\n  }\n  get type() {\n    return \"amd require array\";\n  }\n}\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\n  apply(dep, source, runtime) {\n    const content = this.getContent(dep, runtime);\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n  getContent(dep, runtime) {\n    const requires = dep.depsArray.map(dependency => {\n      return this.contentForDependency(dependency, runtime);\n    });\n    return `[${requires.join(\", \")}]`;\n  }\n  contentForDependency(dep, runtime) {\n    if (typeof dep === \"string\") {\n      return dep;\n    }\n    if (dep.localModule) {\n      return dep.localModule.variableName();\n    } else {\n      return runtime.moduleExports({\n        module: dep.module,\n        request: dep.request\n      });\n    }\n  }\n};\nmodule.exports = AMDRequireArrayDependency;","map":{"version":3,"names":["Dependency","require","AMDRequireArrayDependency","constructor","depsArray","range","type","Template","AMDRequireArrayDependencyTemplate","apply","dep","source","runtime","content","getContent","replace","requires","map","dependency","contentForDependency","join","localModule","variableName","moduleExports","module","request","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/dependencies/AMDRequireArrayDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass AMDRequireArrayDependency extends Dependency {\n\tconstructor(depsArray, range) {\n\t\tsuper();\n\t\tthis.depsArray = depsArray;\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"amd require array\";\n\t}\n}\n\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = this.getContent(dep, runtime);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n\n\tgetContent(dep, runtime) {\n\t\tconst requires = dep.depsArray.map(dependency => {\n\t\t\treturn this.contentForDependency(dependency, runtime);\n\t\t});\n\t\treturn `[${requires.join(\", \")}]`;\n\t}\n\n\tcontentForDependency(dep, runtime) {\n\t\tif (typeof dep === \"string\") {\n\t\t\treturn dep;\n\t\t}\n\n\t\tif (dep.localModule) {\n\t\t\treturn dep.localModule.variableName();\n\t\t} else {\n\t\t\treturn runtime.moduleExports({\n\t\t\t\tmodule: dep.module,\n\t\t\t\trequest: dep.request\n\t\t\t});\n\t\t}\n\t}\n};\n\nmodule.exports = AMDRequireArrayDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,MAAMC,yBAAyB,SAASF,UAAU,CAAC;EAClDG,WAAWA,CAACC,SAAS,EAAEC,KAAK,EAAE;IAC7B,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;EACnB;EAEA,IAAIC,IAAIA,CAAA,EAAG;IACV,OAAO,mBAAmB;EAC3B;AACD;AAEAJ,yBAAyB,CAACK,QAAQ,GAAG,MAAMC,iCAAiC,CAAC;EAC5EC,KAAKA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;IAC3B,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAACJ,GAAG,EAAEE,OAAO,CAAC;IAC7CD,MAAM,CAACI,OAAO,CAACL,GAAG,CAACL,KAAK,CAAC,CAAC,CAAC,EAAEK,GAAG,CAACL,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEQ,OAAO,CAAC;EACxD;EAEAC,UAAUA,CAACJ,GAAG,EAAEE,OAAO,EAAE;IACxB,MAAMI,QAAQ,GAAGN,GAAG,CAACN,SAAS,CAACa,GAAG,CAACC,UAAU,IAAI;MAChD,OAAO,IAAI,CAACC,oBAAoB,CAACD,UAAU,EAAEN,OAAO,CAAC;IACtD,CAAC,CAAC;IACF,OAAO,IAAII,QAAQ,CAACI,IAAI,CAAC,IAAI,CAAC,GAAG;EAClC;EAEAD,oBAAoBA,CAACT,GAAG,EAAEE,OAAO,EAAE;IAClC,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;MAC5B,OAAOA,GAAG;IACX;IAEA,IAAIA,GAAG,CAACW,WAAW,EAAE;MACpB,OAAOX,GAAG,CAACW,WAAW,CAACC,YAAY,CAAC,CAAC;IACtC,CAAC,MAAM;MACN,OAAOV,OAAO,CAACW,aAAa,CAAC;QAC5BC,MAAM,EAAEd,GAAG,CAACc,MAAM;QAClBC,OAAO,EAAEf,GAAG,CAACe;MACd,CAAC,CAAC;IACH;EACD;AACD,CAAC;AAEDD,MAAM,CAACE,OAAO,GAAGxB,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"script"}