{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n\n/** @typedef {import(\"../ChunkTemplate\")} ChunkTemplate */\n\nconst getEntryInfo = chunk => {\n  return [chunk.entryModule].filter(Boolean).map(m => [m.id].concat(Array.from(chunk.groupsIterable)[0].chunks.filter(c => c !== chunk).map(c => c.id)));\n};\nclass JsonpChunkTemplatePlugin {\n  /**\n   * @param {ChunkTemplate} chunkTemplate the chunk template\n   * @returns {void}\n   */\n  apply(chunkTemplate) {\n    chunkTemplate.hooks.render.tap(\"JsonpChunkTemplatePlugin\", (modules, chunk) => {\n      const jsonpFunction = chunkTemplate.outputOptions.jsonpFunction;\n      const globalObject = chunkTemplate.outputOptions.globalObject;\n      const source = new ConcatSource();\n      const prefetchChunks = chunk.getChildIdsByOrders().prefetch;\n      source.add(`(${globalObject}[${JSON.stringify(jsonpFunction)}] = ${globalObject}[${JSON.stringify(jsonpFunction)}] || []).push([${JSON.stringify(chunk.ids)},`);\n      source.add(modules);\n      const entries = getEntryInfo(chunk);\n      if (entries.length > 0) {\n        source.add(`,${JSON.stringify(entries)}`);\n      } else if (prefetchChunks && prefetchChunks.length) {\n        source.add(`,0`);\n      }\n      if (prefetchChunks && prefetchChunks.length) {\n        source.add(`,${JSON.stringify(prefetchChunks)}`);\n      }\n      source.add(\"])\");\n      return source;\n    });\n    chunkTemplate.hooks.hash.tap(\"JsonpChunkTemplatePlugin\", hash => {\n      hash.update(\"JsonpChunkTemplatePlugin\");\n      hash.update(\"4\");\n      hash.update(`${chunkTemplate.outputOptions.jsonpFunction}`);\n      hash.update(`${chunkTemplate.outputOptions.globalObject}`);\n    });\n    chunkTemplate.hooks.hashForChunk.tap(\"JsonpChunkTemplatePlugin\", (hash, chunk) => {\n      hash.update(JSON.stringify(getEntryInfo(chunk)));\n      hash.update(JSON.stringify(chunk.getChildIdsByOrders().prefetch) || \"\");\n    });\n  }\n}\nmodule.exports = JsonpChunkTemplatePlugin;","map":{"version":3,"names":["ConcatSource","require","getEntryInfo","chunk","entryModule","filter","Boolean","map","m","id","concat","Array","from","groupsIterable","chunks","c","JsonpChunkTemplatePlugin","apply","chunkTemplate","hooks","render","tap","modules","jsonpFunction","outputOptions","globalObject","source","prefetchChunks","getChildIdsByOrders","prefetch","add","JSON","stringify","ids","entries","length","hash","update","hashForChunk","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/web/JsonpChunkTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"../ChunkTemplate\")} ChunkTemplate */\n\nconst getEntryInfo = chunk => {\n\treturn [chunk.entryModule].filter(Boolean).map(m =>\n\t\t[m.id].concat(\n\t\t\tArray.from(chunk.groupsIterable)[0]\n\t\t\t\t.chunks.filter(c => c !== chunk)\n\t\t\t\t.map(c => c.id)\n\t\t)\n\t);\n};\n\nclass JsonpChunkTemplatePlugin {\n\t/**\n\t * @param {ChunkTemplate} chunkTemplate the chunk template\n\t * @returns {void}\n\t */\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"JsonpChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst jsonpFunction = chunkTemplate.outputOptions.jsonpFunction;\n\t\t\t\tconst globalObject = chunkTemplate.outputOptions.globalObject;\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tconst prefetchChunks = chunk.getChildIdsByOrders().prefetch;\n\t\t\t\tsource.add(\n\t\t\t\t\t`(${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tjsonpFunction\n\t\t\t\t\t)}] = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tjsonpFunction\n\t\t\t\t\t)}] || []).push([${JSON.stringify(chunk.ids)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tconst entries = getEntryInfo(chunk);\n\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\tsource.add(`,${JSON.stringify(entries)}`);\n\t\t\t\t} else if (prefetchChunks && prefetchChunks.length) {\n\t\t\t\t\tsource.add(`,0`);\n\t\t\t\t}\n\n\t\t\t\tif (prefetchChunks && prefetchChunks.length) {\n\t\t\t\t\tsource.add(`,${JSON.stringify(prefetchChunks)}`);\n\t\t\t\t}\n\t\t\t\tsource.add(\"])\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"JsonpChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"JsonpChunkTemplatePlugin\");\n\t\t\thash.update(\"4\");\n\t\t\thash.update(`${chunkTemplate.outputOptions.jsonpFunction}`);\n\t\t\thash.update(`${chunkTemplate.outputOptions.globalObject}`);\n\t\t});\n\t\tchunkTemplate.hooks.hashForChunk.tap(\n\t\t\t\"JsonpChunkTemplatePlugin\",\n\t\t\t(hash, chunk) => {\n\t\t\t\thash.update(JSON.stringify(getEntryInfo(chunk)));\n\t\t\t\thash.update(JSON.stringify(chunk.getChildIdsByOrders().prefetch) || \"\");\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = JsonpChunkTemplatePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}