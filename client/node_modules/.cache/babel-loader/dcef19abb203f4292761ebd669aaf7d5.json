{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst util = require(\"util\");\nconst {\n  CachedSource\n} = require(\"webpack-sources\");\nconst {\n  Tapable,\n  SyncHook,\n  SyncBailHook,\n  SyncWaterfallHook,\n  AsyncSeriesHook\n} = require(\"tapable\");\nconst EntryModuleNotFoundError = require(\"./EntryModuleNotFoundError\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst Chunk = require(\"./Chunk\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst HotUpdateChunkTemplate = require(\"./HotUpdateChunkTemplate\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst Stats = require(\"./Stats\");\nconst Semaphore = require(\"./util/Semaphore\");\nconst createHash = require(\"./util/createHash\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst GraphHelpers = require(\"./GraphHelpers\");\nconst ModuleDependency = require(\"./dependencies/ModuleDependency\");\nconst compareLocations = require(\"./compareLocations\");\nconst {\n  Logger,\n  LogType\n} = require(\"./logging/Logger\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {import(\"./dependencies/SingleEntryDependency\")} SingleEntryDependency */\n/** @typedef {import(\"./dependencies/MultiEntryDependency\")} MultiEntryDependency */\n/** @typedef {import(\"./dependencies/DllEntryDependency\")} DllEntryDependency */\n/** @typedef {import(\"./dependencies/DependencyReference\")} DependencyReference */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n// TODO use @callback\n/** @typedef {{[assetName: string]: Source}} CompilationAssets */\n/** @typedef {(err: Error|null, result?: Module) => void } ModuleCallback */\n/** @typedef {(err?: Error|null, result?: Module) => void } ModuleChainCallback */\n/** @typedef {(module: Module) => void} OnModuleCallback */\n/** @typedef {(err?: Error|null) => void} Callback */\n/** @typedef {(d: Dependency) => any} DepBlockVarDependenciesCallback */\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {{apply: () => void}} Plugin */\n\n/**\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\n * @property {string} issuer\n * @property {string} compiler\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateData\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\n * @property {any=} resolveOptions\n * @property {string} context\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} ModuleFactory\n * @property {(data: ModuleFactoryCreateData, callback: ModuleCallback) => any} create\n */\n\n/**\n * @typedef {Object} SortedDependency\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n * @property {DependenciesBlockVariable[]} variables\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} AssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @param {Chunk} a first chunk to sort by id\n * @param {Chunk} b second chunk to sort by id\n * @returns {-1|0|1} sort value\n */\nconst byId = (a, b) => {\n  if (typeof a.id !== typeof b.id) {\n    return typeof a.id < typeof b.id ? -1 : 1;\n  }\n  if (a.id < b.id) return -1;\n  if (a.id > b.id) return 1;\n  return 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIdOrIdentifier = (a, b) => {\n  if (typeof a.id !== typeof b.id) {\n    return typeof a.id < typeof b.id ? -1 : 1;\n  }\n  if (a.id < b.id) return -1;\n  if (a.id > b.id) return 1;\n  const identA = a.identifier();\n  const identB = b.identifier();\n  if (identA < identB) return -1;\n  if (identA > identB) return 1;\n  return 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIndexOrIdentifier = (a, b) => {\n  if (a.index < b.index) return -1;\n  if (a.index > b.index) return 1;\n  const identA = a.identifier();\n  const identB = b.identifier();\n  if (identA < identB) return -1;\n  if (identA > identB) return 1;\n  return 0;\n};\n\n/**\n * @param {Compilation} a first compilation to sort by\n * @param {Compilation} b second compilation to sort by\n * @returns {-1|0|1} sort value\n */\nconst byNameOrHash = (a, b) => {\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  if (a.fullHash < b.fullHash) return -1;\n  if (a.fullHash > b.fullHash) return 1;\n  return 0;\n};\n\n/**\n * @param {DependenciesBlockVariable[]} variables DepBlock Variables to iterate over\n * @param {DepBlockVarDependenciesCallback} fn callback to apply on iterated elements\n * @returns {void}\n */\nconst iterationBlockVariable = (variables, fn) => {\n  for (let indexVariable = 0; indexVariable < variables.length; indexVariable++) {\n    const varDep = variables[indexVariable].dependencies;\n    for (let indexVDep = 0; indexVDep < varDep.length; indexVDep++) {\n      fn(varDep[indexVDep]);\n    }\n  }\n};\n\n/**\n * @template T\n * @param {T[]} arr array of elements to iterate over\n * @param {function(T): void} fn callback applied to each element\n * @returns {void}\n */\nconst iterationOfArrayCallback = (arr, fn) => {\n  for (let index = 0; index < arr.length; index++) {\n    fn(arr[index]);\n  }\n};\n\n/**\n * @template T\n * @param {Set<T>} set set to add items to\n * @param {Set<T>} otherSet set to add items from\n * @returns {void}\n */\nconst addAllToSet = (set, otherSet) => {\n  for (const item of otherSet) {\n    set.add(item);\n  }\n};\n\n/**\n * @param {Source} a a source\n * @param {Source} b another source\n * @returns {boolean} true, when both sources are equal\n */\nconst isSourceEqual = (a, b) => {\n  if (a === b) return true;\n  // TODO webpack 5: check .buffer() instead, it's called anyway during emit\n  /** @type {Buffer|string} */\n  let aSource = a.source();\n  /** @type {Buffer|string} */\n  let bSource = b.source();\n  if (aSource === bSource) return true;\n  if (typeof aSource === \"string\" && typeof bSource === \"string\") return false;\n  if (!Buffer.isBuffer(aSource)) aSource = Buffer.from(aSource, \"utf-8\");\n  if (!Buffer.isBuffer(bSource)) bSource = Buffer.from(bSource, \"utf-8\");\n  return aSource.equals(bSource);\n};\nclass Compilation extends Tapable {\n  /**\n   * Creates an instance of Compilation.\n   * @param {Compiler} compiler the compiler which created the compilation\n   */\n  constructor(compiler) {\n    super();\n    this.hooks = {\n      /** @type {SyncHook<Module>} */\n      buildModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<Module>} */\n      rebuildModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<Module, Error>} */\n      failedModule: new SyncHook([\"module\", \"error\"]),\n      /** @type {SyncHook<Module>} */\n      succeedModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<Dependency, string>} */\n      addEntry: new SyncHook([\"entry\", \"name\"]),\n      /** @type {SyncHook<Dependency, string, Error>} */\n      failedEntry: new SyncHook([\"entry\", \"name\", \"error\"]),\n      /** @type {SyncHook<Dependency, string, Module>} */\n      succeedEntry: new SyncHook([\"entry\", \"name\", \"module\"]),\n      /** @type {SyncWaterfallHook<DependencyReference, Dependency, Module>} */\n      dependencyReference: new SyncWaterfallHook([\"dependencyReference\", \"dependency\", \"module\"]),\n      /** @type {AsyncSeriesHook<Module[]>} */\n      finishModules: new AsyncSeriesHook([\"modules\"]),\n      /** @type {SyncHook<Module>} */\n      finishRebuildingModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook} */\n      unseal: new SyncHook([]),\n      /** @type {SyncHook} */\n      seal: new SyncHook([]),\n      /** @type {SyncHook} */\n      beforeChunks: new SyncHook([]),\n      /** @type {SyncHook<Chunk[]>} */\n      afterChunks: new SyncHook([\"chunks\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeDependenciesBasic: new SyncBailHook([\"modules\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeDependencies: new SyncBailHook([\"modules\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeDependenciesAdvanced: new SyncBailHook([\"modules\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      afterOptimizeDependencies: new SyncHook([\"modules\"]),\n      /** @type {SyncHook} */\n      optimize: new SyncHook([]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeModulesBasic: new SyncBailHook([\"modules\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeModules: new SyncBailHook([\"modules\"]),\n      /** @type {SyncBailHook<Module[]>} */\n      optimizeModulesAdvanced: new SyncBailHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      afterOptimizeModules: new SyncHook([\"modules\"]),\n      /** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n      optimizeChunksBasic: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n      optimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n      optimizeChunksAdvanced: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {SyncHook<Chunk[], ChunkGroup[]>} */\n      afterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {AsyncSeriesHook<Chunk[], Module[]>} */\n      optimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n      /** @type {SyncHook<Chunk[], Module[]>} */\n      afterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n      /** @type {SyncBailHook<Chunk[], Module[]>} */\n      optimizeChunkModulesBasic: new SyncBailHook([\"chunks\", \"modules\"]),\n      /** @type {SyncBailHook<Chunk[], Module[]>} */\n      optimizeChunkModules: new SyncBailHook([\"chunks\", \"modules\"]),\n      /** @type {SyncBailHook<Chunk[], Module[]>} */\n      optimizeChunkModulesAdvanced: new SyncBailHook([\"chunks\", \"modules\"]),\n      /** @type {SyncHook<Chunk[], Module[]>} */\n      afterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n      /** @type {SyncBailHook} */\n      shouldRecord: new SyncBailHook([]),\n      /** @type {SyncHook<Module[], any>} */\n      reviveModules: new SyncHook([\"modules\", \"records\"]),\n      /** @type {SyncHook<Module[]>} */\n      optimizeModuleOrder: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      advancedOptimizeModuleOrder: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      beforeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      moduleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      optimizeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Module[]>} */\n      afterOptimizeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<Chunk[], any>} */\n      reviveChunks: new SyncHook([\"chunks\", \"records\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      optimizeChunkOrder: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      beforeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      optimizeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      afterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<Module[], any>} */\n      recordModules: new SyncHook([\"modules\", \"records\"]),\n      /** @type {SyncHook<Chunk[], any>} */\n      recordChunks: new SyncHook([\"chunks\", \"records\"]),\n      /** @type {SyncHook} */\n      beforeHash: new SyncHook([]),\n      /** @type {SyncHook<Chunk>} */\n      contentHash: new SyncHook([\"chunk\"]),\n      /** @type {SyncHook} */\n      afterHash: new SyncHook([]),\n      /** @type {SyncHook<any>} */\n      recordHash: new SyncHook([\"records\"]),\n      /** @type {SyncHook<Compilation, any>} */\n      record: new SyncHook([\"compilation\", \"records\"]),\n      /** @type {SyncHook} */\n      beforeModuleAssets: new SyncHook([]),\n      /** @type {SyncBailHook} */\n      shouldGenerateChunkAssets: new SyncBailHook([]),\n      /** @type {SyncHook} */\n      beforeChunkAssets: new SyncHook([]),\n      /** @type {SyncHook<Chunk[]>} */\n      additionalChunkAssets: new SyncHook([\"chunks\"]),\n      /** @type {AsyncSeriesHook} */\n      additionalAssets: new AsyncSeriesHook([]),\n      /** @type {AsyncSeriesHook<Chunk[]>} */\n      optimizeChunkAssets: new AsyncSeriesHook([\"chunks\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      afterOptimizeChunkAssets: new SyncHook([\"chunks\"]),\n      /** @type {AsyncSeriesHook<CompilationAssets>} */\n      optimizeAssets: new AsyncSeriesHook([\"assets\"]),\n      /** @type {SyncHook<CompilationAssets>} */\n      afterOptimizeAssets: new SyncHook([\"assets\"]),\n      /** @type {SyncBailHook} */\n      needAdditionalSeal: new SyncBailHook([]),\n      /** @type {AsyncSeriesHook} */\n      afterSeal: new AsyncSeriesHook([]),\n      /** @type {SyncHook<Chunk, Hash>} */\n      chunkHash: new SyncHook([\"chunk\", \"chunkHash\"]),\n      /** @type {SyncHook<Module, string>} */\n      moduleAsset: new SyncHook([\"module\", \"filename\"]),\n      /** @type {SyncHook<Chunk, string>} */\n      chunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n      /** @type {SyncWaterfallHook<string, TODO>} */\n      assetPath: new SyncWaterfallHook([\"filename\", \"data\"]),\n      // TODO MainTemplate\n\n      /** @type {SyncBailHook} */\n      needAdditionalPass: new SyncBailHook([]),\n      /** @type {SyncHook<Compiler, string, number>} */\n      childCompiler: new SyncHook([\"childCompiler\", \"compilerName\", \"compilerIndex\"]),\n      /** @type {SyncBailHook<string, LogEntry>} */\n      log: new SyncBailHook([\"origin\", \"logEntry\"]),\n      // TODO the following hooks are weirdly located here\n      // TODO move them for webpack 5\n      /** @type {SyncHook<object, Module>} */\n      normalModuleLoader: new SyncHook([\"loaderContext\", \"module\"]),\n      /** @type {SyncBailHook<Chunk[]>} */\n      optimizeExtractedChunksBasic: new SyncBailHook([\"chunks\"]),\n      /** @type {SyncBailHook<Chunk[]>} */\n      optimizeExtractedChunks: new SyncBailHook([\"chunks\"]),\n      /** @type {SyncBailHook<Chunk[]>} */\n      optimizeExtractedChunksAdvanced: new SyncBailHook([\"chunks\"]),\n      /** @type {SyncHook<Chunk[]>} */\n      afterOptimizeExtractedChunks: new SyncHook([\"chunks\"])\n    };\n    this._pluginCompat.tap(\"Compilation\", options => {\n      switch (options.name) {\n        case \"optimize-tree\":\n        case \"additional-assets\":\n        case \"optimize-chunk-assets\":\n        case \"optimize-assets\":\n        case \"after-seal\":\n          options.async = true;\n          break;\n      }\n    });\n    /** @type {string=} */\n    this.name = undefined;\n    /** @type {Compiler} */\n    this.compiler = compiler;\n    this.resolverFactory = compiler.resolverFactory;\n    this.inputFileSystem = compiler.inputFileSystem;\n    this.requestShortener = compiler.requestShortener;\n    const options = compiler.options;\n    this.options = options;\n    this.outputOptions = options && options.output;\n    /** @type {boolean=} */\n    this.bail = options && options.bail;\n    this.profile = options && options.profile;\n    this.performance = options && options.performance;\n    this.mainTemplate = new MainTemplate(this.outputOptions);\n    this.chunkTemplate = new ChunkTemplate(this.outputOptions);\n    this.hotUpdateChunkTemplate = new HotUpdateChunkTemplate(this.outputOptions);\n    this.runtimeTemplate = new RuntimeTemplate(this.outputOptions, this.requestShortener);\n    this.moduleTemplates = {\n      javascript: new ModuleTemplate(this.runtimeTemplate, \"javascript\"),\n      webassembly: new ModuleTemplate(this.runtimeTemplate, \"webassembly\")\n    };\n    this.semaphore = new Semaphore(options.parallelism || 100);\n    this.entries = [];\n    /** @private @type {{name: string, request: string, module: Module}[]} */\n    this._preparedEntrypoints = [];\n    /** @type {Map<string, Entrypoint>} */\n    this.entrypoints = new Map();\n    /** @type {Chunk[]} */\n    this.chunks = [];\n    /** @type {ChunkGroup[]} */\n    this.chunkGroups = [];\n    /** @type {Map<string, ChunkGroup>} */\n    this.namedChunkGroups = new Map();\n    /** @type {Map<string, Chunk>} */\n    this.namedChunks = new Map();\n    /** @type {Module[]} */\n    this.modules = [];\n    /** @private @type {Map<string, Module>} */\n    this._modules = new Map();\n    this.cache = null;\n    this.records = null;\n    /** @type {string[]} */\n    this.additionalChunkAssets = [];\n    /** @type {CompilationAssets} */\n    this.assets = {};\n    /** @type {Map<string, AssetInfo>} */\n    this.assetsInfo = new Map();\n    /** @type {WebpackError[]} */\n    this.errors = [];\n    /** @type {WebpackError[]} */\n    this.warnings = [];\n    /** @type {Compilation[]} */\n    this.children = [];\n    /** @type {Map<string, LogEntry[]>} */\n    this.logging = new Map();\n    /** @type {Map<DepConstructor, ModuleFactory>} */\n    this.dependencyFactories = new Map();\n    /** @type {Map<DepConstructor, DependencyTemplate>} */\n    this.dependencyTemplates = new Map();\n    // TODO refactor this in webpack 5 to a custom DependencyTemplates class with a hash property\n    // @ts-ignore\n    this.dependencyTemplates.set(\"hash\", \"\");\n    this.childrenCounters = {};\n    /** @type {Set<number|string>} */\n    this.usedChunkIds = null;\n    /** @type {Set<number>} */\n    this.usedModuleIds = null;\n    /** @type {Map<string, number>=} */\n    this.fileTimestamps = undefined;\n    /** @type {Map<string, number>=} */\n    this.contextTimestamps = undefined;\n    /** @type {Set<string>=} */\n    this.compilationDependencies = undefined;\n    /** @private @type {Map<Module, Callback[]>} */\n    this._buildingModules = new Map();\n    /** @private @type {Map<Module, Callback[]>} */\n    this._rebuildingModules = new Map();\n    /** @type {Set<string>} */\n    this.emittedAssets = new Set();\n  }\n  getStats() {\n    return new Stats(this);\n  }\n\n  /**\n   * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n   * @returns {Logger} a logger with that name\n   */\n  getLogger(name) {\n    if (!name) {\n      throw new TypeError(\"Compilation.getLogger(name) called without a name\");\n    }\n    /** @type {LogEntry[] | undefined} */\n    let logEntries;\n    return new Logger((type, args) => {\n      if (typeof name === \"function\") {\n        name = name();\n        if (!name) {\n          throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n        }\n      }\n      let trace;\n      switch (type) {\n        case LogType.warn:\n        case LogType.error:\n        case LogType.trace:\n          trace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack).split(\"\\n\").slice(3);\n          break;\n      }\n      /** @type {LogEntry} */\n      const logEntry = {\n        time: Date.now(),\n        type,\n        args,\n        trace\n      };\n      if (this.hooks.log.call(name, logEntry) === undefined) {\n        if (logEntry.type === LogType.profileEnd) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.profileEnd === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.profileEnd(`[${name}] ${logEntry.args[0]}`);\n          }\n        }\n        if (logEntries === undefined) {\n          logEntries = this.logging.get(name);\n          if (logEntries === undefined) {\n            logEntries = [];\n            this.logging.set(name, logEntries);\n          }\n        }\n        logEntries.push(logEntry);\n        if (logEntry.type === LogType.profile) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.profile === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.profile(`[${name}] ${logEntry.args[0]}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * @typedef {Object} AddModuleResult\n   * @property {Module} module the added or existing module\n   * @property {boolean} issuer was this the first request for this module\n   * @property {boolean} build should the module be build\n   * @property {boolean} dependencies should dependencies be walked\n   */\n\n  /**\n   * @param {Module} module module to be added that was created\n   * @param {any=} cacheGroup cacheGroup it is apart of\n   * @returns {AddModuleResult} returns meta about whether or not the module had built\n   * had an issuer, or any dependnecies\n   */\n  addModule(module, cacheGroup) {\n    const identifier = module.identifier();\n    const alreadyAddedModule = this._modules.get(identifier);\n    if (alreadyAddedModule) {\n      return {\n        module: alreadyAddedModule,\n        issuer: false,\n        build: false,\n        dependencies: false\n      };\n    }\n    const cacheName = (cacheGroup || \"m\") + identifier;\n    if (this.cache && this.cache[cacheName]) {\n      const cacheModule = this.cache[cacheName];\n      if (typeof cacheModule.updateCacheModule === \"function\") {\n        cacheModule.updateCacheModule(module);\n      }\n      let rebuild = true;\n      if (this.fileTimestamps && this.contextTimestamps) {\n        rebuild = cacheModule.needRebuild(this.fileTimestamps, this.contextTimestamps);\n      }\n      if (!rebuild) {\n        cacheModule.disconnect();\n        this._modules.set(identifier, cacheModule);\n        this.modules.push(cacheModule);\n        for (const err of cacheModule.errors) {\n          this.errors.push(err);\n        }\n        for (const err of cacheModule.warnings) {\n          this.warnings.push(err);\n        }\n        return {\n          module: cacheModule,\n          issuer: true,\n          build: false,\n          dependencies: true\n        };\n      }\n      cacheModule.unbuild();\n      module = cacheModule;\n    }\n    this._modules.set(identifier, module);\n    if (this.cache) {\n      this.cache[cacheName] = module;\n    }\n    this.modules.push(module);\n    return {\n      module: module,\n      issuer: true,\n      build: true,\n      dependencies: true\n    };\n  }\n\n  /**\n   * Fetches a module from a compilation by its identifier\n   * @param {Module} module the module provided\n   * @returns {Module} the module requested\n   */\n  getModule(module) {\n    const identifier = module.identifier();\n    return this._modules.get(identifier);\n  }\n\n  /**\n   * Attempts to search for a module by its identifier\n   * @param {string} identifier identifier (usually path) for module\n   * @returns {Module|undefined} attempt to search for module and return it, else undefined\n   */\n  findModule(identifier) {\n    return this._modules.get(identifier);\n  }\n\n  /**\n   * @param {Module} module module with its callback list\n   * @param {Callback} callback the callback function\n   * @returns {void}\n   */\n  waitForBuildingFinished(module, callback) {\n    let callbackList = this._buildingModules.get(module);\n    if (callbackList) {\n      callbackList.push(() => callback());\n    } else {\n      process.nextTick(callback);\n    }\n  }\n\n  /**\n   * Builds the module object\n   *\n   * @param {Module} module module to be built\n   * @param {boolean} optional optional flag\n   * @param {Module=} origin origin module this module build was requested from\n   * @param {Dependency[]=} dependencies optional dependencies from the module to be built\n   * @param {TODO} thisCallback the callback\n   * @returns {TODO} returns the callback function with results\n   */\n  buildModule(module, optional, origin, dependencies, thisCallback) {\n    let callbackList = this._buildingModules.get(module);\n    if (callbackList) {\n      callbackList.push(thisCallback);\n      return;\n    }\n    this._buildingModules.set(module, callbackList = [thisCallback]);\n    const callback = err => {\n      this._buildingModules.delete(module);\n      for (const cb of callbackList) {\n        cb(err);\n      }\n    };\n    this.hooks.buildModule.call(module);\n    module.build(this.options, this, this.resolverFactory.get(\"normal\", module.resolveOptions), this.inputFileSystem, error => {\n      const errors = module.errors;\n      for (let indexError = 0; indexError < errors.length; indexError++) {\n        const err = errors[indexError];\n        err.origin = origin;\n        err.dependencies = dependencies;\n        if (optional) {\n          this.warnings.push(err);\n        } else {\n          this.errors.push(err);\n        }\n      }\n      const warnings = module.warnings;\n      for (let indexWarning = 0; indexWarning < warnings.length; indexWarning++) {\n        const war = warnings[indexWarning];\n        war.origin = origin;\n        war.dependencies = dependencies;\n        this.warnings.push(war);\n      }\n      const originalMap = module.dependencies.reduce((map, v, i) => {\n        map.set(v, i);\n        return map;\n      }, new Map());\n      module.dependencies.sort((a, b) => {\n        const cmp = compareLocations(a.loc, b.loc);\n        if (cmp) return cmp;\n        return originalMap.get(a) - originalMap.get(b);\n      });\n      if (error) {\n        this.hooks.failedModule.call(module, error);\n        return callback(error);\n      }\n      this.hooks.succeedModule.call(module);\n      return callback();\n    });\n  }\n\n  /**\n   * @param {Module} module to be processed for deps\n   * @param {ModuleCallback} callback callback to be triggered\n   * @returns {void}\n   */\n  processModuleDependencies(module, callback) {\n    const dependencies = new Map();\n    const addDependency = dep => {\n      const resourceIdent = dep.getResourceIdentifier();\n      if (resourceIdent) {\n        const factory = this.dependencyFactories.get(dep.constructor);\n        if (factory === undefined) {\n          throw new Error(`No module factory available for dependency type: ${dep.constructor.name}`);\n        }\n        let innerMap = dependencies.get(factory);\n        if (innerMap === undefined) {\n          dependencies.set(factory, innerMap = new Map());\n        }\n        let list = innerMap.get(resourceIdent);\n        if (list === undefined) innerMap.set(resourceIdent, list = []);\n        list.push(dep);\n      }\n    };\n    const addDependenciesBlock = block => {\n      if (block.dependencies) {\n        iterationOfArrayCallback(block.dependencies, addDependency);\n      }\n      if (block.blocks) {\n        iterationOfArrayCallback(block.blocks, addDependenciesBlock);\n      }\n      if (block.variables) {\n        iterationBlockVariable(block.variables, addDependency);\n      }\n    };\n    try {\n      addDependenciesBlock(module);\n    } catch (e) {\n      callback(e);\n    }\n    const sortedDependencies = [];\n    for (const pair1 of dependencies) {\n      for (const pair2 of pair1[1]) {\n        sortedDependencies.push({\n          factory: pair1[0],\n          dependencies: pair2[1]\n        });\n      }\n    }\n    this.addModuleDependencies(module, sortedDependencies, this.bail, null, true, callback);\n  }\n\n  /**\n   * @param {Module} module module to add deps to\n   * @param {SortedDependency[]} dependencies set of sorted dependencies to iterate through\n   * @param {(boolean|null)=} bail whether to bail or not\n   * @param {TODO} cacheGroup optional cacheGroup\n   * @param {boolean} recursive whether it is recursive traversal\n   * @param {function} callback callback for when dependencies are finished being added\n   * @returns {void}\n   */\n  addModuleDependencies(module, dependencies, bail, cacheGroup, recursive, callback) {\n    const start = this.profile && Date.now();\n    const currentProfile = this.profile && {};\n    asyncLib.forEach(dependencies, (item, callback) => {\n      const dependencies = item.dependencies;\n      const errorAndCallback = err => {\n        err.origin = module;\n        err.dependencies = dependencies;\n        this.errors.push(err);\n        if (bail) {\n          callback(err);\n        } else {\n          callback();\n        }\n      };\n      const warningAndCallback = err => {\n        err.origin = module;\n        this.warnings.push(err);\n        callback();\n      };\n      const semaphore = this.semaphore;\n      semaphore.acquire(() => {\n        const factory = item.factory;\n        factory.create({\n          contextInfo: {\n            issuer: module.nameForCondition && module.nameForCondition(),\n            compiler: this.compiler.name\n          },\n          resolveOptions: module.resolveOptions,\n          context: module.context,\n          dependencies: dependencies\n        }, (err, dependentModule) => {\n          let afterFactory;\n          const isOptional = () => {\n            return dependencies.every(d => d.optional);\n          };\n          const errorOrWarningAndCallback = err => {\n            if (isOptional()) {\n              return warningAndCallback(err);\n            } else {\n              return errorAndCallback(err);\n            }\n          };\n          if (err) {\n            semaphore.release();\n            return errorOrWarningAndCallback(new ModuleNotFoundError(module, err));\n          }\n          if (!dependentModule) {\n            semaphore.release();\n            return process.nextTick(callback);\n          }\n          if (currentProfile) {\n            afterFactory = Date.now();\n            currentProfile.factory = afterFactory - start;\n          }\n          const iterationDependencies = depend => {\n            for (let index = 0; index < depend.length; index++) {\n              const dep = depend[index];\n              dep.module = dependentModule;\n              dependentModule.addReason(module, dep);\n            }\n          };\n          const addModuleResult = this.addModule(dependentModule, cacheGroup);\n          dependentModule = addModuleResult.module;\n          iterationDependencies(dependencies);\n          const afterBuild = () => {\n            if (recursive && addModuleResult.dependencies) {\n              this.processModuleDependencies(dependentModule, callback);\n            } else {\n              return callback();\n            }\n          };\n          if (addModuleResult.issuer) {\n            if (currentProfile) {\n              dependentModule.profile = currentProfile;\n            }\n            dependentModule.issuer = module;\n          } else {\n            if (this.profile) {\n              if (module.profile) {\n                const time = Date.now() - start;\n                if (!module.profile.dependencies || time > module.profile.dependencies) {\n                  module.profile.dependencies = time;\n                }\n              }\n            }\n          }\n          if (addModuleResult.build) {\n            this.buildModule(dependentModule, isOptional(), module, dependencies, err => {\n              if (err) {\n                semaphore.release();\n                return errorOrWarningAndCallback(err);\n              }\n              if (currentProfile) {\n                const afterBuilding = Date.now();\n                currentProfile.building = afterBuilding - afterFactory;\n              }\n              semaphore.release();\n              afterBuild();\n            });\n          } else {\n            semaphore.release();\n            this.waitForBuildingFinished(dependentModule, afterBuild);\n          }\n        });\n      });\n    }, err => {\n      // In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n      // errors are created inside closures that keep a reference to the Compilation, so errors are\n      // leaking the Compilation object.\n\n      if (err) {\n        // eslint-disable-next-line no-self-assign\n        err.stack = err.stack;\n        return callback(err);\n      }\n      return process.nextTick(callback);\n    });\n  }\n\n  /**\n   *\n   * @param {string} context context string path\n   * @param {Dependency} dependency dependency used to create Module chain\n   * @param {OnModuleCallback} onModule function invoked on modules creation\n   * @param {ModuleChainCallback} callback callback for when module chain is complete\n   * @returns {void} will throw if dependency instance is not a valid Dependency\n   */\n  _addModuleChain(context, dependency, onModule, callback) {\n    const start = this.profile && Date.now();\n    const currentProfile = this.profile && {};\n    const errorAndCallback = this.bail ? err => {\n      callback(err);\n    } : err => {\n      err.dependencies = [dependency];\n      this.errors.push(err);\n      callback();\n    };\n    if (typeof dependency !== \"object\" || dependency === null || !dependency.constructor) {\n      throw new Error(\"Parameter 'dependency' must be a Dependency\");\n    }\n    const Dep = /** @type {DepConstructor} */dependency.constructor;\n    const moduleFactory = this.dependencyFactories.get(Dep);\n    if (!moduleFactory) {\n      throw new Error(`No dependency factory available for this dependency type: ${dependency.constructor.name}`);\n    }\n    this.semaphore.acquire(() => {\n      moduleFactory.create({\n        contextInfo: {\n          issuer: \"\",\n          compiler: this.compiler.name\n        },\n        context: context,\n        dependencies: [dependency]\n      }, (err, module) => {\n        if (err) {\n          this.semaphore.release();\n          return errorAndCallback(new EntryModuleNotFoundError(err));\n        }\n        let afterFactory;\n        if (currentProfile) {\n          afterFactory = Date.now();\n          currentProfile.factory = afterFactory - start;\n        }\n        const addModuleResult = this.addModule(module);\n        module = addModuleResult.module;\n        onModule(module);\n        dependency.module = module;\n        module.addReason(null, dependency);\n        const afterBuild = () => {\n          if (addModuleResult.dependencies) {\n            this.processModuleDependencies(module, err => {\n              if (err) return callback(err);\n              callback(null, module);\n            });\n          } else {\n            return callback(null, module);\n          }\n        };\n        if (addModuleResult.issuer) {\n          if (currentProfile) {\n            module.profile = currentProfile;\n          }\n        }\n        if (addModuleResult.build) {\n          this.buildModule(module, false, null, null, err => {\n            if (err) {\n              this.semaphore.release();\n              return errorAndCallback(err);\n            }\n            if (currentProfile) {\n              const afterBuilding = Date.now();\n              currentProfile.building = afterBuilding - afterFactory;\n            }\n            this.semaphore.release();\n            afterBuild();\n          });\n        } else {\n          this.semaphore.release();\n          this.waitForBuildingFinished(module, afterBuild);\n        }\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {string} context context path for entry\n   * @param {Dependency} entry entry dependency being created\n   * @param {string} name name of entry\n   * @param {ModuleCallback} callback callback function\n   * @returns {void} returns\n   */\n  addEntry(context, entry, name, callback) {\n    this.hooks.addEntry.call(entry, name);\n    const slot = {\n      name: name,\n      // TODO webpack 5 remove `request`\n      request: null,\n      module: null\n    };\n    if (entry instanceof ModuleDependency) {\n      slot.request = entry.request;\n    }\n\n    // TODO webpack 5: merge modules instead when multiple entry modules are supported\n    const idx = this._preparedEntrypoints.findIndex(slot => slot.name === name);\n    if (idx >= 0) {\n      // Overwrite existing entrypoint\n      this._preparedEntrypoints[idx] = slot;\n    } else {\n      this._preparedEntrypoints.push(slot);\n    }\n    this._addModuleChain(context, entry, module => {\n      this.entries.push(module);\n    }, (err, module) => {\n      if (err) {\n        this.hooks.failedEntry.call(entry, name, err);\n        return callback(err);\n      }\n      if (module) {\n        slot.module = module;\n      } else {\n        const idx = this._preparedEntrypoints.indexOf(slot);\n        if (idx >= 0) {\n          this._preparedEntrypoints.splice(idx, 1);\n        }\n      }\n      this.hooks.succeedEntry.call(entry, name, module);\n      return callback(null, module);\n    });\n  }\n\n  /**\n   * @param {string} context context path string\n   * @param {Dependency} dependency dep used to create module\n   * @param {ModuleCallback} callback module callback sending module up a level\n   * @returns {void}\n   */\n  prefetch(context, dependency, callback) {\n    this._addModuleChain(context, dependency, module => {\n      module.prefetched = true;\n    }, callback);\n  }\n\n  /**\n   * @param {Module} module module to be rebuilt\n   * @param {Callback} thisCallback callback when module finishes rebuilding\n   * @returns {void}\n   */\n  rebuildModule(module, thisCallback) {\n    let callbackList = this._rebuildingModules.get(module);\n    if (callbackList) {\n      callbackList.push(thisCallback);\n      return;\n    }\n    this._rebuildingModules.set(module, callbackList = [thisCallback]);\n    const callback = err => {\n      this._rebuildingModules.delete(module);\n      for (const cb of callbackList) {\n        cb(err);\n      }\n    };\n    this.hooks.rebuildModule.call(module);\n    const oldDependencies = module.dependencies.slice();\n    const oldVariables = module.variables.slice();\n    const oldBlocks = module.blocks.slice();\n    module.unbuild();\n    this.buildModule(module, false, module, null, err => {\n      if (err) {\n        this.hooks.finishRebuildingModule.call(module);\n        return callback(err);\n      }\n      this.processModuleDependencies(module, err => {\n        if (err) return callback(err);\n        this.removeReasonsOfDependencyBlock(module, {\n          dependencies: oldDependencies,\n          variables: oldVariables,\n          blocks: oldBlocks\n        });\n        this.hooks.finishRebuildingModule.call(module);\n        callback();\n      });\n    });\n  }\n  finish(callback) {\n    const modules = this.modules;\n    this.hooks.finishModules.callAsync(modules, err => {\n      if (err) return callback(err);\n      for (let index = 0; index < modules.length; index++) {\n        const module = modules[index];\n        this.reportDependencyErrorsAndWarnings(module, [module]);\n      }\n      callback();\n    });\n  }\n  unseal() {\n    this.hooks.unseal.call();\n    this.chunks.length = 0;\n    this.chunkGroups.length = 0;\n    this.namedChunks.clear();\n    this.namedChunkGroups.clear();\n    this.additionalChunkAssets.length = 0;\n    this.assets = {};\n    this.assetsInfo.clear();\n    for (const module of this.modules) {\n      module.unseal();\n    }\n  }\n\n  /**\n   * @param {Callback} callback signals when the seal method is finishes\n   * @returns {void}\n   */\n  seal(callback) {\n    this.hooks.seal.call();\n    while (this.hooks.optimizeDependenciesBasic.call(this.modules) || this.hooks.optimizeDependencies.call(this.modules) || this.hooks.optimizeDependenciesAdvanced.call(this.modules)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeDependencies.call(this.modules);\n    this.hooks.beforeChunks.call();\n    for (const preparedEntrypoint of this._preparedEntrypoints) {\n      const module = preparedEntrypoint.module;\n      const name = preparedEntrypoint.name;\n      const chunk = this.addChunk(name);\n      const entrypoint = new Entrypoint(name);\n      entrypoint.setRuntimeChunk(chunk);\n      entrypoint.addOrigin(null, name, preparedEntrypoint.request);\n      this.namedChunkGroups.set(name, entrypoint);\n      this.entrypoints.set(name, entrypoint);\n      this.chunkGroups.push(entrypoint);\n      GraphHelpers.connectChunkGroupAndChunk(entrypoint, chunk);\n      GraphHelpers.connectChunkAndModule(chunk, module);\n      chunk.entryModule = module;\n      chunk.name = name;\n      this.assignDepth(module);\n    }\n    buildChunkGraph(this, /** @type {Entrypoint[]} */this.chunkGroups.slice());\n    this.sortModules(this.modules);\n    this.hooks.afterChunks.call(this.chunks);\n    this.hooks.optimize.call();\n    while (this.hooks.optimizeModulesBasic.call(this.modules) || this.hooks.optimizeModules.call(this.modules) || this.hooks.optimizeModulesAdvanced.call(this.modules)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeModules.call(this.modules);\n    while (this.hooks.optimizeChunksBasic.call(this.chunks, this.chunkGroups) || this.hooks.optimizeChunks.call(this.chunks, this.chunkGroups) || this.hooks.optimizeChunksAdvanced.call(this.chunks, this.chunkGroups)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n    this.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n      if (err) {\n        return callback(err);\n      }\n      this.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n      while (this.hooks.optimizeChunkModulesBasic.call(this.chunks, this.modules) || this.hooks.optimizeChunkModules.call(this.chunks, this.modules) || this.hooks.optimizeChunkModulesAdvanced.call(this.chunks, this.modules)) {\n        /* empty */\n      }\n      this.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n      const shouldRecord = this.hooks.shouldRecord.call() !== false;\n      this.hooks.reviveModules.call(this.modules, this.records);\n      this.hooks.optimizeModuleOrder.call(this.modules);\n      this.hooks.advancedOptimizeModuleOrder.call(this.modules);\n      this.hooks.beforeModuleIds.call(this.modules);\n      this.hooks.moduleIds.call(this.modules);\n      this.applyModuleIds();\n      this.hooks.optimizeModuleIds.call(this.modules);\n      this.hooks.afterOptimizeModuleIds.call(this.modules);\n      this.sortItemsWithModuleIds();\n      this.hooks.reviveChunks.call(this.chunks, this.records);\n      this.hooks.optimizeChunkOrder.call(this.chunks);\n      this.hooks.beforeChunkIds.call(this.chunks);\n      this.applyChunkIds();\n      this.hooks.optimizeChunkIds.call(this.chunks);\n      this.hooks.afterOptimizeChunkIds.call(this.chunks);\n      this.sortItemsWithChunkIds();\n      if (shouldRecord) {\n        this.hooks.recordModules.call(this.modules, this.records);\n        this.hooks.recordChunks.call(this.chunks, this.records);\n      }\n      this.hooks.beforeHash.call();\n      this.createHash();\n      this.hooks.afterHash.call();\n      if (shouldRecord) {\n        this.hooks.recordHash.call(this.records);\n      }\n      this.hooks.beforeModuleAssets.call();\n      this.createModuleAssets();\n      if (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n        this.hooks.beforeChunkAssets.call();\n        this.createChunkAssets();\n      }\n      this.hooks.additionalChunkAssets.call(this.chunks);\n      this.summarizeDependencies();\n      if (shouldRecord) {\n        this.hooks.record.call(this, this.records);\n      }\n      this.hooks.additionalAssets.callAsync(err => {\n        if (err) {\n          return callback(err);\n        }\n        this.hooks.optimizeChunkAssets.callAsync(this.chunks, err => {\n          if (err) {\n            return callback(err);\n          }\n          this.hooks.afterOptimizeChunkAssets.call(this.chunks);\n          this.hooks.optimizeAssets.callAsync(this.assets, err => {\n            if (err) {\n              return callback(err);\n            }\n            this.hooks.afterOptimizeAssets.call(this.assets);\n            if (this.hooks.needAdditionalSeal.call()) {\n              this.unseal();\n              return this.seal(callback);\n            }\n            return this.hooks.afterSeal.callAsync(callback);\n          });\n        });\n      });\n    });\n  }\n\n  /**\n   * @param {Module[]} modules the modules array on compilation to perform the sort for\n   * @returns {void}\n   */\n  sortModules(modules) {\n    // TODO webpack 5: this should only be enabled when `moduleIds: \"natural\"`\n    // TODO move it into a plugin (NaturalModuleIdsPlugin) and use this in WebpackOptionsApply\n    // TODO remove this method\n    modules.sort(byIndexOrIdentifier);\n  }\n\n  /**\n   * @param {Module} module moulde to report from\n   * @param {DependenciesBlock[]} blocks blocks to report from\n   * @returns {void}\n   */\n  reportDependencyErrorsAndWarnings(module, blocks) {\n    for (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n      const block = blocks[indexBlock];\n      const dependencies = block.dependencies;\n      for (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n        const d = dependencies[indexDep];\n        const warnings = d.getWarnings();\n        if (warnings) {\n          for (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n            const w = warnings[indexWar];\n            const warning = new ModuleDependencyWarning(module, w, d.loc);\n            this.warnings.push(warning);\n          }\n        }\n        const errors = d.getErrors();\n        if (errors) {\n          for (let indexErr = 0; indexErr < errors.length; indexErr++) {\n            const e = errors[indexErr];\n            const error = new ModuleDependencyError(module, e, d.loc);\n            this.errors.push(error);\n          }\n        }\n      }\n      this.reportDependencyErrorsAndWarnings(module, block.blocks);\n    }\n  }\n\n  /**\n   * @param {TODO} groupOptions options for the chunk group\n   * @param {Module} module the module the references the chunk group\n   * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n   * @param {string} request the request from which the the chunk group is referenced\n   * @returns {ChunkGroup} the new or existing chunk group\n   */\n  addChunkInGroup(groupOptions, module, loc, request) {\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    }\n    const name = groupOptions.name;\n    if (name) {\n      const chunkGroup = this.namedChunkGroups.get(name);\n      if (chunkGroup !== undefined) {\n        chunkGroup.addOptions(groupOptions);\n        if (module) {\n          chunkGroup.addOrigin(module, loc, request);\n        }\n        return chunkGroup;\n      }\n    }\n    const chunkGroup = new ChunkGroup(groupOptions);\n    if (module) chunkGroup.addOrigin(module, loc, request);\n    const chunk = this.addChunk(name);\n    GraphHelpers.connectChunkGroupAndChunk(chunkGroup, chunk);\n    this.chunkGroups.push(chunkGroup);\n    if (name) {\n      this.namedChunkGroups.set(name, chunkGroup);\n    }\n    return chunkGroup;\n  }\n\n  /**\n   * This method first looks to see if a name is provided for a new chunk,\n   * and first looks to see if any named chunks already exist and reuse that chunk instead.\n   *\n   * @param {string=} name optional chunk name to be provided\n   * @returns {Chunk} create a chunk (invoked during seal event)\n   */\n  addChunk(name) {\n    if (name) {\n      const chunk = this.namedChunks.get(name);\n      if (chunk !== undefined) {\n        return chunk;\n      }\n    }\n    const chunk = new Chunk(name);\n    this.chunks.push(chunk);\n    if (name) {\n      this.namedChunks.set(name, chunk);\n    }\n    return chunk;\n  }\n\n  /**\n   * @param {Module} module module to assign depth\n   * @returns {void}\n   */\n  assignDepth(module) {\n    const queue = new Set([module]);\n    let depth;\n    module.depth = 0;\n\n    /**\n     * @param {Module} module module for processeing\n     * @returns {void}\n     */\n    const enqueueJob = module => {\n      const d = module.depth;\n      if (typeof d === \"number\" && d <= depth) return;\n      queue.add(module);\n      module.depth = depth;\n    };\n\n    /**\n     * @param {Dependency} dependency dependency to assign depth to\n     * @returns {void}\n     */\n    const assignDepthToDependency = dependency => {\n      if (dependency.module) {\n        enqueueJob(dependency.module);\n      }\n    };\n\n    /**\n     * @param {DependenciesBlock} block block to assign depth to\n     * @returns {void}\n     */\n    const assignDepthToDependencyBlock = block => {\n      if (block.variables) {\n        iterationBlockVariable(block.variables, assignDepthToDependency);\n      }\n      if (block.dependencies) {\n        iterationOfArrayCallback(block.dependencies, assignDepthToDependency);\n      }\n      if (block.blocks) {\n        iterationOfArrayCallback(block.blocks, assignDepthToDependencyBlock);\n      }\n    };\n    for (module of queue) {\n      queue.delete(module);\n      depth = module.depth;\n      depth++;\n      assignDepthToDependencyBlock(module);\n    }\n  }\n\n  /**\n   * @param {Module} module the module containing the dependency\n   * @param {Dependency} dependency the dependency\n   * @returns {DependencyReference} a reference for the dependency\n   */\n  getDependencyReference(module, dependency) {\n    // TODO remove dep.getReference existence check in webpack 5\n    if (typeof dependency.getReference !== \"function\") return null;\n    const ref = dependency.getReference();\n    if (!ref) return null;\n    return this.hooks.dependencyReference.call(ref, dependency, module);\n  }\n\n  /**\n   *\n   * @param {Module} module module relationship for removal\n   * @param {DependenciesBlockLike} block //TODO: good description\n   * @returns {void}\n   */\n  removeReasonsOfDependencyBlock(module, block) {\n    const iteratorDependency = d => {\n      if (!d.module) {\n        return;\n      }\n      if (d.module.removeReason(module, d)) {\n        for (const chunk of d.module.chunksIterable) {\n          this.patchChunksAfterReasonRemoval(d.module, chunk);\n        }\n      }\n    };\n    if (block.blocks) {\n      iterationOfArrayCallback(block.blocks, block => this.removeReasonsOfDependencyBlock(module, block));\n    }\n    if (block.dependencies) {\n      iterationOfArrayCallback(block.dependencies, iteratorDependency);\n    }\n    if (block.variables) {\n      iterationBlockVariable(block.variables, iteratorDependency);\n    }\n  }\n\n  /**\n   * @param {Module} module module to patch tie\n   * @param {Chunk} chunk chunk to patch tie\n   * @returns {void}\n   */\n  patchChunksAfterReasonRemoval(module, chunk) {\n    if (!module.hasReasons()) {\n      this.removeReasonsOfDependencyBlock(module, module);\n    }\n    if (!module.hasReasonForChunk(chunk)) {\n      if (module.removeChunk(chunk)) {\n        this.removeChunkFromDependencies(module, chunk);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {DependenciesBlock} block block tie for Chunk\n   * @param {Chunk} chunk chunk to remove from dep\n   * @returns {void}\n   */\n  removeChunkFromDependencies(block, chunk) {\n    const iteratorDependency = d => {\n      if (!d.module) {\n        return;\n      }\n      this.patchChunksAfterReasonRemoval(d.module, chunk);\n    };\n    const blocks = block.blocks;\n    for (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n      const asyncBlock = blocks[indexBlock];\n      // Grab all chunks from the first Block's AsyncDepBlock\n      const chunks = asyncBlock.chunkGroup.chunks;\n      // For each chunk in chunkGroup\n      for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n        const iteratedChunk = chunks[indexChunk];\n        asyncBlock.chunkGroup.removeChunk(iteratedChunk);\n        asyncBlock.chunkGroup.removeParent(iteratedChunk);\n        // Recurse\n        this.removeChunkFromDependencies(block, iteratedChunk);\n      }\n    }\n    if (block.dependencies) {\n      iterationOfArrayCallback(block.dependencies, iteratorDependency);\n    }\n    if (block.variables) {\n      iterationBlockVariable(block.variables, iteratorDependency);\n    }\n  }\n  applyModuleIds() {\n    const unusedIds = [];\n    let nextFreeModuleId = 0;\n    const usedIds = new Set();\n    if (this.usedModuleIds) {\n      for (const id of this.usedModuleIds) {\n        usedIds.add(id);\n      }\n    }\n    const modules1 = this.modules;\n    for (let indexModule1 = 0; indexModule1 < modules1.length; indexModule1++) {\n      const module1 = modules1[indexModule1];\n      if (module1.id !== null) {\n        usedIds.add(module1.id);\n      }\n    }\n    if (usedIds.size > 0) {\n      let usedIdMax = -1;\n      for (const usedIdKey of usedIds) {\n        if (typeof usedIdKey !== \"number\") {\n          continue;\n        }\n        usedIdMax = Math.max(usedIdMax, usedIdKey);\n      }\n      let lengthFreeModules = nextFreeModuleId = usedIdMax + 1;\n      while (lengthFreeModules--) {\n        if (!usedIds.has(lengthFreeModules)) {\n          unusedIds.push(lengthFreeModules);\n        }\n      }\n    }\n    const modules2 = this.modules;\n    for (let indexModule2 = 0; indexModule2 < modules2.length; indexModule2++) {\n      const module2 = modules2[indexModule2];\n      if (module2.id === null) {\n        if (unusedIds.length > 0) {\n          module2.id = unusedIds.pop();\n        } else {\n          module2.id = nextFreeModuleId++;\n        }\n      }\n    }\n  }\n  applyChunkIds() {\n    /** @type {Set<number>} */\n    const usedIds = new Set();\n\n    // Get used ids from usedChunkIds property (i. e. from records)\n    if (this.usedChunkIds) {\n      for (const id of this.usedChunkIds) {\n        if (typeof id !== \"number\") {\n          continue;\n        }\n        usedIds.add(id);\n      }\n    }\n\n    // Get used ids from existing chunks\n    const chunks = this.chunks;\n    for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n      const chunk = chunks[indexChunk];\n      const usedIdValue = chunk.id;\n      if (typeof usedIdValue !== \"number\") {\n        continue;\n      }\n      usedIds.add(usedIdValue);\n    }\n\n    // Calculate maximum assigned chunk id\n    let nextFreeChunkId = -1;\n    for (const id of usedIds) {\n      nextFreeChunkId = Math.max(nextFreeChunkId, id);\n    }\n    nextFreeChunkId++;\n\n    // Determine free chunk ids from 0 to maximum\n    /** @type {number[]} */\n    const unusedIds = [];\n    if (nextFreeChunkId > 0) {\n      let index = nextFreeChunkId;\n      while (index--) {\n        if (!usedIds.has(index)) {\n          unusedIds.push(index);\n        }\n      }\n    }\n\n    // Assign ids to chunk which has no id\n    for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n      const chunk = chunks[indexChunk];\n      if (chunk.id === null) {\n        if (unusedIds.length > 0) {\n          chunk.id = unusedIds.pop();\n        } else {\n          chunk.id = nextFreeChunkId++;\n        }\n      }\n      if (!chunk.ids) {\n        chunk.ids = [chunk.id];\n      }\n    }\n  }\n  sortItemsWithModuleIds() {\n    this.modules.sort(byIdOrIdentifier);\n    const modules = this.modules;\n    for (let indexModule = 0; indexModule < modules.length; indexModule++) {\n      modules[indexModule].sortItems(false);\n    }\n    const chunks = this.chunks;\n    for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n      chunks[indexChunk].sortItems();\n    }\n    chunks.sort((a, b) => a.compareTo(b));\n  }\n  sortItemsWithChunkIds() {\n    for (const chunkGroup of this.chunkGroups) {\n      chunkGroup.sortItems();\n    }\n    this.chunks.sort(byId);\n    for (let indexModule = 0; indexModule < this.modules.length; indexModule++) {\n      this.modules[indexModule].sortItems(true);\n    }\n    const chunks = this.chunks;\n    for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n      chunks[indexChunk].sortItems();\n    }\n\n    /**\n     * Used to sort errors and warnings in compilation. this.warnings, and\n     * this.errors contribute to the compilation hash and therefore should be\n     * updated whenever other references (having a chunk id) are sorted. This preserves the hash\n     * integrity\n     *\n     * @param {WebpackError} a first WebpackError instance (including subclasses)\n     * @param {WebpackError} b second WebpackError instance (including subclasses)\n     * @returns {-1|0|1} sort order index\n     */\n    const byMessage = (a, b) => {\n      const ma = `${a.message}`;\n      const mb = `${b.message}`;\n      if (ma < mb) return -1;\n      if (mb < ma) return 1;\n      return 0;\n    };\n    this.errors.sort(byMessage);\n    this.warnings.sort(byMessage);\n    this.children.sort(byNameOrHash);\n  }\n  summarizeDependencies() {\n    this.fileDependencies = new SortableSet(this.compilationDependencies);\n    this.contextDependencies = new SortableSet();\n    this.missingDependencies = new SortableSet();\n    for (let indexChildren = 0; indexChildren < this.children.length; indexChildren++) {\n      const child = this.children[indexChildren];\n      addAllToSet(this.fileDependencies, child.fileDependencies);\n      addAllToSet(this.contextDependencies, child.contextDependencies);\n      addAllToSet(this.missingDependencies, child.missingDependencies);\n    }\n    for (let indexModule = 0; indexModule < this.modules.length; indexModule++) {\n      const module = this.modules[indexModule];\n      if (module.buildInfo.fileDependencies) {\n        addAllToSet(this.fileDependencies, module.buildInfo.fileDependencies);\n      }\n      if (module.buildInfo.contextDependencies) {\n        addAllToSet(this.contextDependencies, module.buildInfo.contextDependencies);\n      }\n    }\n    for (const error of this.errors) {\n      if (typeof error.missing === \"object\" && error.missing && error.missing[Symbol.iterator]) {\n        addAllToSet(this.missingDependencies, error.missing);\n      }\n    }\n    this.fileDependencies.sort();\n    this.contextDependencies.sort();\n    this.missingDependencies.sort();\n  }\n  createHash() {\n    const outputOptions = this.outputOptions;\n    const hashFunction = outputOptions.hashFunction;\n    const hashDigest = outputOptions.hashDigest;\n    const hashDigestLength = outputOptions.hashDigestLength;\n    const hash = createHash(hashFunction);\n    if (outputOptions.hashSalt) {\n      hash.update(outputOptions.hashSalt);\n    }\n    this.mainTemplate.updateHash(hash);\n    this.chunkTemplate.updateHash(hash);\n    for (const key of Object.keys(this.moduleTemplates).sort()) {\n      this.moduleTemplates[key].updateHash(hash);\n    }\n    for (const child of this.children) {\n      hash.update(child.hash);\n    }\n    for (const warning of this.warnings) {\n      hash.update(`${warning.message}`);\n    }\n    for (const error of this.errors) {\n      hash.update(`${error.message}`);\n    }\n    const modules = this.modules;\n    for (let i = 0; i < modules.length; i++) {\n      const module = modules[i];\n      const moduleHash = createHash(hashFunction);\n      module.updateHash(moduleHash);\n      module.hash = /** @type {string} */moduleHash.digest(hashDigest);\n      module.renderedHash = module.hash.substr(0, hashDigestLength);\n    }\n    // clone needed as sort below is inplace mutation\n    const chunks = this.chunks.slice();\n    /**\n     * sort here will bring all \"falsy\" values to the beginning\n     * this is needed as the \"hasRuntime()\" chunks are dependent on the\n     * hashes of the non-runtime chunks.\n     */\n    chunks.sort((a, b) => {\n      const aEntry = a.hasRuntime();\n      const bEntry = b.hasRuntime();\n      if (aEntry && !bEntry) return 1;\n      if (!aEntry && bEntry) return -1;\n      return byId(a, b);\n    });\n    for (let i = 0; i < chunks.length; i++) {\n      const chunk = chunks[i];\n      const chunkHash = createHash(hashFunction);\n      try {\n        if (outputOptions.hashSalt) {\n          chunkHash.update(outputOptions.hashSalt);\n        }\n        chunk.updateHash(chunkHash);\n        const template = chunk.hasRuntime() ? this.mainTemplate : this.chunkTemplate;\n        template.updateHashForChunk(chunkHash, chunk, this.moduleTemplates.javascript, this.dependencyTemplates);\n        this.hooks.chunkHash.call(chunk, chunkHash);\n        chunk.hash = /** @type {string} */chunkHash.digest(hashDigest);\n        hash.update(chunk.hash);\n        chunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n        this.hooks.contentHash.call(chunk);\n      } catch (err) {\n        this.errors.push(new ChunkRenderError(chunk, \"\", err));\n      }\n    }\n    this.fullHash = /** @type {string} */hash.digest(hashDigest);\n    this.hash = this.fullHash.substr(0, hashDigestLength);\n  }\n\n  /**\n   * @param {string} update extra information\n   * @returns {void}\n   */\n  modifyHash(update) {\n    const outputOptions = this.outputOptions;\n    const hashFunction = outputOptions.hashFunction;\n    const hashDigest = outputOptions.hashDigest;\n    const hashDigestLength = outputOptions.hashDigestLength;\n    const hash = createHash(hashFunction);\n    hash.update(this.fullHash);\n    hash.update(update);\n    this.fullHash = /** @type {string} */hash.digest(hashDigest);\n    this.hash = this.fullHash.substr(0, hashDigestLength);\n  }\n\n  /**\n   * @param {string} file file name\n   * @param {Source} source asset source\n   * @param {AssetInfo} assetInfo extra asset information\n   * @returns {void}\n   */\n  emitAsset(file, source, assetInfo = {}) {\n    if (this.assets[file]) {\n      if (!isSourceEqual(this.assets[file], source)) {\n        // TODO webpack 5: make this an error instead\n        this.warnings.push(new WebpackError(`Conflict: Multiple assets emit different content to the same filename ${file}`));\n        this.assets[file] = source;\n        this.assetsInfo.set(file, assetInfo);\n        return;\n      }\n      const oldInfo = this.assetsInfo.get(file);\n      this.assetsInfo.set(file, Object.assign({}, oldInfo, assetInfo));\n      return;\n    }\n    this.assets[file] = source;\n    this.assetsInfo.set(file, assetInfo);\n  }\n\n  /**\n   * @param {string} file file name\n   * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n   * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n   */\n  updateAsset(file, newSourceOrFunction, assetInfoUpdateOrFunction = undefined) {\n    if (!this.assets[file]) {\n      throw new Error(`Called Compilation.updateAsset for not existing filename ${file}`);\n    }\n    if (typeof newSourceOrFunction === \"function\") {\n      this.assets[file] = newSourceOrFunction(this.assets[file]);\n    } else {\n      this.assets[file] = newSourceOrFunction;\n    }\n    if (assetInfoUpdateOrFunction !== undefined) {\n      const oldInfo = this.assetsInfo.get(file);\n      if (typeof assetInfoUpdateOrFunction === \"function\") {\n        this.assetsInfo.set(file, assetInfoUpdateOrFunction(oldInfo || {}));\n      } else {\n        this.assetsInfo.set(file, Object.assign({}, oldInfo, assetInfoUpdateOrFunction));\n      }\n    }\n  }\n  getAssets() {\n    /** @type {Asset[]} */\n    const array = [];\n    for (const assetName of Object.keys(this.assets)) {\n      if (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n        array.push({\n          name: assetName,\n          source: this.assets[assetName],\n          info: this.assetsInfo.get(assetName) || {}\n        });\n      }\n    }\n    return array;\n  }\n\n  /**\n   * @param {string} name the name of the asset\n   * @returns {Asset | undefined} the asset or undefined when not found\n   */\n  getAsset(name) {\n    if (!Object.prototype.hasOwnProperty.call(this.assets, name)) return undefined;\n    return {\n      name,\n      source: this.assets[name],\n      info: this.assetsInfo.get(name) || {}\n    };\n  }\n  createModuleAssets() {\n    for (let i = 0; i < this.modules.length; i++) {\n      const module = this.modules[i];\n      if (module.buildInfo.assets) {\n        const assetsInfo = module.buildInfo.assetsInfo;\n        for (const assetName of Object.keys(module.buildInfo.assets)) {\n          const fileName = this.getPath(assetName);\n          this.emitAsset(fileName, module.buildInfo.assets[assetName], assetsInfo ? assetsInfo.get(assetName) : undefined);\n          this.hooks.moduleAsset.call(module, fileName);\n        }\n      }\n    }\n  }\n  createChunkAssets() {\n    const outputOptions = this.outputOptions;\n    const cachedSourceMap = new Map();\n    /** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n    const alreadyWrittenFiles = new Map();\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i];\n      chunk.files = [];\n      let source;\n      let file;\n      let filenameTemplate;\n      try {\n        const template = chunk.hasRuntime() ? this.mainTemplate : this.chunkTemplate;\n        const manifest = template.getRenderManifest({\n          chunk,\n          hash: this.hash,\n          fullHash: this.fullHash,\n          outputOptions,\n          moduleTemplates: this.moduleTemplates,\n          dependencyTemplates: this.dependencyTemplates\n        }); // [{ render(), filenameTemplate, pathOptions, identifier, hash }]\n        for (const fileManifest of manifest) {\n          const cacheName = fileManifest.identifier;\n          const usedHash = fileManifest.hash;\n          filenameTemplate = fileManifest.filenameTemplate;\n          const pathAndInfo = this.getPathWithInfo(filenameTemplate, fileManifest.pathOptions);\n          file = pathAndInfo.path;\n          const assetInfo = pathAndInfo.info;\n\n          // check if the same filename was already written by another chunk\n          const alreadyWritten = alreadyWrittenFiles.get(file);\n          if (alreadyWritten !== undefined) {\n            if (alreadyWritten.hash === usedHash) {\n              if (this.cache) {\n                this.cache[cacheName] = {\n                  hash: usedHash,\n                  source: alreadyWritten.source\n                };\n              }\n              chunk.files.push(file);\n              this.hooks.chunkAsset.call(chunk, file);\n              continue;\n            } else {\n              throw new Error(`Conflict: Multiple chunks emit assets to the same filename ${file}` + ` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`);\n            }\n          }\n          if (this.cache && this.cache[cacheName] && this.cache[cacheName].hash === usedHash) {\n            source = this.cache[cacheName].source;\n          } else {\n            source = fileManifest.render();\n            // Ensure that source is a cached source to avoid additional cost because of repeated access\n            if (!(source instanceof CachedSource)) {\n              const cacheEntry = cachedSourceMap.get(source);\n              if (cacheEntry) {\n                source = cacheEntry;\n              } else {\n                const cachedSource = new CachedSource(source);\n                cachedSourceMap.set(source, cachedSource);\n                source = cachedSource;\n              }\n            }\n            if (this.cache) {\n              this.cache[cacheName] = {\n                hash: usedHash,\n                source\n              };\n            }\n          }\n          this.emitAsset(file, source, assetInfo);\n          chunk.files.push(file);\n          this.hooks.chunkAsset.call(chunk, file);\n          alreadyWrittenFiles.set(file, {\n            hash: usedHash,\n            source,\n            chunk\n          });\n        }\n      } catch (err) {\n        this.errors.push(new ChunkRenderError(chunk, file || filenameTemplate, err));\n      }\n    }\n  }\n\n  /**\n   * @param {string} filename used to get asset path with hash\n   * @param {TODO=} data // TODO: figure out this param type\n   * @returns {string} interpolated path\n   */\n  getPath(filename, data) {\n    data = data || {};\n    data.hash = data.hash || this.hash;\n    return this.mainTemplate.getAssetPath(filename, data);\n  }\n\n  /**\n   * @param {string} filename used to get asset path with hash\n   * @param {TODO=} data // TODO: figure out this param type\n   * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n   */\n  getPathWithInfo(filename, data) {\n    data = data || {};\n    data.hash = data.hash || this.hash;\n    return this.mainTemplate.getAssetPathWithInfo(filename, data);\n  }\n\n  /**\n   * This function allows you to run another instance of webpack inside of webpack however as\n   * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n   * from parent (or top level compiler) and creates a child Compilation\n   *\n   * @param {string} name name of the child compiler\n   * @param {TODO} outputOptions // Need to convert config schema to types for this\n   * @param {Plugin[]} plugins webpack plugins that will be applied\n   * @returns {Compiler} creates a child Compiler instance\n   */\n  createChildCompiler(name, outputOptions, plugins) {\n    const idx = this.childrenCounters[name] || 0;\n    this.childrenCounters[name] = idx + 1;\n    return this.compiler.createChildCompiler(this, name, idx, outputOptions, plugins);\n  }\n  checkConstraints() {\n    /** @type {Set<number|string>} */\n    const usedIds = new Set();\n    const modules = this.modules;\n    for (let indexModule = 0; indexModule < modules.length; indexModule++) {\n      const moduleId = modules[indexModule].id;\n      if (moduleId === null) continue;\n      if (usedIds.has(moduleId)) {\n        throw new Error(`checkConstraints: duplicate module id ${moduleId}`);\n      }\n      usedIds.add(moduleId);\n    }\n    const chunks = this.chunks;\n    for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n      const chunk = chunks[indexChunk];\n      if (chunks.indexOf(chunk) !== indexChunk) {\n        throw new Error(`checkConstraints: duplicate chunk in compilation ${chunk.debugId}`);\n      }\n    }\n    for (const chunkGroup of this.chunkGroups) {\n      chunkGroup.checkConstraints();\n    }\n  }\n}\n\n// TODO remove in webpack 5\nCompilation.prototype.applyPlugins = util.deprecate(\n/**\n * @deprecated\n * @param {string} name Name\n * @param {any[]} args Other arguments\n * @returns {void}\n * @this {Compilation}\n */\nfunction (name, ...args) {\n  this.hooks[name.replace(/[- ]([a-z])/g, match => match[1].toUpperCase())].call(...args);\n}, \"Compilation.applyPlugins is deprecated. Use new API on `.hooks` instead\");\n\n// TODO remove in webpack 5\nObject.defineProperty(Compilation.prototype, \"moduleTemplate\", {\n  configurable: false,\n  get: util.deprecate(\n  /**\n   * @deprecated\n   * @this {Compilation}\n   * @returns {TODO} module template\n   */\n  function () {\n    return this.moduleTemplates.javascript;\n  }, \"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead\"),\n  set: util.deprecate(\n  /**\n   * @deprecated\n   * @param {ModuleTemplate} value Template value\n   * @this {Compilation}\n   * @returns {void}\n   */\n  function (value) {\n    this.moduleTemplates.javascript = value;\n  }, \"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead.\")\n});\nmodule.exports = Compilation;","map":{"version":3,"names":["asyncLib","require","util","CachedSource","Tapable","SyncHook","SyncBailHook","SyncWaterfallHook","AsyncSeriesHook","EntryModuleNotFoundError","ModuleNotFoundError","ModuleDependencyWarning","ModuleDependencyError","ChunkGroup","Chunk","Entrypoint","MainTemplate","ChunkTemplate","HotUpdateChunkTemplate","ModuleTemplate","RuntimeTemplate","ChunkRenderError","Stats","Semaphore","createHash","SortableSet","GraphHelpers","ModuleDependency","compareLocations","Logger","LogType","ErrorHelpers","buildChunkGraph","WebpackError","byId","a","b","id","byIdOrIdentifier","identA","identifier","identB","byIndexOrIdentifier","index","byNameOrHash","name","fullHash","iterationBlockVariable","variables","fn","indexVariable","length","varDep","dependencies","indexVDep","iterationOfArrayCallback","arr","addAllToSet","set","otherSet","item","add","isSourceEqual","aSource","source","bSource","Buffer","isBuffer","from","equals","Compilation","constructor","compiler","hooks","buildModule","rebuildModule","failedModule","succeedModule","addEntry","failedEntry","succeedEntry","dependencyReference","finishModules","finishRebuildingModule","unseal","seal","beforeChunks","afterChunks","optimizeDependenciesBasic","optimizeDependencies","optimizeDependenciesAdvanced","afterOptimizeDependencies","optimize","optimizeModulesBasic","optimizeModules","optimizeModulesAdvanced","afterOptimizeModules","optimizeChunksBasic","optimizeChunks","optimizeChunksAdvanced","afterOptimizeChunks","optimizeTree","afterOptimizeTree","optimizeChunkModulesBasic","optimizeChunkModules","optimizeChunkModulesAdvanced","afterOptimizeChunkModules","shouldRecord","reviveModules","optimizeModuleOrder","advancedOptimizeModuleOrder","beforeModuleIds","moduleIds","optimizeModuleIds","afterOptimizeModuleIds","reviveChunks","optimizeChunkOrder","beforeChunkIds","optimizeChunkIds","afterOptimizeChunkIds","recordModules","recordChunks","beforeHash","contentHash","afterHash","recordHash","record","beforeModuleAssets","shouldGenerateChunkAssets","beforeChunkAssets","additionalChunkAssets","additionalAssets","optimizeChunkAssets","afterOptimizeChunkAssets","optimizeAssets","afterOptimizeAssets","needAdditionalSeal","afterSeal","chunkHash","moduleAsset","chunkAsset","assetPath","needAdditionalPass","childCompiler","log","normalModuleLoader","optimizeExtractedChunksBasic","optimizeExtractedChunks","optimizeExtractedChunksAdvanced","afterOptimizeExtractedChunks","_pluginCompat","tap","options","async","undefined","resolverFactory","inputFileSystem","requestShortener","outputOptions","output","bail","profile","performance","mainTemplate","chunkTemplate","hotUpdateChunkTemplate","runtimeTemplate","moduleTemplates","javascript","webassembly","semaphore","parallelism","entries","_preparedEntrypoints","entrypoints","Map","chunks","chunkGroups","namedChunkGroups","namedChunks","modules","_modules","cache","records","assets","assetsInfo","errors","warnings","children","logging","dependencyFactories","dependencyTemplates","childrenCounters","usedChunkIds","usedModuleIds","fileTimestamps","contextTimestamps","compilationDependencies","_buildingModules","_rebuildingModules","emittedAssets","Set","getStats","getLogger","TypeError","logEntries","type","args","trace","warn","error","cutOffLoaderExecution","Error","stack","split","slice","logEntry","time","Date","now","call","profileEnd","console","get","push","addModule","module","cacheGroup","alreadyAddedModule","issuer","build","cacheName","cacheModule","updateCacheModule","rebuild","needRebuild","disconnect","err","unbuild","getModule","findModule","waitForBuildingFinished","callback","callbackList","process","nextTick","optional","origin","thisCallback","delete","cb","resolveOptions","indexError","indexWarning","war","originalMap","reduce","map","v","i","sort","cmp","loc","processModuleDependencies","addDependency","dep","resourceIdent","getResourceIdentifier","factory","innerMap","list","addDependenciesBlock","block","blocks","e","sortedDependencies","pair1","pair2","addModuleDependencies","recursive","start","currentProfile","forEach","errorAndCallback","warningAndCallback","acquire","create","contextInfo","nameForCondition","context","dependentModule","afterFactory","isOptional","every","d","errorOrWarningAndCallback","release","iterationDependencies","depend","addReason","addModuleResult","afterBuild","afterBuilding","building","_addModuleChain","dependency","onModule","Dep","moduleFactory","entry","slot","request","idx","findIndex","indexOf","splice","prefetch","prefetched","oldDependencies","oldVariables","oldBlocks","removeReasonsOfDependencyBlock","finish","callAsync","reportDependencyErrorsAndWarnings","clear","preparedEntrypoint","chunk","addChunk","entrypoint","setRuntimeChunk","addOrigin","connectChunkGroupAndChunk","connectChunkAndModule","entryModule","assignDepth","sortModules","applyModuleIds","sortItemsWithModuleIds","applyChunkIds","sortItemsWithChunkIds","createModuleAssets","createChunkAssets","summarizeDependencies","indexBlock","indexDep","getWarnings","indexWar","w","warning","getErrors","indexErr","addChunkInGroup","groupOptions","chunkGroup","addOptions","queue","depth","enqueueJob","assignDepthToDependency","assignDepthToDependencyBlock","getDependencyReference","getReference","ref","iteratorDependency","removeReason","chunksIterable","patchChunksAfterReasonRemoval","hasReasons","hasReasonForChunk","removeChunk","removeChunkFromDependencies","asyncBlock","indexChunk","iteratedChunk","removeParent","unusedIds","nextFreeModuleId","usedIds","modules1","indexModule1","module1","size","usedIdMax","usedIdKey","Math","max","lengthFreeModules","has","modules2","indexModule2","module2","pop","usedIdValue","nextFreeChunkId","ids","indexModule","sortItems","compareTo","byMessage","ma","message","mb","fileDependencies","contextDependencies","missingDependencies","indexChildren","child","buildInfo","missing","Symbol","iterator","hashFunction","hashDigest","hashDigestLength","hash","hashSalt","update","updateHash","key","Object","keys","moduleHash","digest","renderedHash","substr","aEntry","hasRuntime","bEntry","template","updateHashForChunk","modifyHash","emitAsset","file","assetInfo","oldInfo","assign","updateAsset","newSourceOrFunction","assetInfoUpdateOrFunction","getAssets","array","assetName","prototype","hasOwnProperty","info","getAsset","fileName","getPath","cachedSourceMap","alreadyWrittenFiles","files","filenameTemplate","manifest","getRenderManifest","fileManifest","usedHash","pathAndInfo","getPathWithInfo","pathOptions","path","alreadyWritten","render","cacheEntry","cachedSource","filename","data","getAssetPath","getAssetPathWithInfo","createChildCompiler","plugins","checkConstraints","moduleId","debugId","applyPlugins","deprecate","replace","match","toUpperCase","defineProperty","configurable","value","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/Compilation.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst util = require(\"util\");\nconst { CachedSource } = require(\"webpack-sources\");\nconst {\n\tTapable,\n\tSyncHook,\n\tSyncBailHook,\n\tSyncWaterfallHook,\n\tAsyncSeriesHook\n} = require(\"tapable\");\nconst EntryModuleNotFoundError = require(\"./EntryModuleNotFoundError\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst Chunk = require(\"./Chunk\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst HotUpdateChunkTemplate = require(\"./HotUpdateChunkTemplate\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst Stats = require(\"./Stats\");\nconst Semaphore = require(\"./util/Semaphore\");\nconst createHash = require(\"./util/createHash\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst GraphHelpers = require(\"./GraphHelpers\");\nconst ModuleDependency = require(\"./dependencies/ModuleDependency\");\nconst compareLocations = require(\"./compareLocations\");\nconst { Logger, LogType } = require(\"./logging/Logger\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {import(\"./dependencies/SingleEntryDependency\")} SingleEntryDependency */\n/** @typedef {import(\"./dependencies/MultiEntryDependency\")} MultiEntryDependency */\n/** @typedef {import(\"./dependencies/DllEntryDependency\")} DllEntryDependency */\n/** @typedef {import(\"./dependencies/DependencyReference\")} DependencyReference */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n// TODO use @callback\n/** @typedef {{[assetName: string]: Source}} CompilationAssets */\n/** @typedef {(err: Error|null, result?: Module) => void } ModuleCallback */\n/** @typedef {(err?: Error|null, result?: Module) => void } ModuleChainCallback */\n/** @typedef {(module: Module) => void} OnModuleCallback */\n/** @typedef {(err?: Error|null) => void} Callback */\n/** @typedef {(d: Dependency) => any} DepBlockVarDependenciesCallback */\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {{apply: () => void}} Plugin */\n\n/**\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\n * @property {string} issuer\n * @property {string} compiler\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateData\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\n * @property {any=} resolveOptions\n * @property {string} context\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} ModuleFactory\n * @property {(data: ModuleFactoryCreateData, callback: ModuleCallback) => any} create\n */\n\n/**\n * @typedef {Object} SortedDependency\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n * @property {DependenciesBlockVariable[]} variables\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} AssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @param {Chunk} a first chunk to sort by id\n * @param {Chunk} b second chunk to sort by id\n * @returns {-1|0|1} sort value\n */\nconst byId = (a, b) => {\n\tif (typeof a.id !== typeof b.id) {\n\t\treturn typeof a.id < typeof b.id ? -1 : 1;\n\t}\n\tif (a.id < b.id) return -1;\n\tif (a.id > b.id) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIdOrIdentifier = (a, b) => {\n\tif (typeof a.id !== typeof b.id) {\n\t\treturn typeof a.id < typeof b.id ? -1 : 1;\n\t}\n\tif (a.id < b.id) return -1;\n\tif (a.id > b.id) return 1;\n\tconst identA = a.identifier();\n\tconst identB = b.identifier();\n\tif (identA < identB) return -1;\n\tif (identA > identB) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIndexOrIdentifier = (a, b) => {\n\tif (a.index < b.index) return -1;\n\tif (a.index > b.index) return 1;\n\tconst identA = a.identifier();\n\tconst identB = b.identifier();\n\tif (identA < identB) return -1;\n\tif (identA > identB) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Compilation} a first compilation to sort by\n * @param {Compilation} b second compilation to sort by\n * @returns {-1|0|1} sort value\n */\nconst byNameOrHash = (a, b) => {\n\tif (a.name < b.name) return -1;\n\tif (a.name > b.name) return 1;\n\tif (a.fullHash < b.fullHash) return -1;\n\tif (a.fullHash > b.fullHash) return 1;\n\treturn 0;\n};\n\n/**\n * @param {DependenciesBlockVariable[]} variables DepBlock Variables to iterate over\n * @param {DepBlockVarDependenciesCallback} fn callback to apply on iterated elements\n * @returns {void}\n */\nconst iterationBlockVariable = (variables, fn) => {\n\tfor (\n\t\tlet indexVariable = 0;\n\t\tindexVariable < variables.length;\n\t\tindexVariable++\n\t) {\n\t\tconst varDep = variables[indexVariable].dependencies;\n\t\tfor (let indexVDep = 0; indexVDep < varDep.length; indexVDep++) {\n\t\t\tfn(varDep[indexVDep]);\n\t\t}\n\t}\n};\n\n/**\n * @template T\n * @param {T[]} arr array of elements to iterate over\n * @param {function(T): void} fn callback applied to each element\n * @returns {void}\n */\nconst iterationOfArrayCallback = (arr, fn) => {\n\tfor (let index = 0; index < arr.length; index++) {\n\t\tfn(arr[index]);\n\t}\n};\n\n/**\n * @template T\n * @param {Set<T>} set set to add items to\n * @param {Set<T>} otherSet set to add items from\n * @returns {void}\n */\nconst addAllToSet = (set, otherSet) => {\n\tfor (const item of otherSet) {\n\t\tset.add(item);\n\t}\n};\n\n/**\n * @param {Source} a a source\n * @param {Source} b another source\n * @returns {boolean} true, when both sources are equal\n */\nconst isSourceEqual = (a, b) => {\n\tif (a === b) return true;\n\t// TODO webpack 5: check .buffer() instead, it's called anyway during emit\n\t/** @type {Buffer|string} */\n\tlet aSource = a.source();\n\t/** @type {Buffer|string} */\n\tlet bSource = b.source();\n\tif (aSource === bSource) return true;\n\tif (typeof aSource === \"string\" && typeof bSource === \"string\") return false;\n\tif (!Buffer.isBuffer(aSource)) aSource = Buffer.from(aSource, \"utf-8\");\n\tif (!Buffer.isBuffer(bSource)) bSource = Buffer.from(bSource, \"utf-8\");\n\treturn aSource.equals(bSource);\n};\n\nclass Compilation extends Tapable {\n\t/**\n\t * Creates an instance of Compilation.\n\t * @param {Compiler} compiler the compiler which created the compilation\n\t */\n\tconstructor(compiler) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tbuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\trebuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<Module, Error>} */\n\t\t\tfailedModule: new SyncHook([\"module\", \"error\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tsucceedModule: new SyncHook([\"module\"]),\n\n\t\t\t/** @type {SyncHook<Dependency, string>} */\n\t\t\taddEntry: new SyncHook([\"entry\", \"name\"]),\n\t\t\t/** @type {SyncHook<Dependency, string, Error>} */\n\t\t\tfailedEntry: new SyncHook([\"entry\", \"name\", \"error\"]),\n\t\t\t/** @type {SyncHook<Dependency, string, Module>} */\n\t\t\tsucceedEntry: new SyncHook([\"entry\", \"name\", \"module\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<DependencyReference, Dependency, Module>} */\n\t\t\tdependencyReference: new SyncWaterfallHook([\n\t\t\t\t\"dependencyReference\",\n\t\t\t\t\"dependency\",\n\t\t\t\t\"module\"\n\t\t\t]),\n\n\t\t\t/** @type {AsyncSeriesHook<Module[]>} */\n\t\t\tfinishModules: new AsyncSeriesHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tfinishRebuildingModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tunseal: new SyncHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tseal: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeChunks: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterChunks: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependenciesBasic: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependencies: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependenciesAdvanced: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\tafterOptimizeDependencies: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\toptimize: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModulesBasic: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModules: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModulesAdvanced: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tafterOptimizeModules: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunksBasic: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunksAdvanced: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncHook<Chunk[], ChunkGroup[]>} */\n\t\t\tafterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<Chunk[], Module[]>} */\n\t\t\toptimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<Chunk[], Module[]>} */\n\t\t\tafterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModulesBasic: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModules: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModulesAdvanced: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<Chunk[], Module[]>} */\n\t\t\tafterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tshouldRecord: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<Module[], any>} */\n\t\t\treviveModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\toptimizeModuleOrder: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tadvancedOptimizeModuleOrder: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tbeforeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tmoduleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\toptimizeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tafterOptimizeModuleIds: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<Chunk[], any>} */\n\t\t\treviveChunks: new SyncHook([\"chunks\", \"records\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\toptimizeChunkOrder: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tbeforeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\toptimizeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncHook<Module[], any>} */\n\t\t\trecordModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<Chunk[], any>} */\n\t\t\trecordChunks: new SyncHook([\"chunks\", \"records\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk>} */\n\t\t\tcontentHash: new SyncHook([\"chunk\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tafterHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<any>} */\n\t\t\trecordHash: new SyncHook([\"records\"]),\n\t\t\t/** @type {SyncHook<Compilation, any>} */\n\t\t\trecord: new SyncHook([\"compilation\", \"records\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeModuleAssets: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tshouldGenerateChunkAssets: new SyncBailHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeChunkAssets: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tadditionalChunkAssets: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {AsyncSeriesHook} */\n\t\t\tadditionalAssets: new AsyncSeriesHook([]),\n\t\t\t/** @type {AsyncSeriesHook<Chunk[]>} */\n\t\t\toptimizeChunkAssets: new AsyncSeriesHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeChunkAssets: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {AsyncSeriesHook<CompilationAssets>} */\n\t\t\toptimizeAssets: new AsyncSeriesHook([\"assets\"]),\n\t\t\t/** @type {SyncHook<CompilationAssets>} */\n\t\t\tafterOptimizeAssets: new SyncHook([\"assets\"]),\n\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tneedAdditionalSeal: new SyncBailHook([]),\n\t\t\t/** @type {AsyncSeriesHook} */\n\t\t\tafterSeal: new AsyncSeriesHook([]),\n\n\t\t\t/** @type {SyncHook<Chunk, Hash>} */\n\t\t\tchunkHash: new SyncHook([\"chunk\", \"chunkHash\"]),\n\t\t\t/** @type {SyncHook<Module, string>} */\n\t\t\tmoduleAsset: new SyncHook([\"module\", \"filename\"]),\n\t\t\t/** @type {SyncHook<Chunk, string>} */\n\t\t\tchunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<string, TODO>} */\n\t\t\tassetPath: new SyncWaterfallHook([\"filename\", \"data\"]), // TODO MainTemplate\n\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tneedAdditionalPass: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<Compiler, string, number>} */\n\t\t\tchildCompiler: new SyncHook([\n\t\t\t\t\"childCompiler\",\n\t\t\t\t\"compilerName\",\n\t\t\t\t\"compilerIndex\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncBailHook<string, LogEntry>} */\n\t\t\tlog: new SyncBailHook([\"origin\", \"logEntry\"]),\n\n\t\t\t// TODO the following hooks are weirdly located here\n\t\t\t// TODO move them for webpack 5\n\t\t\t/** @type {SyncHook<object, Module>} */\n\t\t\tnormalModuleLoader: new SyncHook([\"loaderContext\", \"module\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunksBasic: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunks: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunksAdvanced: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeExtractedChunks: new SyncHook([\"chunks\"])\n\t\t};\n\t\tthis._pluginCompat.tap(\"Compilation\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"optimize-tree\":\n\t\t\t\tcase \"additional-assets\":\n\t\t\t\tcase \"optimize-chunk-assets\":\n\t\t\t\tcase \"optimize-assets\":\n\t\t\t\tcase \"after-seal\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\t/** @type {Compiler} */\n\t\tthis.compiler = compiler;\n\t\tthis.resolverFactory = compiler.resolverFactory;\n\t\tthis.inputFileSystem = compiler.inputFileSystem;\n\t\tthis.requestShortener = compiler.requestShortener;\n\n\t\tconst options = compiler.options;\n\t\tthis.options = options;\n\t\tthis.outputOptions = options && options.output;\n\t\t/** @type {boolean=} */\n\t\tthis.bail = options && options.bail;\n\t\tthis.profile = options && options.profile;\n\t\tthis.performance = options && options.performance;\n\n\t\tthis.mainTemplate = new MainTemplate(this.outputOptions);\n\t\tthis.chunkTemplate = new ChunkTemplate(this.outputOptions);\n\t\tthis.hotUpdateChunkTemplate = new HotUpdateChunkTemplate(\n\t\t\tthis.outputOptions\n\t\t);\n\t\tthis.runtimeTemplate = new RuntimeTemplate(\n\t\t\tthis.outputOptions,\n\t\t\tthis.requestShortener\n\t\t);\n\t\tthis.moduleTemplates = {\n\t\t\tjavascript: new ModuleTemplate(this.runtimeTemplate, \"javascript\"),\n\t\t\twebassembly: new ModuleTemplate(this.runtimeTemplate, \"webassembly\")\n\t\t};\n\n\t\tthis.semaphore = new Semaphore(options.parallelism || 100);\n\n\t\tthis.entries = [];\n\t\t/** @private @type {{name: string, request: string, module: Module}[]} */\n\t\tthis._preparedEntrypoints = [];\n\t\t/** @type {Map<string, Entrypoint>} */\n\t\tthis.entrypoints = new Map();\n\t\t/** @type {Chunk[]} */\n\t\tthis.chunks = [];\n\t\t/** @type {ChunkGroup[]} */\n\t\tthis.chunkGroups = [];\n\t\t/** @type {Map<string, ChunkGroup>} */\n\t\tthis.namedChunkGroups = new Map();\n\t\t/** @type {Map<string, Chunk>} */\n\t\tthis.namedChunks = new Map();\n\t\t/** @type {Module[]} */\n\t\tthis.modules = [];\n\t\t/** @private @type {Map<string, Module>} */\n\t\tthis._modules = new Map();\n\t\tthis.cache = null;\n\t\tthis.records = null;\n\t\t/** @type {string[]} */\n\t\tthis.additionalChunkAssets = [];\n\t\t/** @type {CompilationAssets} */\n\t\tthis.assets = {};\n\t\t/** @type {Map<string, AssetInfo>} */\n\t\tthis.assetsInfo = new Map();\n\t\t/** @type {WebpackError[]} */\n\t\tthis.errors = [];\n\t\t/** @type {WebpackError[]} */\n\t\tthis.warnings = [];\n\t\t/** @type {Compilation[]} */\n\t\tthis.children = [];\n\t\t/** @type {Map<string, LogEntry[]>} */\n\t\tthis.logging = new Map();\n\t\t/** @type {Map<DepConstructor, ModuleFactory>} */\n\t\tthis.dependencyFactories = new Map();\n\t\t/** @type {Map<DepConstructor, DependencyTemplate>} */\n\t\tthis.dependencyTemplates = new Map();\n\t\t// TODO refactor this in webpack 5 to a custom DependencyTemplates class with a hash property\n\t\t// @ts-ignore\n\t\tthis.dependencyTemplates.set(\"hash\", \"\");\n\t\tthis.childrenCounters = {};\n\t\t/** @type {Set<number|string>} */\n\t\tthis.usedChunkIds = null;\n\t\t/** @type {Set<number>} */\n\t\tthis.usedModuleIds = null;\n\t\t/** @type {Map<string, number>=} */\n\t\tthis.fileTimestamps = undefined;\n\t\t/** @type {Map<string, number>=} */\n\t\tthis.contextTimestamps = undefined;\n\t\t/** @type {Set<string>=} */\n\t\tthis.compilationDependencies = undefined;\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._buildingModules = new Map();\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._rebuildingModules = new Map();\n\t\t/** @type {Set<string>} */\n\t\tthis.emittedAssets = new Set();\n\t}\n\n\tgetStats() {\n\t\treturn new Stats(this);\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\"Compilation.getLogger(name) called without a name\");\n\t\t}\n\t\t/** @type {LogEntry[] | undefined} */\n\t\tlet logEntries;\n\t\treturn new Logger((type, args) => {\n\t\t\tif (typeof name === \"function\") {\n\t\t\t\tname = name();\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet trace;\n\t\t\tswitch (type) {\n\t\t\t\tcase LogType.warn:\n\t\t\t\tcase LogType.error:\n\t\t\t\tcase LogType.trace:\n\t\t\t\t\ttrace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack)\n\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t.slice(3);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/** @type {LogEntry} */\n\t\t\tconst logEntry = {\n\t\t\t\ttime: Date.now(),\n\t\t\t\ttype,\n\t\t\t\targs,\n\t\t\t\ttrace\n\t\t\t};\n\t\t\tif (this.hooks.log.call(name, logEntry) === undefined) {\n\t\t\t\tif (logEntry.type === LogType.profileEnd) {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tconsole.profileEnd(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\tlogEntries = this.logging.get(name);\n\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\tlogEntries = [];\n\t\t\t\t\t\tthis.logging.set(name, logEntries);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogEntries.push(logEntry);\n\t\t\t\tif (logEntry.type === LogType.profile) {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tconsole.profile(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @typedef {Object} AddModuleResult\n\t * @property {Module} module the added or existing module\n\t * @property {boolean} issuer was this the first request for this module\n\t * @property {boolean} build should the module be build\n\t * @property {boolean} dependencies should dependencies be walked\n\t */\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {any=} cacheGroup cacheGroup it is apart of\n\t * @returns {AddModuleResult} returns meta about whether or not the module had built\n\t * had an issuer, or any dependnecies\n\t */\n\taddModule(module, cacheGroup) {\n\t\tconst identifier = module.identifier();\n\t\tconst alreadyAddedModule = this._modules.get(identifier);\n\t\tif (alreadyAddedModule) {\n\t\t\treturn {\n\t\t\t\tmodule: alreadyAddedModule,\n\t\t\t\tissuer: false,\n\t\t\t\tbuild: false,\n\t\t\t\tdependencies: false\n\t\t\t};\n\t\t}\n\t\tconst cacheName = (cacheGroup || \"m\") + identifier;\n\t\tif (this.cache && this.cache[cacheName]) {\n\t\t\tconst cacheModule = this.cache[cacheName];\n\n\t\t\tif (typeof cacheModule.updateCacheModule === \"function\") {\n\t\t\t\tcacheModule.updateCacheModule(module);\n\t\t\t}\n\n\t\t\tlet rebuild = true;\n\t\t\tif (this.fileTimestamps && this.contextTimestamps) {\n\t\t\t\trebuild = cacheModule.needRebuild(\n\t\t\t\t\tthis.fileTimestamps,\n\t\t\t\t\tthis.contextTimestamps\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!rebuild) {\n\t\t\t\tcacheModule.disconnect();\n\t\t\t\tthis._modules.set(identifier, cacheModule);\n\t\t\t\tthis.modules.push(cacheModule);\n\t\t\t\tfor (const err of cacheModule.errors) {\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t}\n\t\t\t\tfor (const err of cacheModule.warnings) {\n\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tmodule: cacheModule,\n\t\t\t\t\tissuer: true,\n\t\t\t\t\tbuild: false,\n\t\t\t\t\tdependencies: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tcacheModule.unbuild();\n\t\t\tmodule = cacheModule;\n\t\t}\n\t\tthis._modules.set(identifier, module);\n\t\tif (this.cache) {\n\t\t\tthis.cache[cacheName] = module;\n\t\t}\n\t\tthis.modules.push(module);\n\t\treturn {\n\t\t\tmodule: module,\n\t\t\tissuer: true,\n\t\t\tbuild: true,\n\t\t\tdependencies: true\n\t\t};\n\t}\n\n\t/**\n\t * Fetches a module from a compilation by its identifier\n\t * @param {Module} module the module provided\n\t * @returns {Module} the module requested\n\t */\n\tgetModule(module) {\n\t\tconst identifier = module.identifier();\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Attempts to search for a module by its identifier\n\t * @param {string} identifier identifier (usually path) for module\n\t * @returns {Module|undefined} attempt to search for module and return it, else undefined\n\t */\n\tfindModule(identifier) {\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * @param {Module} module module with its callback list\n\t * @param {Callback} callback the callback function\n\t * @returns {void}\n\t */\n\twaitForBuildingFinished(module, callback) {\n\t\tlet callbackList = this._buildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(() => callback());\n\t\t} else {\n\t\t\tprocess.nextTick(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Builds the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {boolean} optional optional flag\n\t * @param {Module=} origin origin module this module build was requested from\n\t * @param {Dependency[]=} dependencies optional dependencies from the module to be built\n\t * @param {TODO} thisCallback the callback\n\t * @returns {TODO} returns the callback function with results\n\t */\n\tbuildModule(module, optional, origin, dependencies, thisCallback) {\n\t\tlet callbackList = this._buildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(thisCallback);\n\t\t\treturn;\n\t\t}\n\t\tthis._buildingModules.set(module, (callbackList = [thisCallback]));\n\n\t\tconst callback = err => {\n\t\t\tthis._buildingModules.delete(module);\n\t\t\tfor (const cb of callbackList) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t};\n\n\t\tthis.hooks.buildModule.call(module);\n\t\tmodule.build(\n\t\t\tthis.options,\n\t\t\tthis,\n\t\t\tthis.resolverFactory.get(\"normal\", module.resolveOptions),\n\t\t\tthis.inputFileSystem,\n\t\t\terror => {\n\t\t\t\tconst errors = module.errors;\n\t\t\t\tfor (let indexError = 0; indexError < errors.length; indexError++) {\n\t\t\t\t\tconst err = errors[indexError];\n\t\t\t\t\terr.origin = origin;\n\t\t\t\t\terr.dependencies = dependencies;\n\t\t\t\t\tif (optional) {\n\t\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst warnings = module.warnings;\n\t\t\t\tfor (\n\t\t\t\t\tlet indexWarning = 0;\n\t\t\t\t\tindexWarning < warnings.length;\n\t\t\t\t\tindexWarning++\n\t\t\t\t) {\n\t\t\t\t\tconst war = warnings[indexWarning];\n\t\t\t\t\twar.origin = origin;\n\t\t\t\t\twar.dependencies = dependencies;\n\t\t\t\t\tthis.warnings.push(war);\n\t\t\t\t}\n\t\t\t\tconst originalMap = module.dependencies.reduce((map, v, i) => {\n\t\t\t\t\tmap.set(v, i);\n\t\t\t\t\treturn map;\n\t\t\t\t}, new Map());\n\t\t\t\tmodule.dependencies.sort((a, b) => {\n\t\t\t\t\tconst cmp = compareLocations(a.loc, b.loc);\n\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\treturn originalMap.get(a) - originalMap.get(b);\n\t\t\t\t});\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.hooks.failedModule.call(module, error);\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedModule.call(module);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\tprocessModuleDependencies(module, callback) {\n\t\tconst dependencies = new Map();\n\n\t\tconst addDependency = dep => {\n\t\t\tconst resourceIdent = dep.getResourceIdentifier();\n\t\t\tif (resourceIdent) {\n\t\t\t\tconst factory = this.dependencyFactories.get(dep.constructor);\n\t\t\t\tif (factory === undefined) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`No module factory available for dependency type: ${dep.constructor.name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlet innerMap = dependencies.get(factory);\n\t\t\t\tif (innerMap === undefined) {\n\t\t\t\t\tdependencies.set(factory, (innerMap = new Map()));\n\t\t\t\t}\n\t\t\t\tlet list = innerMap.get(resourceIdent);\n\t\t\t\tif (list === undefined) innerMap.set(resourceIdent, (list = []));\n\t\t\t\tlist.push(dep);\n\t\t\t}\n\t\t};\n\n\t\tconst addDependenciesBlock = block => {\n\t\t\tif (block.dependencies) {\n\t\t\t\titerationOfArrayCallback(block.dependencies, addDependency);\n\t\t\t}\n\t\t\tif (block.blocks) {\n\t\t\t\titerationOfArrayCallback(block.blocks, addDependenciesBlock);\n\t\t\t}\n\t\t\tif (block.variables) {\n\t\t\t\titerationBlockVariable(block.variables, addDependency);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\taddDependenciesBlock(module);\n\t\t} catch (e) {\n\t\t\tcallback(e);\n\t\t}\n\n\t\tconst sortedDependencies = [];\n\n\t\tfor (const pair1 of dependencies) {\n\t\t\tfor (const pair2 of pair1[1]) {\n\t\t\t\tsortedDependencies.push({\n\t\t\t\t\tfactory: pair1[0],\n\t\t\t\t\tdependencies: pair2[1]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.addModuleDependencies(\n\t\t\tmodule,\n\t\t\tsortedDependencies,\n\t\t\tthis.bail,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to add deps to\n\t * @param {SortedDependency[]} dependencies set of sorted dependencies to iterate through\n\t * @param {(boolean|null)=} bail whether to bail or not\n\t * @param {TODO} cacheGroup optional cacheGroup\n\t * @param {boolean} recursive whether it is recursive traversal\n\t * @param {function} callback callback for when dependencies are finished being added\n\t * @returns {void}\n\t */\n\taddModuleDependencies(\n\t\tmodule,\n\t\tdependencies,\n\t\tbail,\n\t\tcacheGroup,\n\t\trecursive,\n\t\tcallback\n\t) {\n\t\tconst start = this.profile && Date.now();\n\t\tconst currentProfile = this.profile && {};\n\n\t\tasyncLib.forEach(\n\t\t\tdependencies,\n\t\t\t(item, callback) => {\n\t\t\t\tconst dependencies = item.dependencies;\n\n\t\t\t\tconst errorAndCallback = err => {\n\t\t\t\t\terr.origin = module;\n\t\t\t\t\terr.dependencies = dependencies;\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\tif (bail) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst warningAndCallback = err => {\n\t\t\t\t\terr.origin = module;\n\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\tcallback();\n\t\t\t\t};\n\n\t\t\t\tconst semaphore = this.semaphore;\n\t\t\t\tsemaphore.acquire(() => {\n\t\t\t\t\tconst factory = item.factory;\n\t\t\t\t\tfactory.create(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontextInfo: {\n\t\t\t\t\t\t\t\tissuer: module.nameForCondition && module.nameForCondition(),\n\t\t\t\t\t\t\t\tcompiler: this.compiler.name\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tresolveOptions: module.resolveOptions,\n\t\t\t\t\t\t\tcontext: module.context,\n\t\t\t\t\t\t\tdependencies: dependencies\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err, dependentModule) => {\n\t\t\t\t\t\t\tlet afterFactory;\n\n\t\t\t\t\t\t\tconst isOptional = () => {\n\t\t\t\t\t\t\t\treturn dependencies.every(d => d.optional);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst errorOrWarningAndCallback = err => {\n\t\t\t\t\t\t\t\tif (isOptional()) {\n\t\t\t\t\t\t\t\t\treturn warningAndCallback(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\treturn errorOrWarningAndCallback(\n\t\t\t\t\t\t\t\t\tnew ModuleNotFoundError(module, err)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!dependentModule) {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\tafterFactory = Date.now();\n\t\t\t\t\t\t\t\tcurrentProfile.factory = afterFactory - start;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst iterationDependencies = depend => {\n\t\t\t\t\t\t\t\tfor (let index = 0; index < depend.length; index++) {\n\t\t\t\t\t\t\t\t\tconst dep = depend[index];\n\t\t\t\t\t\t\t\t\tdep.module = dependentModule;\n\t\t\t\t\t\t\t\t\tdependentModule.addReason(module, dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst addModuleResult = this.addModule(\n\t\t\t\t\t\t\t\tdependentModule,\n\t\t\t\t\t\t\t\tcacheGroup\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdependentModule = addModuleResult.module;\n\t\t\t\t\t\t\titerationDependencies(dependencies);\n\n\t\t\t\t\t\t\tconst afterBuild = () => {\n\t\t\t\t\t\t\t\tif (recursive && addModuleResult.dependencies) {\n\t\t\t\t\t\t\t\t\tthis.processModuleDependencies(dependentModule, callback);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (addModuleResult.issuer) {\n\t\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\t\tdependentModule.profile = currentProfile;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdependentModule.issuer = module;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (this.profile) {\n\t\t\t\t\t\t\t\t\tif (module.profile) {\n\t\t\t\t\t\t\t\t\t\tconst time = Date.now() - start;\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!module.profile.dependencies ||\n\t\t\t\t\t\t\t\t\t\t\ttime > module.profile.dependencies\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tmodule.profile.dependencies = time;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (addModuleResult.build) {\n\t\t\t\t\t\t\t\tthis.buildModule(\n\t\t\t\t\t\t\t\t\tdependentModule,\n\t\t\t\t\t\t\t\t\tisOptional(),\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\t\t\t\treturn errorOrWarningAndCallback(err);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\t\t\tafterBuild();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\tthis.waitForBuildingFinished(dependentModule, afterBuild);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\t// In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n\t\t\t\t// errors are created inside closures that keep a reference to the Compilation, so errors are\n\t\t\t\t// leaking the Compilation object.\n\n\t\t\t\tif (err) {\n\t\t\t\t\t// eslint-disable-next-line no-self-assign\n\t\t\t\t\terr.stack = err.stack;\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\treturn process.nextTick(callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {string} context context string path\n\t * @param {Dependency} dependency dependency used to create Module chain\n\t * @param {OnModuleCallback} onModule function invoked on modules creation\n\t * @param {ModuleChainCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\t_addModuleChain(context, dependency, onModule, callback) {\n\t\tconst start = this.profile && Date.now();\n\t\tconst currentProfile = this.profile && {};\n\n\t\tconst errorAndCallback = this.bail\n\t\t\t? err => {\n\t\t\t\t\tcallback(err);\n\t\t\t  }\n\t\t\t: err => {\n\t\t\t\t\terr.dependencies = [dependency];\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\tcallback();\n\t\t\t  };\n\n\t\tif (\n\t\t\ttypeof dependency !== \"object\" ||\n\t\t\tdependency === null ||\n\t\t\t!dependency.constructor\n\t\t) {\n\t\t\tthrow new Error(\"Parameter 'dependency' must be a Dependency\");\n\t\t}\n\t\tconst Dep = /** @type {DepConstructor} */ (dependency.constructor);\n\t\tconst moduleFactory = this.dependencyFactories.get(Dep);\n\t\tif (!moduleFactory) {\n\t\t\tthrow new Error(\n\t\t\t\t`No dependency factory available for this dependency type: ${dependency.constructor.name}`\n\t\t\t);\n\t\t}\n\n\t\tthis.semaphore.acquire(() => {\n\t\t\tmoduleFactory.create(\n\t\t\t\t{\n\t\t\t\t\tcontextInfo: {\n\t\t\t\t\t\tissuer: \"\",\n\t\t\t\t\t\tcompiler: this.compiler.name\n\t\t\t\t\t},\n\t\t\t\t\tcontext: context,\n\t\t\t\t\tdependencies: [dependency]\n\t\t\t\t},\n\t\t\t\t(err, module) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\treturn errorAndCallback(new EntryModuleNotFoundError(err));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet afterFactory;\n\n\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\tafterFactory = Date.now();\n\t\t\t\t\t\tcurrentProfile.factory = afterFactory - start;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst addModuleResult = this.addModule(module);\n\t\t\t\t\tmodule = addModuleResult.module;\n\n\t\t\t\t\tonModule(module);\n\n\t\t\t\t\tdependency.module = module;\n\t\t\t\t\tmodule.addReason(null, dependency);\n\n\t\t\t\t\tconst afterBuild = () => {\n\t\t\t\t\t\tif (addModuleResult.dependencies) {\n\t\t\t\t\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcallback(null, module);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn callback(null, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (addModuleResult.issuer) {\n\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\tmodule.profile = currentProfile;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (addModuleResult.build) {\n\t\t\t\t\t\tthis.buildModule(module, false, null, null, err => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\t\tafterBuild();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\tthis.waitForBuildingFinished(module, afterBuild);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency being created\n\t * @param {string} name name of entry\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddEntry(context, entry, name, callback) {\n\t\tthis.hooks.addEntry.call(entry, name);\n\n\t\tconst slot = {\n\t\t\tname: name,\n\t\t\t// TODO webpack 5 remove `request`\n\t\t\trequest: null,\n\t\t\tmodule: null\n\t\t};\n\n\t\tif (entry instanceof ModuleDependency) {\n\t\t\tslot.request = entry.request;\n\t\t}\n\n\t\t// TODO webpack 5: merge modules instead when multiple entry modules are supported\n\t\tconst idx = this._preparedEntrypoints.findIndex(slot => slot.name === name);\n\t\tif (idx >= 0) {\n\t\t\t// Overwrite existing entrypoint\n\t\t\tthis._preparedEntrypoints[idx] = slot;\n\t\t} else {\n\t\t\tthis._preparedEntrypoints.push(slot);\n\t\t}\n\t\tthis._addModuleChain(\n\t\t\tcontext,\n\t\t\tentry,\n\t\t\tmodule => {\n\t\t\t\tthis.entries.push(module);\n\t\t\t},\n\t\t\t(err, module) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthis.hooks.failedEntry.call(entry, name, err);\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (module) {\n\t\t\t\t\tslot.module = module;\n\t\t\t\t} else {\n\t\t\t\t\tconst idx = this._preparedEntrypoints.indexOf(slot);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tthis._preparedEntrypoints.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedEntry.call(entry, name, module);\n\t\t\t\treturn callback(null, module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path string\n\t * @param {Dependency} dependency dep used to create module\n\t * @param {ModuleCallback} callback module callback sending module up a level\n\t * @returns {void}\n\t */\n\tprefetch(context, dependency, callback) {\n\t\tthis._addModuleChain(\n\t\t\tcontext,\n\t\t\tdependency,\n\t\t\tmodule => {\n\t\t\t\tmodule.prefetched = true;\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {Callback} thisCallback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\trebuildModule(module, thisCallback) {\n\t\tlet callbackList = this._rebuildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(thisCallback);\n\t\t\treturn;\n\t\t}\n\t\tthis._rebuildingModules.set(module, (callbackList = [thisCallback]));\n\n\t\tconst callback = err => {\n\t\t\tthis._rebuildingModules.delete(module);\n\t\t\tfor (const cb of callbackList) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t};\n\n\t\tthis.hooks.rebuildModule.call(module);\n\t\tconst oldDependencies = module.dependencies.slice();\n\t\tconst oldVariables = module.variables.slice();\n\t\tconst oldBlocks = module.blocks.slice();\n\t\tmodule.unbuild();\n\t\tthis.buildModule(module, false, module, null, err => {\n\t\t\tif (err) {\n\t\t\t\tthis.hooks.finishRebuildingModule.call(module);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, {\n\t\t\t\t\tdependencies: oldDependencies,\n\t\t\t\t\tvariables: oldVariables,\n\t\t\t\t\tblocks: oldBlocks\n\t\t\t\t});\n\t\t\t\tthis.hooks.finishRebuildingModule.call(module);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t}\n\n\tfinish(callback) {\n\t\tconst modules = this.modules;\n\t\tthis.hooks.finishModules.callAsync(modules, err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tfor (let index = 0; index < modules.length; index++) {\n\t\t\t\tconst module = modules[index];\n\t\t\t\tthis.reportDependencyErrorsAndWarnings(module, [module]);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tunseal() {\n\t\tthis.hooks.unseal.call();\n\t\tthis.chunks.length = 0;\n\t\tthis.chunkGroups.length = 0;\n\t\tthis.namedChunks.clear();\n\t\tthis.namedChunkGroups.clear();\n\t\tthis.additionalChunkAssets.length = 0;\n\t\tthis.assets = {};\n\t\tthis.assetsInfo.clear();\n\t\tfor (const module of this.modules) {\n\t\t\tmodule.unseal();\n\t\t}\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the seal method is finishes\n\t * @returns {void}\n\t */\n\tseal(callback) {\n\t\tthis.hooks.seal.call();\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeDependenciesBasic.call(this.modules) ||\n\t\t\tthis.hooks.optimizeDependencies.call(this.modules) ||\n\t\t\tthis.hooks.optimizeDependenciesAdvanced.call(this.modules)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeDependencies.call(this.modules);\n\n\t\tthis.hooks.beforeChunks.call();\n\t\tfor (const preparedEntrypoint of this._preparedEntrypoints) {\n\t\t\tconst module = preparedEntrypoint.module;\n\t\t\tconst name = preparedEntrypoint.name;\n\t\t\tconst chunk = this.addChunk(name);\n\t\t\tconst entrypoint = new Entrypoint(name);\n\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\tentrypoint.addOrigin(null, name, preparedEntrypoint.request);\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t\tthis.entrypoints.set(name, entrypoint);\n\t\t\tthis.chunkGroups.push(entrypoint);\n\n\t\t\tGraphHelpers.connectChunkGroupAndChunk(entrypoint, chunk);\n\t\t\tGraphHelpers.connectChunkAndModule(chunk, module);\n\n\t\t\tchunk.entryModule = module;\n\t\t\tchunk.name = name;\n\n\t\t\tthis.assignDepth(module);\n\t\t}\n\t\tbuildChunkGraph(\n\t\t\tthis,\n\t\t\t/** @type {Entrypoint[]} */ (this.chunkGroups.slice())\n\t\t);\n\t\tthis.sortModules(this.modules);\n\t\tthis.hooks.afterChunks.call(this.chunks);\n\n\t\tthis.hooks.optimize.call();\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeModulesBasic.call(this.modules) ||\n\t\t\tthis.hooks.optimizeModules.call(this.modules) ||\n\t\t\tthis.hooks.optimizeModulesAdvanced.call(this.modules)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeModules.call(this.modules);\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeChunksBasic.call(this.chunks, this.chunkGroups) ||\n\t\t\tthis.hooks.optimizeChunks.call(this.chunks, this.chunkGroups) ||\n\t\t\tthis.hooks.optimizeChunksAdvanced.call(this.chunks, this.chunkGroups)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n\n\t\tthis.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tthis.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n\n\t\t\twhile (\n\t\t\t\tthis.hooks.optimizeChunkModulesBasic.call(this.chunks, this.modules) ||\n\t\t\t\tthis.hooks.optimizeChunkModules.call(this.chunks, this.modules) ||\n\t\t\t\tthis.hooks.optimizeChunkModulesAdvanced.call(this.chunks, this.modules)\n\t\t\t) {\n\t\t\t\t/* empty */\n\t\t\t}\n\t\t\tthis.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n\n\t\t\tconst shouldRecord = this.hooks.shouldRecord.call() !== false;\n\n\t\t\tthis.hooks.reviveModules.call(this.modules, this.records);\n\t\t\tthis.hooks.optimizeModuleOrder.call(this.modules);\n\t\t\tthis.hooks.advancedOptimizeModuleOrder.call(this.modules);\n\t\t\tthis.hooks.beforeModuleIds.call(this.modules);\n\t\t\tthis.hooks.moduleIds.call(this.modules);\n\t\t\tthis.applyModuleIds();\n\t\t\tthis.hooks.optimizeModuleIds.call(this.modules);\n\t\t\tthis.hooks.afterOptimizeModuleIds.call(this.modules);\n\n\t\t\tthis.sortItemsWithModuleIds();\n\n\t\t\tthis.hooks.reviveChunks.call(this.chunks, this.records);\n\t\t\tthis.hooks.optimizeChunkOrder.call(this.chunks);\n\t\t\tthis.hooks.beforeChunkIds.call(this.chunks);\n\t\t\tthis.applyChunkIds();\n\t\t\tthis.hooks.optimizeChunkIds.call(this.chunks);\n\t\t\tthis.hooks.afterOptimizeChunkIds.call(this.chunks);\n\n\t\t\tthis.sortItemsWithChunkIds();\n\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.recordModules.call(this.modules, this.records);\n\t\t\t\tthis.hooks.recordChunks.call(this.chunks, this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.beforeHash.call();\n\t\t\tthis.createHash();\n\t\t\tthis.hooks.afterHash.call();\n\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.recordHash.call(this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.beforeModuleAssets.call();\n\t\t\tthis.createModuleAssets();\n\t\t\tif (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n\t\t\t\tthis.hooks.beforeChunkAssets.call();\n\t\t\t\tthis.createChunkAssets();\n\t\t\t}\n\t\t\tthis.hooks.additionalChunkAssets.call(this.chunks);\n\t\t\tthis.summarizeDependencies();\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.record.call(this, this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.additionalAssets.callAsync(err => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tthis.hooks.optimizeChunkAssets.callAsync(this.chunks, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis.hooks.afterOptimizeChunkAssets.call(this.chunks);\n\t\t\t\t\tthis.hooks.optimizeAssets.callAsync(this.assets, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.hooks.afterOptimizeAssets.call(this.assets);\n\t\t\t\t\t\tif (this.hooks.needAdditionalSeal.call()) {\n\t\t\t\t\t\t\tthis.unseal();\n\t\t\t\t\t\t\treturn this.seal(callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.hooks.afterSeal.callAsync(callback);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {Module[]} modules the modules array on compilation to perform the sort for\n\t * @returns {void}\n\t */\n\tsortModules(modules) {\n\t\t// TODO webpack 5: this should only be enabled when `moduleIds: \"natural\"`\n\t\t// TODO move it into a plugin (NaturalModuleIdsPlugin) and use this in WebpackOptionsApply\n\t\t// TODO remove this method\n\t\tmodules.sort(byIndexOrIdentifier);\n\t}\n\n\t/**\n\t * @param {Module} module moulde to report from\n\t * @param {DependenciesBlock[]} blocks blocks to report from\n\t * @returns {void}\n\t */\n\treportDependencyErrorsAndWarnings(module, blocks) {\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst block = blocks[indexBlock];\n\t\t\tconst dependencies = block.dependencies;\n\n\t\t\tfor (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n\t\t\t\tconst d = dependencies[indexDep];\n\n\t\t\t\tconst warnings = d.getWarnings();\n\t\t\t\tif (warnings) {\n\t\t\t\t\tfor (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n\t\t\t\t\t\tconst w = warnings[indexWar];\n\n\t\t\t\t\t\tconst warning = new ModuleDependencyWarning(module, w, d.loc);\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst errors = d.getErrors();\n\t\t\t\tif (errors) {\n\t\t\t\t\tfor (let indexErr = 0; indexErr < errors.length; indexErr++) {\n\t\t\t\t\t\tconst e = errors[indexErr];\n\n\t\t\t\t\t\tconst error = new ModuleDependencyError(module, e, d.loc);\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reportDependencyErrorsAndWarnings(module, block.blocks);\n\t\t}\n\t}\n\n\t/**\n\t * @param {TODO} groupOptions options for the chunk group\n\t * @param {Module} module the module the references the chunk group\n\t * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string} request the request from which the the chunk group is referenced\n\t * @returns {ChunkGroup} the new or existing chunk group\n\t */\n\taddChunkInGroup(groupOptions, module, loc, request) {\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t}\n\t\tconst name = groupOptions.name;\n\t\tif (name) {\n\t\t\tconst chunkGroup = this.namedChunkGroups.get(name);\n\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\tchunkGroup.addOptions(groupOptions);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGroup.addOrigin(module, loc, request);\n\t\t\t\t}\n\t\t\t\treturn chunkGroup;\n\t\t\t}\n\t\t}\n\t\tconst chunkGroup = new ChunkGroup(groupOptions);\n\t\tif (module) chunkGroup.addOrigin(module, loc, request);\n\t\tconst chunk = this.addChunk(name);\n\n\t\tGraphHelpers.connectChunkGroupAndChunk(chunkGroup, chunk);\n\n\t\tthis.chunkGroups.push(chunkGroup);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, chunkGroup);\n\t\t}\n\t\treturn chunkGroup;\n\t}\n\n\t/**\n\t * This method first looks to see if a name is provided for a new chunk,\n\t * and first looks to see if any named chunks already exist and reuse that chunk instead.\n\t *\n\t * @param {string=} name optional chunk name to be provided\n\t * @returns {Chunk} create a chunk (invoked during seal event)\n\t */\n\taddChunk(name) {\n\t\tif (name) {\n\t\t\tconst chunk = this.namedChunks.get(name);\n\t\t\tif (chunk !== undefined) {\n\t\t\t\treturn chunk;\n\t\t\t}\n\t\t}\n\t\tconst chunk = new Chunk(name);\n\t\tthis.chunks.push(chunk);\n\t\tif (name) {\n\t\t\tthis.namedChunks.set(name, chunk);\n\t\t}\n\t\treturn chunk;\n\t}\n\n\t/**\n\t * @param {Module} module module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepth(module) {\n\t\tconst queue = new Set([module]);\n\t\tlet depth;\n\n\t\tmodule.depth = 0;\n\n\t\t/**\n\t\t * @param {Module} module module for processeing\n\t\t * @returns {void}\n\t\t */\n\t\tconst enqueueJob = module => {\n\t\t\tconst d = module.depth;\n\t\t\tif (typeof d === \"number\" && d <= depth) return;\n\t\t\tqueue.add(module);\n\t\t\tmodule.depth = depth;\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dependency dependency to assign depth to\n\t\t * @returns {void}\n\t\t */\n\t\tconst assignDepthToDependency = dependency => {\n\t\t\tif (dependency.module) {\n\t\t\t\tenqueueJob(dependency.module);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @param {DependenciesBlock} block block to assign depth to\n\t\t * @returns {void}\n\t\t */\n\t\tconst assignDepthToDependencyBlock = block => {\n\t\t\tif (block.variables) {\n\t\t\t\titerationBlockVariable(block.variables, assignDepthToDependency);\n\t\t\t}\n\n\t\t\tif (block.dependencies) {\n\t\t\t\titerationOfArrayCallback(block.dependencies, assignDepthToDependency);\n\t\t\t}\n\n\t\t\tif (block.blocks) {\n\t\t\t\titerationOfArrayCallback(block.blocks, assignDepthToDependencyBlock);\n\t\t\t}\n\t\t};\n\n\t\tfor (module of queue) {\n\t\t\tqueue.delete(module);\n\t\t\tdepth = module.depth;\n\n\t\t\tdepth++;\n\t\t\tassignDepthToDependencyBlock(module);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module the module containing the dependency\n\t * @param {Dependency} dependency the dependency\n\t * @returns {DependencyReference} a reference for the dependency\n\t */\n\tgetDependencyReference(module, dependency) {\n\t\t// TODO remove dep.getReference existence check in webpack 5\n\t\tif (typeof dependency.getReference !== \"function\") return null;\n\t\tconst ref = dependency.getReference();\n\t\tif (!ref) return null;\n\t\treturn this.hooks.dependencyReference.call(ref, dependency, module);\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module module relationship for removal\n\t * @param {DependenciesBlockLike} block //TODO: good description\n\t * @returns {void}\n\t */\n\tremoveReasonsOfDependencyBlock(module, block) {\n\t\tconst iteratorDependency = d => {\n\t\t\tif (!d.module) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (d.module.removeReason(module, d)) {\n\t\t\t\tfor (const chunk of d.module.chunksIterable) {\n\t\t\t\t\tthis.patchChunksAfterReasonRemoval(d.module, chunk);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (block.blocks) {\n\t\t\titerationOfArrayCallback(block.blocks, block =>\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, block)\n\t\t\t);\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\n\t\t}\n\n\t\tif (block.variables) {\n\t\t\titerationBlockVariable(block.variables, iteratorDependency);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module module to patch tie\n\t * @param {Chunk} chunk chunk to patch tie\n\t * @returns {void}\n\t */\n\tpatchChunksAfterReasonRemoval(module, chunk) {\n\t\tif (!module.hasReasons()) {\n\t\t\tthis.removeReasonsOfDependencyBlock(module, module);\n\t\t}\n\t\tif (!module.hasReasonForChunk(chunk)) {\n\t\t\tif (module.removeChunk(chunk)) {\n\t\t\t\tthis.removeChunkFromDependencies(module, chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {DependenciesBlock} block block tie for Chunk\n\t * @param {Chunk} chunk chunk to remove from dep\n\t * @returns {void}\n\t */\n\tremoveChunkFromDependencies(block, chunk) {\n\t\tconst iteratorDependency = d => {\n\t\t\tif (!d.module) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patchChunksAfterReasonRemoval(d.module, chunk);\n\t\t};\n\n\t\tconst blocks = block.blocks;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst asyncBlock = blocks[indexBlock];\n\t\t\t// Grab all chunks from the first Block's AsyncDepBlock\n\t\t\tconst chunks = asyncBlock.chunkGroup.chunks;\n\t\t\t// For each chunk in chunkGroup\n\t\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\t\tconst iteratedChunk = chunks[indexChunk];\n\t\t\t\tasyncBlock.chunkGroup.removeChunk(iteratedChunk);\n\t\t\t\tasyncBlock.chunkGroup.removeParent(iteratedChunk);\n\t\t\t\t// Recurse\n\t\t\t\tthis.removeChunkFromDependencies(block, iteratedChunk);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\n\t\t}\n\n\t\tif (block.variables) {\n\t\t\titerationBlockVariable(block.variables, iteratorDependency);\n\t\t}\n\t}\n\n\tapplyModuleIds() {\n\t\tconst unusedIds = [];\n\t\tlet nextFreeModuleId = 0;\n\t\tconst usedIds = new Set();\n\t\tif (this.usedModuleIds) {\n\t\t\tfor (const id of this.usedModuleIds) {\n\t\t\t\tusedIds.add(id);\n\t\t\t}\n\t\t}\n\n\t\tconst modules1 = this.modules;\n\t\tfor (let indexModule1 = 0; indexModule1 < modules1.length; indexModule1++) {\n\t\t\tconst module1 = modules1[indexModule1];\n\t\t\tif (module1.id !== null) {\n\t\t\t\tusedIds.add(module1.id);\n\t\t\t}\n\t\t}\n\n\t\tif (usedIds.size > 0) {\n\t\t\tlet usedIdMax = -1;\n\t\t\tfor (const usedIdKey of usedIds) {\n\t\t\t\tif (typeof usedIdKey !== \"number\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tusedIdMax = Math.max(usedIdMax, usedIdKey);\n\t\t\t}\n\n\t\t\tlet lengthFreeModules = (nextFreeModuleId = usedIdMax + 1);\n\n\t\t\twhile (lengthFreeModules--) {\n\t\t\t\tif (!usedIds.has(lengthFreeModules)) {\n\t\t\t\t\tunusedIds.push(lengthFreeModules);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst modules2 = this.modules;\n\t\tfor (let indexModule2 = 0; indexModule2 < modules2.length; indexModule2++) {\n\t\t\tconst module2 = modules2[indexModule2];\n\t\t\tif (module2.id === null) {\n\t\t\t\tif (unusedIds.length > 0) {\n\t\t\t\t\tmodule2.id = unusedIds.pop();\n\t\t\t\t} else {\n\t\t\t\t\tmodule2.id = nextFreeModuleId++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyChunkIds() {\n\t\t/** @type {Set<number>} */\n\t\tconst usedIds = new Set();\n\n\t\t// Get used ids from usedChunkIds property (i. e. from records)\n\t\tif (this.usedChunkIds) {\n\t\t\tfor (const id of this.usedChunkIds) {\n\t\t\t\tif (typeof id !== \"number\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tusedIds.add(id);\n\t\t\t}\n\t\t}\n\n\t\t// Get used ids from existing chunks\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tconst usedIdValue = chunk.id;\n\n\t\t\tif (typeof usedIdValue !== \"number\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tusedIds.add(usedIdValue);\n\t\t}\n\n\t\t// Calculate maximum assigned chunk id\n\t\tlet nextFreeChunkId = -1;\n\t\tfor (const id of usedIds) {\n\t\t\tnextFreeChunkId = Math.max(nextFreeChunkId, id);\n\t\t}\n\t\tnextFreeChunkId++;\n\n\t\t// Determine free chunk ids from 0 to maximum\n\t\t/** @type {number[]} */\n\t\tconst unusedIds = [];\n\t\tif (nextFreeChunkId > 0) {\n\t\t\tlet index = nextFreeChunkId;\n\t\t\twhile (index--) {\n\t\t\t\tif (!usedIds.has(index)) {\n\t\t\t\t\tunusedIds.push(index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Assign ids to chunk which has no id\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tif (chunk.id === null) {\n\t\t\t\tif (unusedIds.length > 0) {\n\t\t\t\t\tchunk.id = unusedIds.pop();\n\t\t\t\t} else {\n\t\t\t\t\tchunk.id = nextFreeChunkId++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!chunk.ids) {\n\t\t\t\tchunk.ids = [chunk.id];\n\t\t\t}\n\t\t}\n\t}\n\n\tsortItemsWithModuleIds() {\n\t\tthis.modules.sort(byIdOrIdentifier);\n\n\t\tconst modules = this.modules;\n\t\tfor (let indexModule = 0; indexModule < modules.length; indexModule++) {\n\t\t\tmodules[indexModule].sortItems(false);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tchunks[indexChunk].sortItems();\n\t\t}\n\n\t\tchunks.sort((a, b) => a.compareTo(b));\n\t}\n\n\tsortItemsWithChunkIds() {\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.sortItems();\n\t\t}\n\n\t\tthis.chunks.sort(byId);\n\n\t\tfor (\n\t\t\tlet indexModule = 0;\n\t\t\tindexModule < this.modules.length;\n\t\t\tindexModule++\n\t\t) {\n\t\t\tthis.modules[indexModule].sortItems(true);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tchunks[indexChunk].sortItems();\n\t\t}\n\n\t\t/**\n\t\t * Used to sort errors and warnings in compilation. this.warnings, and\n\t\t * this.errors contribute to the compilation hash and therefore should be\n\t\t * updated whenever other references (having a chunk id) are sorted. This preserves the hash\n\t\t * integrity\n\t\t *\n\t\t * @param {WebpackError} a first WebpackError instance (including subclasses)\n\t\t * @param {WebpackError} b second WebpackError instance (including subclasses)\n\t\t * @returns {-1|0|1} sort order index\n\t\t */\n\t\tconst byMessage = (a, b) => {\n\t\t\tconst ma = `${a.message}`;\n\t\t\tconst mb = `${b.message}`;\n\t\t\tif (ma < mb) return -1;\n\t\t\tif (mb < ma) return 1;\n\t\t\treturn 0;\n\t\t};\n\n\t\tthis.errors.sort(byMessage);\n\t\tthis.warnings.sort(byMessage);\n\t\tthis.children.sort(byNameOrHash);\n\t}\n\n\tsummarizeDependencies() {\n\t\tthis.fileDependencies = new SortableSet(this.compilationDependencies);\n\t\tthis.contextDependencies = new SortableSet();\n\t\tthis.missingDependencies = new SortableSet();\n\n\t\tfor (\n\t\t\tlet indexChildren = 0;\n\t\t\tindexChildren < this.children.length;\n\t\t\tindexChildren++\n\t\t) {\n\t\t\tconst child = this.children[indexChildren];\n\n\t\t\taddAllToSet(this.fileDependencies, child.fileDependencies);\n\t\t\taddAllToSet(this.contextDependencies, child.contextDependencies);\n\t\t\taddAllToSet(this.missingDependencies, child.missingDependencies);\n\t\t}\n\n\t\tfor (\n\t\t\tlet indexModule = 0;\n\t\t\tindexModule < this.modules.length;\n\t\t\tindexModule++\n\t\t) {\n\t\t\tconst module = this.modules[indexModule];\n\n\t\t\tif (module.buildInfo.fileDependencies) {\n\t\t\t\taddAllToSet(this.fileDependencies, module.buildInfo.fileDependencies);\n\t\t\t}\n\t\t\tif (module.buildInfo.contextDependencies) {\n\t\t\t\taddAllToSet(\n\t\t\t\t\tthis.contextDependencies,\n\t\t\t\t\tmodule.buildInfo.contextDependencies\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfor (const error of this.errors) {\n\t\t\tif (\n\t\t\t\ttypeof error.missing === \"object\" &&\n\t\t\t\terror.missing &&\n\t\t\t\terror.missing[Symbol.iterator]\n\t\t\t) {\n\t\t\t\taddAllToSet(this.missingDependencies, error.missing);\n\t\t\t}\n\t\t}\n\t\tthis.fileDependencies.sort();\n\t\tthis.contextDependencies.sort();\n\t\tthis.missingDependencies.sort();\n\t}\n\n\tcreateHash() {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\tif (outputOptions.hashSalt) {\n\t\t\thash.update(outputOptions.hashSalt);\n\t\t}\n\t\tthis.mainTemplate.updateHash(hash);\n\t\tthis.chunkTemplate.updateHash(hash);\n\t\tfor (const key of Object.keys(this.moduleTemplates).sort()) {\n\t\t\tthis.moduleTemplates[key].updateHash(hash);\n\t\t}\n\t\tfor (const child of this.children) {\n\t\t\thash.update(child.hash);\n\t\t}\n\t\tfor (const warning of this.warnings) {\n\t\t\thash.update(`${warning.message}`);\n\t\t}\n\t\tfor (const error of this.errors) {\n\t\t\thash.update(`${error.message}`);\n\t\t}\n\t\tconst modules = this.modules;\n\t\tfor (let i = 0; i < modules.length; i++) {\n\t\t\tconst module = modules[i];\n\t\t\tconst moduleHash = createHash(hashFunction);\n\t\t\tmodule.updateHash(moduleHash);\n\t\t\tmodule.hash = /** @type {string} */ (moduleHash.digest(hashDigest));\n\t\t\tmodule.renderedHash = module.hash.substr(0, hashDigestLength);\n\t\t}\n\t\t// clone needed as sort below is inplace mutation\n\t\tconst chunks = this.chunks.slice();\n\t\t/**\n\t\t * sort here will bring all \"falsy\" values to the beginning\n\t\t * this is needed as the \"hasRuntime()\" chunks are dependent on the\n\t\t * hashes of the non-runtime chunks.\n\t\t */\n\t\tchunks.sort((a, b) => {\n\t\t\tconst aEntry = a.hasRuntime();\n\t\t\tconst bEntry = b.hasRuntime();\n\t\t\tif (aEntry && !bEntry) return 1;\n\t\t\tif (!aEntry && bEntry) return -1;\n\t\t\treturn byId(a, b);\n\t\t});\n\t\tfor (let i = 0; i < chunks.length; i++) {\n\t\t\tconst chunk = chunks[i];\n\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\ttry {\n\t\t\t\tif (outputOptions.hashSalt) {\n\t\t\t\t\tchunkHash.update(outputOptions.hashSalt);\n\t\t\t\t}\n\t\t\t\tchunk.updateHash(chunkHash);\n\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t? this.mainTemplate\n\t\t\t\t\t: this.chunkTemplate;\n\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\tchunkHash,\n\t\t\t\t\tchunk,\n\t\t\t\t\tthis.moduleTemplates.javascript,\n\t\t\t\t\tthis.dependencyTemplates\n\t\t\t\t);\n\t\t\t\tthis.hooks.chunkHash.call(chunk, chunkHash);\n\t\t\t\tchunk.hash = /** @type {string} */ (chunkHash.digest(hashDigest));\n\t\t\t\thash.update(chunk.hash);\n\t\t\t\tchunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n\t\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t}\n\t\t}\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\n\t}\n\n\t/**\n\t * @param {string} update extra information\n\t * @returns {void}\n\t */\n\tmodifyHash(update) {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\thash.update(this.fullHash);\n\t\thash.update(update);\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source} source asset source\n\t * @param {AssetInfo} assetInfo extra asset information\n\t * @returns {void}\n\t */\n\temitAsset(file, source, assetInfo = {}) {\n\t\tif (this.assets[file]) {\n\t\t\tif (!isSourceEqual(this.assets[file], source)) {\n\t\t\t\t// TODO webpack 5: make this an error instead\n\t\t\t\tthis.warnings.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`Conflict: Multiple assets emit different content to the same filename ${file}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.assets[file] = source;\n\t\t\t\tthis.assetsInfo.set(file, assetInfo);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst oldInfo = this.assetsInfo.get(file);\n\t\t\tthis.assetsInfo.set(file, Object.assign({}, oldInfo, assetInfo));\n\t\t\treturn;\n\t\t}\n\t\tthis.assets[file] = source;\n\t\tthis.assetsInfo.set(file, assetInfo);\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n\t * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n\t */\n\tupdateAsset(\n\t\tfile,\n\t\tnewSourceOrFunction,\n\t\tassetInfoUpdateOrFunction = undefined\n\t) {\n\t\tif (!this.assets[file]) {\n\t\t\tthrow new Error(\n\t\t\t\t`Called Compilation.updateAsset for not existing filename ${file}`\n\t\t\t);\n\t\t}\n\t\tif (typeof newSourceOrFunction === \"function\") {\n\t\t\tthis.assets[file] = newSourceOrFunction(this.assets[file]);\n\t\t} else {\n\t\t\tthis.assets[file] = newSourceOrFunction;\n\t\t}\n\t\tif (assetInfoUpdateOrFunction !== undefined) {\n\t\t\tconst oldInfo = this.assetsInfo.get(file);\n\t\t\tif (typeof assetInfoUpdateOrFunction === \"function\") {\n\t\t\t\tthis.assetsInfo.set(file, assetInfoUpdateOrFunction(oldInfo || {}));\n\t\t\t} else {\n\t\t\t\tthis.assetsInfo.set(\n\t\t\t\t\tfile,\n\t\t\t\t\tObject.assign({}, oldInfo, assetInfoUpdateOrFunction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAssets() {\n\t\t/** @type {Asset[]} */\n\t\tconst array = [];\n\t\tfor (const assetName of Object.keys(this.assets)) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n\t\t\t\tarray.push({\n\t\t\t\t\tname: assetName,\n\t\t\t\t\tsource: this.assets[assetName],\n\t\t\t\t\tinfo: this.assetsInfo.get(assetName) || {}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * @param {string} name the name of the asset\n\t * @returns {Asset | undefined} the asset or undefined when not found\n\t */\n\tgetAsset(name) {\n\t\tif (!Object.prototype.hasOwnProperty.call(this.assets, name))\n\t\t\treturn undefined;\n\t\treturn {\n\t\t\tname,\n\t\t\tsource: this.assets[name],\n\t\t\tinfo: this.assetsInfo.get(name) || {}\n\t\t};\n\t}\n\n\tcreateModuleAssets() {\n\t\tfor (let i = 0; i < this.modules.length; i++) {\n\t\t\tconst module = this.modules[i];\n\t\t\tif (module.buildInfo.assets) {\n\t\t\t\tconst assetsInfo = module.buildInfo.assetsInfo;\n\t\t\t\tfor (const assetName of Object.keys(module.buildInfo.assets)) {\n\t\t\t\t\tconst fileName = this.getPath(assetName);\n\t\t\t\t\tthis.emitAsset(\n\t\t\t\t\t\tfileName,\n\t\t\t\t\t\tmodule.buildInfo.assets[assetName],\n\t\t\t\t\t\tassetsInfo ? assetsInfo.get(assetName) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tthis.hooks.moduleAsset.call(module, fileName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateChunkAssets() {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst cachedSourceMap = new Map();\n\t\t/** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n\t\tconst alreadyWrittenFiles = new Map();\n\t\tfor (let i = 0; i < this.chunks.length; i++) {\n\t\t\tconst chunk = this.chunks[i];\n\t\t\tchunk.files = [];\n\t\t\tlet source;\n\t\t\tlet file;\n\t\t\tlet filenameTemplate;\n\t\t\ttry {\n\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t? this.mainTemplate\n\t\t\t\t\t: this.chunkTemplate;\n\t\t\t\tconst manifest = template.getRenderManifest({\n\t\t\t\t\tchunk,\n\t\t\t\t\thash: this.hash,\n\t\t\t\t\tfullHash: this.fullHash,\n\t\t\t\t\toutputOptions,\n\t\t\t\t\tmoduleTemplates: this.moduleTemplates,\n\t\t\t\t\tdependencyTemplates: this.dependencyTemplates\n\t\t\t\t}); // [{ render(), filenameTemplate, pathOptions, identifier, hash }]\n\t\t\t\tfor (const fileManifest of manifest) {\n\t\t\t\t\tconst cacheName = fileManifest.identifier;\n\t\t\t\t\tconst usedHash = fileManifest.hash;\n\t\t\t\t\tfilenameTemplate = fileManifest.filenameTemplate;\n\t\t\t\t\tconst pathAndInfo = this.getPathWithInfo(\n\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\tfileManifest.pathOptions\n\t\t\t\t\t);\n\t\t\t\t\tfile = pathAndInfo.path;\n\t\t\t\t\tconst assetInfo = pathAndInfo.info;\n\n\t\t\t\t\t// check if the same filename was already written by another chunk\n\t\t\t\t\tconst alreadyWritten = alreadyWrittenFiles.get(file);\n\t\t\t\t\tif (alreadyWritten !== undefined) {\n\t\t\t\t\t\tif (alreadyWritten.hash === usedHash) {\n\t\t\t\t\t\t\tif (this.cache) {\n\t\t\t\t\t\t\t\tthis.cache[cacheName] = {\n\t\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\t\tsource: alreadyWritten.source\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunk.files.push(file);\n\t\t\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Conflict: Multiple chunks emit assets to the same filename ${file}` +\n\t\t\t\t\t\t\t\t\t` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.cache &&\n\t\t\t\t\t\tthis.cache[cacheName] &&\n\t\t\t\t\t\tthis.cache[cacheName].hash === usedHash\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource = this.cache[cacheName].source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsource = fileManifest.render();\n\t\t\t\t\t\t// Ensure that source is a cached source to avoid additional cost because of repeated access\n\t\t\t\t\t\tif (!(source instanceof CachedSource)) {\n\t\t\t\t\t\t\tconst cacheEntry = cachedSourceMap.get(source);\n\t\t\t\t\t\t\tif (cacheEntry) {\n\t\t\t\t\t\t\t\tsource = cacheEntry;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst cachedSource = new CachedSource(source);\n\t\t\t\t\t\t\t\tcachedSourceMap.set(source, cachedSource);\n\t\t\t\t\t\t\t\tsource = cachedSource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.cache) {\n\t\t\t\t\t\t\tthis.cache[cacheName] = {\n\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\tsource\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.emitAsset(file, source, assetInfo);\n\t\t\t\t\tchunk.files.push(file);\n\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\talreadyWrittenFiles.set(file, {\n\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\tchunk\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew ChunkRenderError(chunk, file || filenameTemplate, err)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} filename used to get asset path with hash\n\t * @param {TODO=} data // TODO: figure out this param type\n\t * @returns {string} interpolated path\n\t */\n\tgetPath(filename, data) {\n\t\tdata = data || {};\n\t\tdata.hash = data.hash || this.hash;\n\t\treturn this.mainTemplate.getAssetPath(filename, data);\n\t}\n\n\t/**\n\t * @param {string} filename used to get asset path with hash\n\t * @param {TODO=} data // TODO: figure out this param type\n\t * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n\t */\n\tgetPathWithInfo(filename, data) {\n\t\tdata = data || {};\n\t\tdata.hash = data.hash || this.hash;\n\t\treturn this.mainTemplate.getAssetPathWithInfo(filename, data);\n\t}\n\n\t/**\n\t * This function allows you to run another instance of webpack inside of webpack however as\n\t * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n\t * from parent (or top level compiler) and creates a child Compilation\n\t *\n\t * @param {string} name name of the child compiler\n\t * @param {TODO} outputOptions // Need to convert config schema to types for this\n\t * @param {Plugin[]} plugins webpack plugins that will be applied\n\t * @returns {Compiler} creates a child Compiler instance\n\t */\n\tcreateChildCompiler(name, outputOptions, plugins) {\n\t\tconst idx = this.childrenCounters[name] || 0;\n\t\tthis.childrenCounters[name] = idx + 1;\n\t\treturn this.compiler.createChildCompiler(\n\t\t\tthis,\n\t\t\tname,\n\t\t\tidx,\n\t\t\toutputOptions,\n\t\t\tplugins\n\t\t);\n\t}\n\n\tcheckConstraints() {\n\t\t/** @type {Set<number|string>} */\n\t\tconst usedIds = new Set();\n\n\t\tconst modules = this.modules;\n\t\tfor (let indexModule = 0; indexModule < modules.length; indexModule++) {\n\t\t\tconst moduleId = modules[indexModule].id;\n\t\t\tif (moduleId === null) continue;\n\t\t\tif (usedIds.has(moduleId)) {\n\t\t\t\tthrow new Error(`checkConstraints: duplicate module id ${moduleId}`);\n\t\t\t}\n\t\t\tusedIds.add(moduleId);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tif (chunks.indexOf(chunk) !== indexChunk) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`checkConstraints: duplicate chunk in compilation ${chunk.debugId}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.checkConstraints();\n\t\t}\n\t}\n}\n\n// TODO remove in webpack 5\nCompilation.prototype.applyPlugins = util.deprecate(\n\t/**\n\t * @deprecated\n\t * @param {string} name Name\n\t * @param {any[]} args Other arguments\n\t * @returns {void}\n\t * @this {Compilation}\n\t */\n\tfunction(name, ...args) {\n\t\tthis.hooks[\n\t\t\tname.replace(/[- ]([a-z])/g, match => match[1].toUpperCase())\n\t\t].call(...args);\n\t},\n\t\"Compilation.applyPlugins is deprecated. Use new API on `.hooks` instead\"\n);\n\n// TODO remove in webpack 5\nObject.defineProperty(Compilation.prototype, \"moduleTemplate\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Compilation}\n\t\t * @returns {TODO} module template\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.moduleTemplates.javascript;\n\t\t},\n\t\t\"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {ModuleTemplate} value Template value\n\t\t * @this {Compilation}\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.moduleTemplates.javascript = value;\n\t\t},\n\t\t\"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead.\"\n\t)\n});\n\nmodule.exports = Compilation;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEE;AAAa,CAAC,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACnD,MAAM;EACLG,OAAO;EACPC,QAAQ;EACRC,YAAY;EACZC,iBAAiB;EACjBC;AACD,CAAC,GAAGP,OAAO,CAAC,SAAS,CAAC;AACtB,MAAMQ,wBAAwB,GAAGR,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAMS,mBAAmB,GAAGT,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMU,uBAAuB,GAAGV,OAAO,CAAC,2BAA2B,CAAC;AACpE,MAAMW,qBAAqB,GAAGX,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMY,UAAU,GAAGZ,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMa,KAAK,GAAGb,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMc,UAAU,GAAGd,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMe,YAAY,GAAGf,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAMgB,aAAa,GAAGhB,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMiB,sBAAsB,GAAGjB,OAAO,CAAC,0BAA0B,CAAC;AAClE,MAAMkB,cAAc,GAAGlB,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMmB,eAAe,GAAGnB,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAMoB,gBAAgB,GAAGpB,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAMqB,KAAK,GAAGrB,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMsB,SAAS,GAAGtB,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMuB,UAAU,GAAGvB,OAAO,CAAC,mBAAmB,CAAC;AAC/C,MAAMwB,WAAW,GAAGxB,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMyB,YAAY,GAAGzB,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAM0B,gBAAgB,GAAG1B,OAAO,CAAC,iCAAiC,CAAC;AACnE,MAAM2B,gBAAgB,GAAG3B,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAM;EAAE4B,MAAM;EAAEC;AAAQ,CAAC,GAAG7B,OAAO,CAAC,kBAAkB,CAAC;AACvD,MAAM8B,YAAY,GAAG9B,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAM+B,eAAe,GAAG/B,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAMgC,YAAY,GAAGhC,OAAO,CAAC,gBAAgB,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMiC,IAAI,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACtB,IAAI,OAAOD,CAAC,CAACE,EAAE,KAAK,OAAOD,CAAC,CAACC,EAAE,EAAE;IAChC,OAAO,OAAOF,CAAC,CAACE,EAAE,GAAG,OAAOD,CAAC,CAACC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;EAC1C;EACA,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;EAC1B,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;EACzB,OAAO,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACH,CAAC,EAAEC,CAAC,KAAK;EAClC,IAAI,OAAOD,CAAC,CAACE,EAAE,KAAK,OAAOD,CAAC,CAACC,EAAE,EAAE;IAChC,OAAO,OAAOF,CAAC,CAACE,EAAE,GAAG,OAAOD,CAAC,CAACC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;EAC1C;EACA,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;EAC1B,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;EACzB,MAAME,MAAM,GAAGJ,CAAC,CAACK,UAAU,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAGL,CAAC,CAACI,UAAU,CAAC,CAAC;EAC7B,IAAID,MAAM,GAAGE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC9B,IAAIF,MAAM,GAAGE,MAAM,EAAE,OAAO,CAAC;EAC7B,OAAO,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAACP,CAAC,EAAEC,CAAC,KAAK;EACrC,IAAID,CAAC,CAACQ,KAAK,GAAGP,CAAC,CAACO,KAAK,EAAE,OAAO,CAAC,CAAC;EAChC,IAAIR,CAAC,CAACQ,KAAK,GAAGP,CAAC,CAACO,KAAK,EAAE,OAAO,CAAC;EAC/B,MAAMJ,MAAM,GAAGJ,CAAC,CAACK,UAAU,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAGL,CAAC,CAACI,UAAU,CAAC,CAAC;EAC7B,IAAID,MAAM,GAAGE,MAAM,EAAE,OAAO,CAAC,CAAC;EAC9B,IAAIF,MAAM,GAAGE,MAAM,EAAE,OAAO,CAAC;EAC7B,OAAO,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,YAAY,GAAGA,CAACT,CAAC,EAAEC,CAAC,KAAK;EAC9B,IAAID,CAAC,CAACU,IAAI,GAAGT,CAAC,CAACS,IAAI,EAAE,OAAO,CAAC,CAAC;EAC9B,IAAIV,CAAC,CAACU,IAAI,GAAGT,CAAC,CAACS,IAAI,EAAE,OAAO,CAAC;EAC7B,IAAIV,CAAC,CAACW,QAAQ,GAAGV,CAAC,CAACU,QAAQ,EAAE,OAAO,CAAC,CAAC;EACtC,IAAIX,CAAC,CAACW,QAAQ,GAAGV,CAAC,CAACU,QAAQ,EAAE,OAAO,CAAC;EACrC,OAAO,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAGA,CAACC,SAAS,EAAEC,EAAE,KAAK;EACjD,KACC,IAAIC,aAAa,GAAG,CAAC,EACrBA,aAAa,GAAGF,SAAS,CAACG,MAAM,EAChCD,aAAa,EAAE,EACd;IACD,MAAME,MAAM,GAAGJ,SAAS,CAACE,aAAa,CAAC,CAACG,YAAY;IACpD,KAAK,IAAIC,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAGF,MAAM,CAACD,MAAM,EAAEG,SAAS,EAAE,EAAE;MAC/DL,EAAE,CAACG,MAAM,CAACE,SAAS,CAAC,CAAC;IACtB;EACD;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,wBAAwB,GAAGA,CAACC,GAAG,EAAEP,EAAE,KAAK;EAC7C,KAAK,IAAIN,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGa,GAAG,CAACL,MAAM,EAAER,KAAK,EAAE,EAAE;IAChDM,EAAE,CAACO,GAAG,CAACb,KAAK,CAAC,CAAC;EACf;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMc,WAAW,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EACtC,KAAK,MAAMC,IAAI,IAAID,QAAQ,EAAE;IAC5BD,GAAG,CAACG,GAAG,CAACD,IAAI,CAAC;EACd;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAME,aAAa,GAAGA,CAAC3B,CAAC,EAAEC,CAAC,KAAK;EAC/B,IAAID,CAAC,KAAKC,CAAC,EAAE,OAAO,IAAI;EACxB;EACA;EACA,IAAI2B,OAAO,GAAG5B,CAAC,CAAC6B,MAAM,CAAC,CAAC;EACxB;EACA,IAAIC,OAAO,GAAG7B,CAAC,CAAC4B,MAAM,CAAC,CAAC;EACxB,IAAID,OAAO,KAAKE,OAAO,EAAE,OAAO,IAAI;EACpC,IAAI,OAAOF,OAAO,KAAK,QAAQ,IAAI,OAAOE,OAAO,KAAK,QAAQ,EAAE,OAAO,KAAK;EAC5E,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACJ,OAAO,CAAC,EAAEA,OAAO,GAAGG,MAAM,CAACE,IAAI,CAACL,OAAO,EAAE,OAAO,CAAC;EACtE,IAAI,CAACG,MAAM,CAACC,QAAQ,CAACF,OAAO,CAAC,EAAEA,OAAO,GAAGC,MAAM,CAACE,IAAI,CAACH,OAAO,EAAE,OAAO,CAAC;EACtE,OAAOF,OAAO,CAACM,MAAM,CAACJ,OAAO,CAAC;AAC/B,CAAC;AAED,MAAMK,WAAW,SAASlE,OAAO,CAAC;EACjC;AACD;AACA;AACA;EACCmE,WAAWA,CAACC,QAAQ,EAAE;IACrB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACZ;MACAC,WAAW,EAAE,IAAIrE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACrC;MACAsE,aAAa,EAAE,IAAItE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACvC;MACAuE,YAAY,EAAE,IAAIvE,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;MAC/C;MACAwE,aAAa,EAAE,IAAIxE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAEvC;MACAyE,QAAQ,EAAE,IAAIzE,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;MACzC;MACA0E,WAAW,EAAE,IAAI1E,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;MACrD;MACA2E,YAAY,EAAE,IAAI3E,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;MAEvD;MACA4E,mBAAmB,EAAE,IAAI1E,iBAAiB,CAAC,CAC1C,qBAAqB,EACrB,YAAY,EACZ,QAAQ,CACR,CAAC;MAEF;MACA2E,aAAa,EAAE,IAAI1E,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC;MAC/C;MACA2E,sBAAsB,EAAE,IAAI9E,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChD;MACA+E,MAAM,EAAE,IAAI/E,QAAQ,CAAC,EAAE,CAAC;MACxB;MACAgF,IAAI,EAAE,IAAIhF,QAAQ,CAAC,EAAE,CAAC;MAEtB;MACAiF,YAAY,EAAE,IAAIjF,QAAQ,CAAC,EAAE,CAAC;MAC9B;MACAkF,WAAW,EAAE,IAAIlF,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAErC;MACAmF,yBAAyB,EAAE,IAAIlF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MACxD;MACAmF,oBAAoB,EAAE,IAAInF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MACnD;MACAoF,4BAA4B,EAAE,IAAIpF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MAC3D;MACAqF,yBAAyB,EAAE,IAAItF,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAEpD;MACAuF,QAAQ,EAAE,IAAIvF,QAAQ,CAAC,EAAE,CAAC;MAC1B;MACAwF,oBAAoB,EAAE,IAAIvF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MACnD;MACAwF,eAAe,EAAE,IAAIxF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MAC9C;MACAyF,uBAAuB,EAAE,IAAIzF,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;MACtD;MACA0F,oBAAoB,EAAE,IAAI3F,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAE/C;MACA4F,mBAAmB,EAAE,IAAI3F,YAAY,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;MAChE;MACA4F,cAAc,EAAE,IAAI5F,YAAY,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;MAC3D;MACA6F,sBAAsB,EAAE,IAAI7F,YAAY,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;MACnE;MACA8F,mBAAmB,EAAE,IAAI/F,QAAQ,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;MAE5D;MACAgG,YAAY,EAAE,IAAI7F,eAAe,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MACxD;MACA8F,iBAAiB,EAAE,IAAIjG,QAAQ,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAEtD;MACAkG,yBAAyB,EAAE,IAAIjG,YAAY,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAClE;MACAkG,oBAAoB,EAAE,IAAIlG,YAAY,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAC7D;MACAmG,4BAA4B,EAAE,IAAInG,YAAY,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MACrE;MACAoG,yBAAyB,EAAE,IAAIrG,QAAQ,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAC9D;MACAsG,YAAY,EAAE,IAAIrG,YAAY,CAAC,EAAE,CAAC;MAElC;MACAsG,aAAa,EAAE,IAAIvG,QAAQ,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;MACnD;MACAwG,mBAAmB,EAAE,IAAIxG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAC9C;MACAyG,2BAA2B,EAAE,IAAIzG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACtD;MACA0G,eAAe,EAAE,IAAI1G,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAC1C;MACA2G,SAAS,EAAE,IAAI3G,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACpC;MACA4G,iBAAiB,EAAE,IAAI5G,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAC5C;MACA6G,sBAAsB,EAAE,IAAI7G,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MAEjD;MACA8G,YAAY,EAAE,IAAI9G,QAAQ,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MACjD;MACA+G,kBAAkB,EAAE,IAAI/G,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC5C;MACAgH,cAAc,EAAE,IAAIhH,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACxC;MACAiH,gBAAgB,EAAE,IAAIjH,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC1C;MACAkH,qBAAqB,EAAE,IAAIlH,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAE/C;MACAmH,aAAa,EAAE,IAAInH,QAAQ,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;MACnD;MACAoH,YAAY,EAAE,IAAIpH,QAAQ,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAEjD;MACAqH,UAAU,EAAE,IAAIrH,QAAQ,CAAC,EAAE,CAAC;MAC5B;MACAsH,WAAW,EAAE,IAAItH,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACpC;MACAuH,SAAS,EAAE,IAAIvH,QAAQ,CAAC,EAAE,CAAC;MAC3B;MACAwH,UAAU,EAAE,IAAIxH,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACrC;MACAyH,MAAM,EAAE,IAAIzH,QAAQ,CAAC,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;MAEhD;MACA0H,kBAAkB,EAAE,IAAI1H,QAAQ,CAAC,EAAE,CAAC;MACpC;MACA2H,yBAAyB,EAAE,IAAI1H,YAAY,CAAC,EAAE,CAAC;MAC/C;MACA2H,iBAAiB,EAAE,IAAI5H,QAAQ,CAAC,EAAE,CAAC;MACnC;MACA6H,qBAAqB,EAAE,IAAI7H,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAE/C;MACA8H,gBAAgB,EAAE,IAAI3H,eAAe,CAAC,EAAE,CAAC;MACzC;MACA4H,mBAAmB,EAAE,IAAI5H,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC;MACpD;MACA6H,wBAAwB,EAAE,IAAIhI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClD;MACAiI,cAAc,EAAE,IAAI9H,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC/C;MACA+H,mBAAmB,EAAE,IAAIlI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAE7C;MACAmI,kBAAkB,EAAE,IAAIlI,YAAY,CAAC,EAAE,CAAC;MACxC;MACAmI,SAAS,EAAE,IAAIjI,eAAe,CAAC,EAAE,CAAC;MAElC;MACAkI,SAAS,EAAE,IAAIrI,QAAQ,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;MAC/C;MACAsI,WAAW,EAAE,IAAItI,QAAQ,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;MACjD;MACAuI,UAAU,EAAE,IAAIvI,QAAQ,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;MAE/C;MACAwI,SAAS,EAAE,IAAItI,iBAAiB,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;MAAE;;MAExD;MACAuI,kBAAkB,EAAE,IAAIxI,YAAY,CAAC,EAAE,CAAC;MAExC;MACAyI,aAAa,EAAE,IAAI1I,QAAQ,CAAC,CAC3B,eAAe,EACf,cAAc,EACd,eAAe,CACf,CAAC;MAEF;MACA2I,GAAG,EAAE,IAAI1I,YAAY,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;MAE7C;MACA;MACA;MACA2I,kBAAkB,EAAE,IAAI5I,QAAQ,CAAC,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;MAE7D;MACA6I,4BAA4B,EAAE,IAAI5I,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC1D;MACA6I,uBAAuB,EAAE,IAAI7I,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC;MACrD;MACA8I,+BAA+B,EAAE,IAAI9I,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC7D;MACA+I,4BAA4B,EAAE,IAAIhJ,QAAQ,CAAC,CAAC,QAAQ,CAAC;IACtD,CAAC;IACD,IAAI,CAACiJ,aAAa,CAACC,GAAG,CAAC,aAAa,EAAEC,OAAO,IAAI;MAChD,QAAQA,OAAO,CAAC3G,IAAI;QACnB,KAAK,eAAe;QACpB,KAAK,mBAAmB;QACxB,KAAK,uBAAuB;QAC5B,KAAK,iBAAiB;QACtB,KAAK,YAAY;UAChB2G,OAAO,CAACC,KAAK,GAAG,IAAI;UACpB;MACF;IACD,CAAC,CAAC;IACF;IACA,IAAI,CAAC5G,IAAI,GAAG6G,SAAS;IACrB;IACA,IAAI,CAAClF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACmF,eAAe,GAAGnF,QAAQ,CAACmF,eAAe;IAC/C,IAAI,CAACC,eAAe,GAAGpF,QAAQ,CAACoF,eAAe;IAC/C,IAAI,CAACC,gBAAgB,GAAGrF,QAAQ,CAACqF,gBAAgB;IAEjD,MAAML,OAAO,GAAGhF,QAAQ,CAACgF,OAAO;IAChC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACM,aAAa,GAAGN,OAAO,IAAIA,OAAO,CAACO,MAAM;IAC9C;IACA,IAAI,CAACC,IAAI,GAAGR,OAAO,IAAIA,OAAO,CAACQ,IAAI;IACnC,IAAI,CAACC,OAAO,GAAGT,OAAO,IAAIA,OAAO,CAACS,OAAO;IACzC,IAAI,CAACC,WAAW,GAAGV,OAAO,IAAIA,OAAO,CAACU,WAAW;IAEjD,IAAI,CAACC,YAAY,GAAG,IAAInJ,YAAY,CAAC,IAAI,CAAC8I,aAAa,CAAC;IACxD,IAAI,CAACM,aAAa,GAAG,IAAInJ,aAAa,CAAC,IAAI,CAAC6I,aAAa,CAAC;IAC1D,IAAI,CAACO,sBAAsB,GAAG,IAAInJ,sBAAsB,CACvD,IAAI,CAAC4I,aACN,CAAC;IACD,IAAI,CAACQ,eAAe,GAAG,IAAIlJ,eAAe,CACzC,IAAI,CAAC0I,aAAa,EAClB,IAAI,CAACD,gBACN,CAAC;IACD,IAAI,CAACU,eAAe,GAAG;MACtBC,UAAU,EAAE,IAAIrJ,cAAc,CAAC,IAAI,CAACmJ,eAAe,EAAE,YAAY,CAAC;MAClEG,WAAW,EAAE,IAAItJ,cAAc,CAAC,IAAI,CAACmJ,eAAe,EAAE,aAAa;IACpE,CAAC;IAED,IAAI,CAACI,SAAS,GAAG,IAAInJ,SAAS,CAACiI,OAAO,CAACmB,WAAW,IAAI,GAAG,CAAC;IAE1D,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB;IACA,IAAI,CAACC,oBAAoB,GAAG,EAAE;IAC9B;IACA,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5B;IACA,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB;IACA,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAIH,GAAG,CAAC,CAAC;IACjC;IACA,IAAI,CAACI,WAAW,GAAG,IAAIJ,GAAG,CAAC,CAAC;IAC5B;IACA,IAAI,CAACK,OAAO,GAAG,EAAE;IACjB;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIN,GAAG,CAAC,CAAC;IACzB,IAAI,CAACO,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;IACA,IAAI,CAACrD,qBAAqB,GAAG,EAAE;IAC/B;IACA,IAAI,CAACsD,MAAM,GAAG,CAAC,CAAC;IAChB;IACA,IAAI,CAACC,UAAU,GAAG,IAAIV,GAAG,CAAC,CAAC;IAC3B;IACA,IAAI,CAACW,MAAM,GAAG,EAAE;IAChB;IACA,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB;IACA,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB;IACA,IAAI,CAACC,OAAO,GAAG,IAAId,GAAG,CAAC,CAAC;IACxB;IACA,IAAI,CAACe,mBAAmB,GAAG,IAAIf,GAAG,CAAC,CAAC;IACpC;IACA,IAAI,CAACgB,mBAAmB,GAAG,IAAIhB,GAAG,CAAC,CAAC;IACpC;IACA;IACA,IAAI,CAACgB,mBAAmB,CAACrI,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;IACxC,IAAI,CAACsI,gBAAgB,GAAG,CAAC,CAAC;IAC1B;IACA,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB;IACA,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;IACA,IAAI,CAACC,cAAc,GAAGzC,SAAS;IAC/B;IACA,IAAI,CAAC0C,iBAAiB,GAAG1C,SAAS;IAClC;IACA,IAAI,CAAC2C,uBAAuB,GAAG3C,SAAS;IACxC;IACA,IAAI,CAAC4C,gBAAgB,GAAG,IAAIvB,GAAG,CAAC,CAAC;IACjC;IACA,IAAI,CAACwB,kBAAkB,GAAG,IAAIxB,GAAG,CAAC,CAAC;IACnC;IACA,IAAI,CAACyB,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC/B;EAEAC,QAAQA,CAAA,EAAG;IACV,OAAO,IAAIpL,KAAK,CAAC,IAAI,CAAC;EACvB;;EAEA;AACD;AACA;AACA;EACCqL,SAASA,CAAC9J,IAAI,EAAE;IACf,IAAI,CAACA,IAAI,EAAE;MACV,MAAM,IAAI+J,SAAS,CAAC,mDAAmD,CAAC;IACzE;IACA;IACA,IAAIC,UAAU;IACd,OAAO,IAAIhL,MAAM,CAAC,CAACiL,IAAI,EAAEC,IAAI,KAAK;MACjC,IAAI,OAAOlK,IAAI,KAAK,UAAU,EAAE;QAC/BA,IAAI,GAAGA,IAAI,CAAC,CAAC;QACb,IAAI,CAACA,IAAI,EAAE;UACV,MAAM,IAAI+J,SAAS,CAClB,yEACD,CAAC;QACF;MACD;MACA,IAAII,KAAK;MACT,QAAQF,IAAI;QACX,KAAKhL,OAAO,CAACmL,IAAI;QACjB,KAAKnL,OAAO,CAACoL,KAAK;QAClB,KAAKpL,OAAO,CAACkL,KAAK;UACjBA,KAAK,GAAGjL,YAAY,CAACoL,qBAAqB,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAClEC,KAAK,CAAC,IAAI,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC;UACV;MACF;MACA;MACA,MAAMC,QAAQ,GAAG;QAChBC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAChBb,IAAI;QACJC,IAAI;QACJC;MACD,CAAC;MACD,IAAI,IAAI,CAACvI,KAAK,CAACuE,GAAG,CAAC4E,IAAI,CAAC/K,IAAI,EAAE2K,QAAQ,CAAC,KAAK9D,SAAS,EAAE;QACtD,IAAI8D,QAAQ,CAACV,IAAI,KAAKhL,OAAO,CAAC+L,UAAU,EAAE;UACzC;UACA,IAAI,OAAOC,OAAO,CAACD,UAAU,KAAK,UAAU,EAAE;YAC7C;YACAC,OAAO,CAACD,UAAU,CAAC,IAAIhL,IAAI,KAAK2K,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;UACpD;QACD;QACA,IAAIF,UAAU,KAAKnD,SAAS,EAAE;UAC7BmD,UAAU,GAAG,IAAI,CAAChB,OAAO,CAACkC,GAAG,CAAClL,IAAI,CAAC;UACnC,IAAIgK,UAAU,KAAKnD,SAAS,EAAE;YAC7BmD,UAAU,GAAG,EAAE;YACf,IAAI,CAAChB,OAAO,CAACnI,GAAG,CAACb,IAAI,EAAEgK,UAAU,CAAC;UACnC;QACD;QACAA,UAAU,CAACmB,IAAI,CAACR,QAAQ,CAAC;QACzB,IAAIA,QAAQ,CAACV,IAAI,KAAKhL,OAAO,CAACmI,OAAO,EAAE;UACtC;UACA,IAAI,OAAO6D,OAAO,CAAC7D,OAAO,KAAK,UAAU,EAAE;YAC1C;YACA6D,OAAO,CAAC7D,OAAO,CAAC,IAAIpH,IAAI,KAAK2K,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;UACjD;QACD;MACD;IACD,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;EACCkB,SAASA,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC7B,MAAM3L,UAAU,GAAG0L,MAAM,CAAC1L,UAAU,CAAC,CAAC;IACtC,MAAM4L,kBAAkB,GAAG,IAAI,CAAC/C,QAAQ,CAAC0C,GAAG,CAACvL,UAAU,CAAC;IACxD,IAAI4L,kBAAkB,EAAE;MACvB,OAAO;QACNF,MAAM,EAAEE,kBAAkB;QAC1BC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,KAAK;QACZjL,YAAY,EAAE;MACf,CAAC;IACF;IACA,MAAMkL,SAAS,GAAG,CAACJ,UAAU,IAAI,GAAG,IAAI3L,UAAU;IAClD,IAAI,IAAI,CAAC8I,KAAK,IAAI,IAAI,CAACA,KAAK,CAACiD,SAAS,CAAC,EAAE;MACxC,MAAMC,WAAW,GAAG,IAAI,CAAClD,KAAK,CAACiD,SAAS,CAAC;MAEzC,IAAI,OAAOC,WAAW,CAACC,iBAAiB,KAAK,UAAU,EAAE;QACxDD,WAAW,CAACC,iBAAiB,CAACP,MAAM,CAAC;MACtC;MAEA,IAAIQ,OAAO,GAAG,IAAI;MAClB,IAAI,IAAI,CAACvC,cAAc,IAAI,IAAI,CAACC,iBAAiB,EAAE;QAClDsC,OAAO,GAAGF,WAAW,CAACG,WAAW,CAChC,IAAI,CAACxC,cAAc,EACnB,IAAI,CAACC,iBACN,CAAC;MACF;MAEA,IAAI,CAACsC,OAAO,EAAE;QACbF,WAAW,CAACI,UAAU,CAAC,CAAC;QACxB,IAAI,CAACvD,QAAQ,CAAC3H,GAAG,CAAClB,UAAU,EAAEgM,WAAW,CAAC;QAC1C,IAAI,CAACpD,OAAO,CAAC4C,IAAI,CAACQ,WAAW,CAAC;QAC9B,KAAK,MAAMK,GAAG,IAAIL,WAAW,CAAC9C,MAAM,EAAE;UACrC,IAAI,CAACA,MAAM,CAACsC,IAAI,CAACa,GAAG,CAAC;QACtB;QACA,KAAK,MAAMA,GAAG,IAAIL,WAAW,CAAC7C,QAAQ,EAAE;UACvC,IAAI,CAACA,QAAQ,CAACqC,IAAI,CAACa,GAAG,CAAC;QACxB;QACA,OAAO;UACNX,MAAM,EAAEM,WAAW;UACnBH,MAAM,EAAE,IAAI;UACZC,KAAK,EAAE,KAAK;UACZjL,YAAY,EAAE;QACf,CAAC;MACF;MACAmL,WAAW,CAACM,OAAO,CAAC,CAAC;MACrBZ,MAAM,GAAGM,WAAW;IACrB;IACA,IAAI,CAACnD,QAAQ,CAAC3H,GAAG,CAAClB,UAAU,EAAE0L,MAAM,CAAC;IACrC,IAAI,IAAI,CAAC5C,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,CAACiD,SAAS,CAAC,GAAGL,MAAM;IAC/B;IACA,IAAI,CAAC9C,OAAO,CAAC4C,IAAI,CAACE,MAAM,CAAC;IACzB,OAAO;MACNA,MAAM,EAAEA,MAAM;MACdG,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,IAAI;MACXjL,YAAY,EAAE;IACf,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;EACC0L,SAASA,CAACb,MAAM,EAAE;IACjB,MAAM1L,UAAU,GAAG0L,MAAM,CAAC1L,UAAU,CAAC,CAAC;IACtC,OAAO,IAAI,CAAC6I,QAAQ,CAAC0C,GAAG,CAACvL,UAAU,CAAC;EACrC;;EAEA;AACD;AACA;AACA;AACA;EACCwM,UAAUA,CAACxM,UAAU,EAAE;IACtB,OAAO,IAAI,CAAC6I,QAAQ,CAAC0C,GAAG,CAACvL,UAAU,CAAC;EACrC;;EAEA;AACD;AACA;AACA;AACA;EACCyM,uBAAuBA,CAACf,MAAM,EAAEgB,QAAQ,EAAE;IACzC,IAAIC,YAAY,GAAG,IAAI,CAAC7C,gBAAgB,CAACyB,GAAG,CAACG,MAAM,CAAC;IACpD,IAAIiB,YAAY,EAAE;MACjBA,YAAY,CAACnB,IAAI,CAAC,MAAMkB,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACNE,OAAO,CAACC,QAAQ,CAACH,QAAQ,CAAC;IAC3B;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCxK,WAAWA,CAACwJ,MAAM,EAAEoB,QAAQ,EAAEC,MAAM,EAAElM,YAAY,EAAEmM,YAAY,EAAE;IACjE,IAAIL,YAAY,GAAG,IAAI,CAAC7C,gBAAgB,CAACyB,GAAG,CAACG,MAAM,CAAC;IACpD,IAAIiB,YAAY,EAAE;MACjBA,YAAY,CAACnB,IAAI,CAACwB,YAAY,CAAC;MAC/B;IACD;IACA,IAAI,CAAClD,gBAAgB,CAAC5I,GAAG,CAACwK,MAAM,EAAGiB,YAAY,GAAG,CAACK,YAAY,CAAE,CAAC;IAElE,MAAMN,QAAQ,GAAGL,GAAG,IAAI;MACvB,IAAI,CAACvC,gBAAgB,CAACmD,MAAM,CAACvB,MAAM,CAAC;MACpC,KAAK,MAAMwB,EAAE,IAAIP,YAAY,EAAE;QAC9BO,EAAE,CAACb,GAAG,CAAC;MACR;IACD,CAAC;IAED,IAAI,CAACpK,KAAK,CAACC,WAAW,CAACkJ,IAAI,CAACM,MAAM,CAAC;IACnCA,MAAM,CAACI,KAAK,CACX,IAAI,CAAC9E,OAAO,EACZ,IAAI,EACJ,IAAI,CAACG,eAAe,CAACoE,GAAG,CAAC,QAAQ,EAAEG,MAAM,CAACyB,cAAc,CAAC,EACzD,IAAI,CAAC/F,eAAe,EACpBsD,KAAK,IAAI;MACR,MAAMxB,MAAM,GAAGwC,MAAM,CAACxC,MAAM;MAC5B,KAAK,IAAIkE,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGlE,MAAM,CAACvI,MAAM,EAAEyM,UAAU,EAAE,EAAE;QAClE,MAAMf,GAAG,GAAGnD,MAAM,CAACkE,UAAU,CAAC;QAC9Bf,GAAG,CAACU,MAAM,GAAGA,MAAM;QACnBV,GAAG,CAACxL,YAAY,GAAGA,YAAY;QAC/B,IAAIiM,QAAQ,EAAE;UACb,IAAI,CAAC3D,QAAQ,CAACqC,IAAI,CAACa,GAAG,CAAC;QACxB,CAAC,MAAM;UACN,IAAI,CAACnD,MAAM,CAACsC,IAAI,CAACa,GAAG,CAAC;QACtB;MACD;MAEA,MAAMlD,QAAQ,GAAGuC,MAAM,CAACvC,QAAQ;MAChC,KACC,IAAIkE,YAAY,GAAG,CAAC,EACpBA,YAAY,GAAGlE,QAAQ,CAACxI,MAAM,EAC9B0M,YAAY,EAAE,EACb;QACD,MAAMC,GAAG,GAAGnE,QAAQ,CAACkE,YAAY,CAAC;QAClCC,GAAG,CAACP,MAAM,GAAGA,MAAM;QACnBO,GAAG,CAACzM,YAAY,GAAGA,YAAY;QAC/B,IAAI,CAACsI,QAAQ,CAACqC,IAAI,CAAC8B,GAAG,CAAC;MACxB;MACA,MAAMC,WAAW,GAAG7B,MAAM,CAAC7K,YAAY,CAAC2M,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,KAAK;QAC7DF,GAAG,CAACvM,GAAG,CAACwM,CAAC,EAAEC,CAAC,CAAC;QACb,OAAOF,GAAG;MACX,CAAC,EAAE,IAAIlF,GAAG,CAAC,CAAC,CAAC;MACbmD,MAAM,CAAC7K,YAAY,CAAC+M,IAAI,CAAC,CAACjO,CAAC,EAAEC,CAAC,KAAK;QAClC,MAAMiO,GAAG,GAAGzO,gBAAgB,CAACO,CAAC,CAACmO,GAAG,EAAElO,CAAC,CAACkO,GAAG,CAAC;QAC1C,IAAID,GAAG,EAAE,OAAOA,GAAG;QACnB,OAAON,WAAW,CAAChC,GAAG,CAAC5L,CAAC,CAAC,GAAG4N,WAAW,CAAChC,GAAG,CAAC3L,CAAC,CAAC;MAC/C,CAAC,CAAC;MACF,IAAI8K,KAAK,EAAE;QACV,IAAI,CAACzI,KAAK,CAACG,YAAY,CAACgJ,IAAI,CAACM,MAAM,EAAEhB,KAAK,CAAC;QAC3C,OAAOgC,QAAQ,CAAChC,KAAK,CAAC;MACvB;MACA,IAAI,CAACzI,KAAK,CAACI,aAAa,CAAC+I,IAAI,CAACM,MAAM,CAAC;MACrC,OAAOgB,QAAQ,CAAC,CAAC;IAClB,CACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;EACCqB,yBAAyBA,CAACrC,MAAM,EAAEgB,QAAQ,EAAE;IAC3C,MAAM7L,YAAY,GAAG,IAAI0H,GAAG,CAAC,CAAC;IAE9B,MAAMyF,aAAa,GAAGC,GAAG,IAAI;MAC5B,MAAMC,aAAa,GAAGD,GAAG,CAACE,qBAAqB,CAAC,CAAC;MACjD,IAAID,aAAa,EAAE;QAClB,MAAME,OAAO,GAAG,IAAI,CAAC9E,mBAAmB,CAACiC,GAAG,CAAC0C,GAAG,CAAClM,WAAW,CAAC;QAC7D,IAAIqM,OAAO,KAAKlH,SAAS,EAAE;UAC1B,MAAM,IAAI0D,KAAK,CACd,oDAAoDqD,GAAG,CAAClM,WAAW,CAAC1B,IAAI,EACzE,CAAC;QACF;QACA,IAAIgO,QAAQ,GAAGxN,YAAY,CAAC0K,GAAG,CAAC6C,OAAO,CAAC;QACxC,IAAIC,QAAQ,KAAKnH,SAAS,EAAE;UAC3BrG,YAAY,CAACK,GAAG,CAACkN,OAAO,EAAGC,QAAQ,GAAG,IAAI9F,GAAG,CAAC,CAAE,CAAC;QAClD;QACA,IAAI+F,IAAI,GAAGD,QAAQ,CAAC9C,GAAG,CAAC2C,aAAa,CAAC;QACtC,IAAII,IAAI,KAAKpH,SAAS,EAAEmH,QAAQ,CAACnN,GAAG,CAACgN,aAAa,EAAGI,IAAI,GAAG,EAAG,CAAC;QAChEA,IAAI,CAAC9C,IAAI,CAACyC,GAAG,CAAC;MACf;IACD,CAAC;IAED,MAAMM,oBAAoB,GAAGC,KAAK,IAAI;MACrC,IAAIA,KAAK,CAAC3N,YAAY,EAAE;QACvBE,wBAAwB,CAACyN,KAAK,CAAC3N,YAAY,EAAEmN,aAAa,CAAC;MAC5D;MACA,IAAIQ,KAAK,CAACC,MAAM,EAAE;QACjB1N,wBAAwB,CAACyN,KAAK,CAACC,MAAM,EAAEF,oBAAoB,CAAC;MAC7D;MACA,IAAIC,KAAK,CAAChO,SAAS,EAAE;QACpBD,sBAAsB,CAACiO,KAAK,CAAChO,SAAS,EAAEwN,aAAa,CAAC;MACvD;IACD,CAAC;IAED,IAAI;MACHO,oBAAoB,CAAC7C,MAAM,CAAC;IAC7B,CAAC,CAAC,OAAOgD,CAAC,EAAE;MACXhC,QAAQ,CAACgC,CAAC,CAAC;IACZ;IAEA,MAAMC,kBAAkB,GAAG,EAAE;IAE7B,KAAK,MAAMC,KAAK,IAAI/N,YAAY,EAAE;MACjC,KAAK,MAAMgO,KAAK,IAAID,KAAK,CAAC,CAAC,CAAC,EAAE;QAC7BD,kBAAkB,CAACnD,IAAI,CAAC;UACvB4C,OAAO,EAAEQ,KAAK,CAAC,CAAC,CAAC;UACjB/N,YAAY,EAAEgO,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC;MACH;IACD;IAEA,IAAI,CAACC,qBAAqB,CACzBpD,MAAM,EACNiD,kBAAkB,EAClB,IAAI,CAACnH,IAAI,EACT,IAAI,EACJ,IAAI,EACJkF,QACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCoC,qBAAqBA,CACpBpD,MAAM,EACN7K,YAAY,EACZ2G,IAAI,EACJmE,UAAU,EACVoD,SAAS,EACTrC,QAAQ,EACP;IACD,MAAMsC,KAAK,GAAG,IAAI,CAACvH,OAAO,IAAIyD,IAAI,CAACC,GAAG,CAAC,CAAC;IACxC,MAAM8D,cAAc,GAAG,IAAI,CAACxH,OAAO,IAAI,CAAC,CAAC;IAEzCjK,QAAQ,CAAC0R,OAAO,CACfrO,YAAY,EACZ,CAACO,IAAI,EAAEsL,QAAQ,KAAK;MACnB,MAAM7L,YAAY,GAAGO,IAAI,CAACP,YAAY;MAEtC,MAAMsO,gBAAgB,GAAG9C,GAAG,IAAI;QAC/BA,GAAG,CAACU,MAAM,GAAGrB,MAAM;QACnBW,GAAG,CAACxL,YAAY,GAAGA,YAAY;QAC/B,IAAI,CAACqI,MAAM,CAACsC,IAAI,CAACa,GAAG,CAAC;QACrB,IAAI7E,IAAI,EAAE;UACTkF,QAAQ,CAACL,GAAG,CAAC;QACd,CAAC,MAAM;UACNK,QAAQ,CAAC,CAAC;QACX;MACD,CAAC;MACD,MAAM0C,kBAAkB,GAAG/C,GAAG,IAAI;QACjCA,GAAG,CAACU,MAAM,GAAGrB,MAAM;QACnB,IAAI,CAACvC,QAAQ,CAACqC,IAAI,CAACa,GAAG,CAAC;QACvBK,QAAQ,CAAC,CAAC;MACX,CAAC;MAED,MAAMxE,SAAS,GAAG,IAAI,CAACA,SAAS;MAChCA,SAAS,CAACmH,OAAO,CAAC,MAAM;QACvB,MAAMjB,OAAO,GAAGhN,IAAI,CAACgN,OAAO;QAC5BA,OAAO,CAACkB,MAAM,CACb;UACCC,WAAW,EAAE;YACZ1D,MAAM,EAAEH,MAAM,CAAC8D,gBAAgB,IAAI9D,MAAM,CAAC8D,gBAAgB,CAAC,CAAC;YAC5DxN,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC3B;UACzB,CAAC;UACD8M,cAAc,EAAEzB,MAAM,CAACyB,cAAc;UACrCsC,OAAO,EAAE/D,MAAM,CAAC+D,OAAO;UACvB5O,YAAY,EAAEA;QACf,CAAC,EACD,CAACwL,GAAG,EAAEqD,eAAe,KAAK;UACzB,IAAIC,YAAY;UAEhB,MAAMC,UAAU,GAAGA,CAAA,KAAM;YACxB,OAAO/O,YAAY,CAACgP,KAAK,CAACC,CAAC,IAAIA,CAAC,CAAChD,QAAQ,CAAC;UAC3C,CAAC;UAED,MAAMiD,yBAAyB,GAAG1D,GAAG,IAAI;YACxC,IAAIuD,UAAU,CAAC,CAAC,EAAE;cACjB,OAAOR,kBAAkB,CAAC/C,GAAG,CAAC;YAC/B,CAAC,MAAM;cACN,OAAO8C,gBAAgB,CAAC9C,GAAG,CAAC;YAC7B;UACD,CAAC;UAED,IAAIA,GAAG,EAAE;YACRnE,SAAS,CAAC8H,OAAO,CAAC,CAAC;YACnB,OAAOD,yBAAyB,CAC/B,IAAI7R,mBAAmB,CAACwN,MAAM,EAAEW,GAAG,CACpC,CAAC;UACF;UACA,IAAI,CAACqD,eAAe,EAAE;YACrBxH,SAAS,CAAC8H,OAAO,CAAC,CAAC;YACnB,OAAOpD,OAAO,CAACC,QAAQ,CAACH,QAAQ,CAAC;UAClC;UACA,IAAIuC,cAAc,EAAE;YACnBU,YAAY,GAAGzE,IAAI,CAACC,GAAG,CAAC,CAAC;YACzB8D,cAAc,CAACb,OAAO,GAAGuB,YAAY,GAAGX,KAAK;UAC9C;UAEA,MAAMiB,qBAAqB,GAAGC,MAAM,IAAI;YACvC,KAAK,IAAI/P,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG+P,MAAM,CAACvP,MAAM,EAAER,KAAK,EAAE,EAAE;cACnD,MAAM8N,GAAG,GAAGiC,MAAM,CAAC/P,KAAK,CAAC;cACzB8N,GAAG,CAACvC,MAAM,GAAGgE,eAAe;cAC5BA,eAAe,CAACS,SAAS,CAACzE,MAAM,EAAEuC,GAAG,CAAC;YACvC;UACD,CAAC;UAED,MAAMmC,eAAe,GAAG,IAAI,CAAC3E,SAAS,CACrCiE,eAAe,EACf/D,UACD,CAAC;UACD+D,eAAe,GAAGU,eAAe,CAAC1E,MAAM;UACxCuE,qBAAqB,CAACpP,YAAY,CAAC;UAEnC,MAAMwP,UAAU,GAAGA,CAAA,KAAM;YACxB,IAAItB,SAAS,IAAIqB,eAAe,CAACvP,YAAY,EAAE;cAC9C,IAAI,CAACkN,yBAAyB,CAAC2B,eAAe,EAAEhD,QAAQ,CAAC;YAC1D,CAAC,MAAM;cACN,OAAOA,QAAQ,CAAC,CAAC;YAClB;UACD,CAAC;UAED,IAAI0D,eAAe,CAACvE,MAAM,EAAE;YAC3B,IAAIoD,cAAc,EAAE;cACnBS,eAAe,CAACjI,OAAO,GAAGwH,cAAc;YACzC;YAEAS,eAAe,CAAC7D,MAAM,GAAGH,MAAM;UAChC,CAAC,MAAM;YACN,IAAI,IAAI,CAACjE,OAAO,EAAE;cACjB,IAAIiE,MAAM,CAACjE,OAAO,EAAE;gBACnB,MAAMwD,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG6D,KAAK;gBAC/B,IACC,CAACtD,MAAM,CAACjE,OAAO,CAAC5G,YAAY,IAC5BoK,IAAI,GAAGS,MAAM,CAACjE,OAAO,CAAC5G,YAAY,EACjC;kBACD6K,MAAM,CAACjE,OAAO,CAAC5G,YAAY,GAAGoK,IAAI;gBACnC;cACD;YACD;UACD;UAEA,IAAImF,eAAe,CAACtE,KAAK,EAAE;YAC1B,IAAI,CAAC5J,WAAW,CACfwN,eAAe,EACfE,UAAU,CAAC,CAAC,EACZlE,MAAM,EACN7K,YAAY,EACZwL,GAAG,IAAI;cACN,IAAIA,GAAG,EAAE;gBACRnE,SAAS,CAAC8H,OAAO,CAAC,CAAC;gBACnB,OAAOD,yBAAyB,CAAC1D,GAAG,CAAC;cACtC;cAEA,IAAI4C,cAAc,EAAE;gBACnB,MAAMqB,aAAa,GAAGpF,IAAI,CAACC,GAAG,CAAC,CAAC;gBAChC8D,cAAc,CAACsB,QAAQ,GAAGD,aAAa,GAAGX,YAAY;cACvD;cAEAzH,SAAS,CAAC8H,OAAO,CAAC,CAAC;cACnBK,UAAU,CAAC,CAAC;YACb,CACD,CAAC;UACF,CAAC,MAAM;YACNnI,SAAS,CAAC8H,OAAO,CAAC,CAAC;YACnB,IAAI,CAACvD,uBAAuB,CAACiD,eAAe,EAAEW,UAAU,CAAC;UAC1D;QACD,CACD,CAAC;MACF,CAAC,CAAC;IACH,CAAC,EACDhE,GAAG,IAAI;MACN;MACA;MACA;;MAEA,IAAIA,GAAG,EAAE;QACR;QACAA,GAAG,CAACxB,KAAK,GAAGwB,GAAG,CAACxB,KAAK;QACrB,OAAO6B,QAAQ,CAACL,GAAG,CAAC;MACrB;MAEA,OAAOO,OAAO,CAACC,QAAQ,CAACH,QAAQ,CAAC;IAClC,CACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC8D,eAAeA,CAACf,OAAO,EAAEgB,UAAU,EAAEC,QAAQ,EAAEhE,QAAQ,EAAE;IACxD,MAAMsC,KAAK,GAAG,IAAI,CAACvH,OAAO,IAAIyD,IAAI,CAACC,GAAG,CAAC,CAAC;IACxC,MAAM8D,cAAc,GAAG,IAAI,CAACxH,OAAO,IAAI,CAAC,CAAC;IAEzC,MAAM0H,gBAAgB,GAAG,IAAI,CAAC3H,IAAI,GAC/B6E,GAAG,IAAI;MACPK,QAAQ,CAACL,GAAG,CAAC;IACb,CAAC,GACDA,GAAG,IAAI;MACPA,GAAG,CAACxL,YAAY,GAAG,CAAC4P,UAAU,CAAC;MAC/B,IAAI,CAACvH,MAAM,CAACsC,IAAI,CAACa,GAAG,CAAC;MACrBK,QAAQ,CAAC,CAAC;IACV,CAAC;IAEJ,IACC,OAAO+D,UAAU,KAAK,QAAQ,IAC9BA,UAAU,KAAK,IAAI,IACnB,CAACA,UAAU,CAAC1O,WAAW,EACtB;MACD,MAAM,IAAI6I,KAAK,CAAC,6CAA6C,CAAC;IAC/D;IACA,MAAM+F,GAAG,GAAG,6BAA+BF,UAAU,CAAC1O,WAAY;IAClE,MAAM6O,aAAa,GAAG,IAAI,CAACtH,mBAAmB,CAACiC,GAAG,CAACoF,GAAG,CAAC;IACvD,IAAI,CAACC,aAAa,EAAE;MACnB,MAAM,IAAIhG,KAAK,CACd,6DAA6D6F,UAAU,CAAC1O,WAAW,CAAC1B,IAAI,EACzF,CAAC;IACF;IAEA,IAAI,CAAC6H,SAAS,CAACmH,OAAO,CAAC,MAAM;MAC5BuB,aAAa,CAACtB,MAAM,CACnB;QACCC,WAAW,EAAE;UACZ1D,MAAM,EAAE,EAAE;UACV7J,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC3B;QACzB,CAAC;QACDoP,OAAO,EAAEA,OAAO;QAChB5O,YAAY,EAAE,CAAC4P,UAAU;MAC1B,CAAC,EACD,CAACpE,GAAG,EAAEX,MAAM,KAAK;QAChB,IAAIW,GAAG,EAAE;UACR,IAAI,CAACnE,SAAS,CAAC8H,OAAO,CAAC,CAAC;UACxB,OAAOb,gBAAgB,CAAC,IAAIlR,wBAAwB,CAACoO,GAAG,CAAC,CAAC;QAC3D;QAEA,IAAIsD,YAAY;QAEhB,IAAIV,cAAc,EAAE;UACnBU,YAAY,GAAGzE,IAAI,CAACC,GAAG,CAAC,CAAC;UACzB8D,cAAc,CAACb,OAAO,GAAGuB,YAAY,GAAGX,KAAK;QAC9C;QAEA,MAAMoB,eAAe,GAAG,IAAI,CAAC3E,SAAS,CAACC,MAAM,CAAC;QAC9CA,MAAM,GAAG0E,eAAe,CAAC1E,MAAM;QAE/BgF,QAAQ,CAAChF,MAAM,CAAC;QAEhB+E,UAAU,CAAC/E,MAAM,GAAGA,MAAM;QAC1BA,MAAM,CAACyE,SAAS,CAAC,IAAI,EAAEM,UAAU,CAAC;QAElC,MAAMJ,UAAU,GAAGA,CAAA,KAAM;UACxB,IAAID,eAAe,CAACvP,YAAY,EAAE;YACjC,IAAI,CAACkN,yBAAyB,CAACrC,MAAM,EAAEW,GAAG,IAAI;cAC7C,IAAIA,GAAG,EAAE,OAAOK,QAAQ,CAACL,GAAG,CAAC;cAC7BK,QAAQ,CAAC,IAAI,EAAEhB,MAAM,CAAC;YACvB,CAAC,CAAC;UACH,CAAC,MAAM;YACN,OAAOgB,QAAQ,CAAC,IAAI,EAAEhB,MAAM,CAAC;UAC9B;QACD,CAAC;QAED,IAAI0E,eAAe,CAACvE,MAAM,EAAE;UAC3B,IAAIoD,cAAc,EAAE;YACnBvD,MAAM,CAACjE,OAAO,GAAGwH,cAAc;UAChC;QACD;QAEA,IAAImB,eAAe,CAACtE,KAAK,EAAE;UAC1B,IAAI,CAAC5J,WAAW,CAACwJ,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAEW,GAAG,IAAI;YAClD,IAAIA,GAAG,EAAE;cACR,IAAI,CAACnE,SAAS,CAAC8H,OAAO,CAAC,CAAC;cACxB,OAAOb,gBAAgB,CAAC9C,GAAG,CAAC;YAC7B;YAEA,IAAI4C,cAAc,EAAE;cACnB,MAAMqB,aAAa,GAAGpF,IAAI,CAACC,GAAG,CAAC,CAAC;cAChC8D,cAAc,CAACsB,QAAQ,GAAGD,aAAa,GAAGX,YAAY;YACvD;YAEA,IAAI,CAACzH,SAAS,CAAC8H,OAAO,CAAC,CAAC;YACxBK,UAAU,CAAC,CAAC;UACb,CAAC,CAAC;QACH,CAAC,MAAM;UACN,IAAI,CAACnI,SAAS,CAAC8H,OAAO,CAAC,CAAC;UACxB,IAAI,CAACvD,uBAAuB,CAACf,MAAM,EAAE2E,UAAU,CAAC;QACjD;MACD,CACD,CAAC;IACF,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC/N,QAAQA,CAACmN,OAAO,EAAEoB,KAAK,EAAExQ,IAAI,EAAEqM,QAAQ,EAAE;IACxC,IAAI,CAACzK,KAAK,CAACK,QAAQ,CAAC8I,IAAI,CAACyF,KAAK,EAAExQ,IAAI,CAAC;IAErC,MAAMyQ,IAAI,GAAG;MACZzQ,IAAI,EAAEA,IAAI;MACV;MACA0Q,OAAO,EAAE,IAAI;MACbrF,MAAM,EAAE;IACT,CAAC;IAED,IAAImF,KAAK,YAAY1R,gBAAgB,EAAE;MACtC2R,IAAI,CAACC,OAAO,GAAGF,KAAK,CAACE,OAAO;IAC7B;;IAEA;IACA,MAAMC,GAAG,GAAG,IAAI,CAAC3I,oBAAoB,CAAC4I,SAAS,CAACH,IAAI,IAAIA,IAAI,CAACzQ,IAAI,KAAKA,IAAI,CAAC;IAC3E,IAAI2Q,GAAG,IAAI,CAAC,EAAE;MACb;MACA,IAAI,CAAC3I,oBAAoB,CAAC2I,GAAG,CAAC,GAAGF,IAAI;IACtC,CAAC,MAAM;MACN,IAAI,CAACzI,oBAAoB,CAACmD,IAAI,CAACsF,IAAI,CAAC;IACrC;IACA,IAAI,CAACN,eAAe,CACnBf,OAAO,EACPoB,KAAK,EACLnF,MAAM,IAAI;MACT,IAAI,CAACtD,OAAO,CAACoD,IAAI,CAACE,MAAM,CAAC;IAC1B,CAAC,EACD,CAACW,GAAG,EAAEX,MAAM,KAAK;MAChB,IAAIW,GAAG,EAAE;QACR,IAAI,CAACpK,KAAK,CAACM,WAAW,CAAC6I,IAAI,CAACyF,KAAK,EAAExQ,IAAI,EAAEgM,GAAG,CAAC;QAC7C,OAAOK,QAAQ,CAACL,GAAG,CAAC;MACrB;MAEA,IAAIX,MAAM,EAAE;QACXoF,IAAI,CAACpF,MAAM,GAAGA,MAAM;MACrB,CAAC,MAAM;QACN,MAAMsF,GAAG,GAAG,IAAI,CAAC3I,oBAAoB,CAAC6I,OAAO,CAACJ,IAAI,CAAC;QACnD,IAAIE,GAAG,IAAI,CAAC,EAAE;UACb,IAAI,CAAC3I,oBAAoB,CAAC8I,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;QACzC;MACD;MACA,IAAI,CAAC/O,KAAK,CAACO,YAAY,CAAC4I,IAAI,CAACyF,KAAK,EAAExQ,IAAI,EAAEqL,MAAM,CAAC;MACjD,OAAOgB,QAAQ,CAAC,IAAI,EAAEhB,MAAM,CAAC;IAC9B,CACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC0F,QAAQA,CAAC3B,OAAO,EAAEgB,UAAU,EAAE/D,QAAQ,EAAE;IACvC,IAAI,CAAC8D,eAAe,CACnBf,OAAO,EACPgB,UAAU,EACV/E,MAAM,IAAI;MACTA,MAAM,CAAC2F,UAAU,GAAG,IAAI;IACzB,CAAC,EACD3E,QACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;EACCvK,aAAaA,CAACuJ,MAAM,EAAEsB,YAAY,EAAE;IACnC,IAAIL,YAAY,GAAG,IAAI,CAAC5C,kBAAkB,CAACwB,GAAG,CAACG,MAAM,CAAC;IACtD,IAAIiB,YAAY,EAAE;MACjBA,YAAY,CAACnB,IAAI,CAACwB,YAAY,CAAC;MAC/B;IACD;IACA,IAAI,CAACjD,kBAAkB,CAAC7I,GAAG,CAACwK,MAAM,EAAGiB,YAAY,GAAG,CAACK,YAAY,CAAE,CAAC;IAEpE,MAAMN,QAAQ,GAAGL,GAAG,IAAI;MACvB,IAAI,CAACtC,kBAAkB,CAACkD,MAAM,CAACvB,MAAM,CAAC;MACtC,KAAK,MAAMwB,EAAE,IAAIP,YAAY,EAAE;QAC9BO,EAAE,CAACb,GAAG,CAAC;MACR;IACD,CAAC;IAED,IAAI,CAACpK,KAAK,CAACE,aAAa,CAACiJ,IAAI,CAACM,MAAM,CAAC;IACrC,MAAM4F,eAAe,GAAG5F,MAAM,CAAC7K,YAAY,CAACkK,KAAK,CAAC,CAAC;IACnD,MAAMwG,YAAY,GAAG7F,MAAM,CAAClL,SAAS,CAACuK,KAAK,CAAC,CAAC;IAC7C,MAAMyG,SAAS,GAAG9F,MAAM,CAAC+C,MAAM,CAAC1D,KAAK,CAAC,CAAC;IACvCW,MAAM,CAACY,OAAO,CAAC,CAAC;IAChB,IAAI,CAACpK,WAAW,CAACwJ,MAAM,EAAE,KAAK,EAAEA,MAAM,EAAE,IAAI,EAAEW,GAAG,IAAI;MACpD,IAAIA,GAAG,EAAE;QACR,IAAI,CAACpK,KAAK,CAACU,sBAAsB,CAACyI,IAAI,CAACM,MAAM,CAAC;QAC9C,OAAOgB,QAAQ,CAACL,GAAG,CAAC;MACrB;MAEA,IAAI,CAAC0B,yBAAyB,CAACrC,MAAM,EAAEW,GAAG,IAAI;QAC7C,IAAIA,GAAG,EAAE,OAAOK,QAAQ,CAACL,GAAG,CAAC;QAC7B,IAAI,CAACoF,8BAA8B,CAAC/F,MAAM,EAAE;UAC3C7K,YAAY,EAAEyQ,eAAe;UAC7B9Q,SAAS,EAAE+Q,YAAY;UACvB9C,MAAM,EAAE+C;QACT,CAAC,CAAC;QACF,IAAI,CAACvP,KAAK,CAACU,sBAAsB,CAACyI,IAAI,CAACM,MAAM,CAAC;QAC9CgB,QAAQ,CAAC,CAAC;MACX,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EAEAgF,MAAMA,CAAChF,QAAQ,EAAE;IAChB,MAAM9D,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,IAAI,CAAC3G,KAAK,CAACS,aAAa,CAACiP,SAAS,CAAC/I,OAAO,EAAEyD,GAAG,IAAI;MAClD,IAAIA,GAAG,EAAE,OAAOK,QAAQ,CAACL,GAAG,CAAC;MAE7B,KAAK,IAAIlM,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGyI,OAAO,CAACjI,MAAM,EAAER,KAAK,EAAE,EAAE;QACpD,MAAMuL,MAAM,GAAG9C,OAAO,CAACzI,KAAK,CAAC;QAC7B,IAAI,CAACyR,iCAAiC,CAAClG,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;MACzD;MAEAgB,QAAQ,CAAC,CAAC;IACX,CAAC,CAAC;EACH;EAEA9J,MAAMA,CAAA,EAAG;IACR,IAAI,CAACX,KAAK,CAACW,MAAM,CAACwI,IAAI,CAAC,CAAC;IACxB,IAAI,CAAC5C,MAAM,CAAC7H,MAAM,GAAG,CAAC;IACtB,IAAI,CAAC8H,WAAW,CAAC9H,MAAM,GAAG,CAAC;IAC3B,IAAI,CAACgI,WAAW,CAACkJ,KAAK,CAAC,CAAC;IACxB,IAAI,CAACnJ,gBAAgB,CAACmJ,KAAK,CAAC,CAAC;IAC7B,IAAI,CAACnM,qBAAqB,CAAC/E,MAAM,GAAG,CAAC;IACrC,IAAI,CAACqI,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACC,UAAU,CAAC4I,KAAK,CAAC,CAAC;IACvB,KAAK,MAAMnG,MAAM,IAAI,IAAI,CAAC9C,OAAO,EAAE;MAClC8C,MAAM,CAAC9I,MAAM,CAAC,CAAC;IAChB;EACD;;EAEA;AACD;AACA;AACA;EACCC,IAAIA,CAAC6J,QAAQ,EAAE;IACd,IAAI,CAACzK,KAAK,CAACY,IAAI,CAACuI,IAAI,CAAC,CAAC;IAEtB,OACC,IAAI,CAACnJ,KAAK,CAACe,yBAAyB,CAACoI,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,IACvD,IAAI,CAAC3G,KAAK,CAACgB,oBAAoB,CAACmI,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,IAClD,IAAI,CAAC3G,KAAK,CAACiB,4BAA4B,CAACkI,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,EACzD;MACD;IAAA;IAED,IAAI,CAAC3G,KAAK,CAACkB,yBAAyB,CAACiI,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;IAEvD,IAAI,CAAC3G,KAAK,CAACa,YAAY,CAACsI,IAAI,CAAC,CAAC;IAC9B,KAAK,MAAM0G,kBAAkB,IAAI,IAAI,CAACzJ,oBAAoB,EAAE;MAC3D,MAAMqD,MAAM,GAAGoG,kBAAkB,CAACpG,MAAM;MACxC,MAAMrL,IAAI,GAAGyR,kBAAkB,CAACzR,IAAI;MACpC,MAAM0R,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC3R,IAAI,CAAC;MACjC,MAAM4R,UAAU,GAAG,IAAI1T,UAAU,CAAC8B,IAAI,CAAC;MACvC4R,UAAU,CAACC,eAAe,CAACH,KAAK,CAAC;MACjCE,UAAU,CAACE,SAAS,CAAC,IAAI,EAAE9R,IAAI,EAAEyR,kBAAkB,CAACf,OAAO,CAAC;MAC5D,IAAI,CAACrI,gBAAgB,CAACxH,GAAG,CAACb,IAAI,EAAE4R,UAAU,CAAC;MAC3C,IAAI,CAAC3J,WAAW,CAACpH,GAAG,CAACb,IAAI,EAAE4R,UAAU,CAAC;MACtC,IAAI,CAACxJ,WAAW,CAAC+C,IAAI,CAACyG,UAAU,CAAC;MAEjC/S,YAAY,CAACkT,yBAAyB,CAACH,UAAU,EAAEF,KAAK,CAAC;MACzD7S,YAAY,CAACmT,qBAAqB,CAACN,KAAK,EAAErG,MAAM,CAAC;MAEjDqG,KAAK,CAACO,WAAW,GAAG5G,MAAM;MAC1BqG,KAAK,CAAC1R,IAAI,GAAGA,IAAI;MAEjB,IAAI,CAACkS,WAAW,CAAC7G,MAAM,CAAC;IACzB;IACAlM,eAAe,CACd,IAAI,EACJ,2BAA6B,IAAI,CAACiJ,WAAW,CAACsC,KAAK,CAAC,CACrD,CAAC;IACD,IAAI,CAACyH,WAAW,CAAC,IAAI,CAAC5J,OAAO,CAAC;IAC9B,IAAI,CAAC3G,KAAK,CAACc,WAAW,CAACqI,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;IAExC,IAAI,CAACvG,KAAK,CAACmB,QAAQ,CAACgI,IAAI,CAAC,CAAC;IAE1B,OACC,IAAI,CAACnJ,KAAK,CAACoB,oBAAoB,CAAC+H,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,IAClD,IAAI,CAAC3G,KAAK,CAACqB,eAAe,CAAC8H,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,IAC7C,IAAI,CAAC3G,KAAK,CAACsB,uBAAuB,CAAC6H,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC,EACpD;MACD;IAAA;IAED,IAAI,CAAC3G,KAAK,CAACuB,oBAAoB,CAAC4H,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;IAElD,OACC,IAAI,CAAC3G,KAAK,CAACwB,mBAAmB,CAAC2H,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC,IAClE,IAAI,CAACxG,KAAK,CAACyB,cAAc,CAAC0H,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC,IAC7D,IAAI,CAACxG,KAAK,CAAC0B,sBAAsB,CAACyH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC,EACpE;MACD;IAAA;IAED,IAAI,CAACxG,KAAK,CAAC2B,mBAAmB,CAACwH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC;IAElE,IAAI,CAACxG,KAAK,CAAC4B,YAAY,CAAC8N,SAAS,CAAC,IAAI,CAACnJ,MAAM,EAAE,IAAI,CAACI,OAAO,EAAEyD,GAAG,IAAI;MACnE,IAAIA,GAAG,EAAE;QACR,OAAOK,QAAQ,CAACL,GAAG,CAAC;MACrB;MAEA,IAAI,CAACpK,KAAK,CAAC6B,iBAAiB,CAACsH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACI,OAAO,CAAC;MAE5D,OACC,IAAI,CAAC3G,KAAK,CAAC8B,yBAAyB,CAACqH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACI,OAAO,CAAC,IACpE,IAAI,CAAC3G,KAAK,CAAC+B,oBAAoB,CAACoH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACI,OAAO,CAAC,IAC/D,IAAI,CAAC3G,KAAK,CAACgC,4BAA4B,CAACmH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACI,OAAO,CAAC,EACtE;QACD;MAAA;MAED,IAAI,CAAC3G,KAAK,CAACiC,yBAAyB,CAACkH,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACI,OAAO,CAAC;MAEpE,MAAMzE,YAAY,GAAG,IAAI,CAAClC,KAAK,CAACkC,YAAY,CAACiH,IAAI,CAAC,CAAC,KAAK,KAAK;MAE7D,IAAI,CAACnJ,KAAK,CAACmC,aAAa,CAACgH,IAAI,CAAC,IAAI,CAACxC,OAAO,EAAE,IAAI,CAACG,OAAO,CAAC;MACzD,IAAI,CAAC9G,KAAK,CAACoC,mBAAmB,CAAC+G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MACjD,IAAI,CAAC3G,KAAK,CAACqC,2BAA2B,CAAC8G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MACzD,IAAI,CAAC3G,KAAK,CAACsC,eAAe,CAAC6G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MAC7C,IAAI,CAAC3G,KAAK,CAACuC,SAAS,CAAC4G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MACvC,IAAI,CAAC6J,cAAc,CAAC,CAAC;MACrB,IAAI,CAACxQ,KAAK,CAACwC,iBAAiB,CAAC2G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MAC/C,IAAI,CAAC3G,KAAK,CAACyC,sBAAsB,CAAC0G,IAAI,CAAC,IAAI,CAACxC,OAAO,CAAC;MAEpD,IAAI,CAAC8J,sBAAsB,CAAC,CAAC;MAE7B,IAAI,CAACzQ,KAAK,CAAC0C,YAAY,CAACyG,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACO,OAAO,CAAC;MACvD,IAAI,CAAC9G,KAAK,CAAC2C,kBAAkB,CAACwG,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;MAC/C,IAAI,CAACvG,KAAK,CAAC4C,cAAc,CAACuG,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;MAC3C,IAAI,CAACmK,aAAa,CAAC,CAAC;MACpB,IAAI,CAAC1Q,KAAK,CAAC6C,gBAAgB,CAACsG,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;MAC7C,IAAI,CAACvG,KAAK,CAAC8C,qBAAqB,CAACqG,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;MAElD,IAAI,CAACoK,qBAAqB,CAAC,CAAC;MAE5B,IAAIzO,YAAY,EAAE;QACjB,IAAI,CAAClC,KAAK,CAAC+C,aAAa,CAACoG,IAAI,CAAC,IAAI,CAACxC,OAAO,EAAE,IAAI,CAACG,OAAO,CAAC;QACzD,IAAI,CAAC9G,KAAK,CAACgD,YAAY,CAACmG,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAACO,OAAO,CAAC;MACxD;MAEA,IAAI,CAAC9G,KAAK,CAACiD,UAAU,CAACkG,IAAI,CAAC,CAAC;MAC5B,IAAI,CAACpM,UAAU,CAAC,CAAC;MACjB,IAAI,CAACiD,KAAK,CAACmD,SAAS,CAACgG,IAAI,CAAC,CAAC;MAE3B,IAAIjH,YAAY,EAAE;QACjB,IAAI,CAAClC,KAAK,CAACoD,UAAU,CAAC+F,IAAI,CAAC,IAAI,CAACrC,OAAO,CAAC;MACzC;MAEA,IAAI,CAAC9G,KAAK,CAACsD,kBAAkB,CAAC6F,IAAI,CAAC,CAAC;MACpC,IAAI,CAACyH,kBAAkB,CAAC,CAAC;MACzB,IAAI,IAAI,CAAC5Q,KAAK,CAACuD,yBAAyB,CAAC4F,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAC1D,IAAI,CAACnJ,KAAK,CAACwD,iBAAiB,CAAC2F,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC0H,iBAAiB,CAAC,CAAC;MACzB;MACA,IAAI,CAAC7Q,KAAK,CAACyD,qBAAqB,CAAC0F,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;MAClD,IAAI,CAACuK,qBAAqB,CAAC,CAAC;MAC5B,IAAI5O,YAAY,EAAE;QACjB,IAAI,CAAClC,KAAK,CAACqD,MAAM,CAAC8F,IAAI,CAAC,IAAI,EAAE,IAAI,CAACrC,OAAO,CAAC;MAC3C;MAEA,IAAI,CAAC9G,KAAK,CAAC0D,gBAAgB,CAACgM,SAAS,CAACtF,GAAG,IAAI;QAC5C,IAAIA,GAAG,EAAE;UACR,OAAOK,QAAQ,CAACL,GAAG,CAAC;QACrB;QACA,IAAI,CAACpK,KAAK,CAAC2D,mBAAmB,CAAC+L,SAAS,CAAC,IAAI,CAACnJ,MAAM,EAAE6D,GAAG,IAAI;UAC5D,IAAIA,GAAG,EAAE;YACR,OAAOK,QAAQ,CAACL,GAAG,CAAC;UACrB;UACA,IAAI,CAACpK,KAAK,CAAC4D,wBAAwB,CAACuF,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAAC;UACrD,IAAI,CAACvG,KAAK,CAAC6D,cAAc,CAAC6L,SAAS,CAAC,IAAI,CAAC3I,MAAM,EAAEqD,GAAG,IAAI;YACvD,IAAIA,GAAG,EAAE;cACR,OAAOK,QAAQ,CAACL,GAAG,CAAC;YACrB;YACA,IAAI,CAACpK,KAAK,CAAC8D,mBAAmB,CAACqF,IAAI,CAAC,IAAI,CAACpC,MAAM,CAAC;YAChD,IAAI,IAAI,CAAC/G,KAAK,CAAC+D,kBAAkB,CAACoF,IAAI,CAAC,CAAC,EAAE;cACzC,IAAI,CAACxI,MAAM,CAAC,CAAC;cACb,OAAO,IAAI,CAACC,IAAI,CAAC6J,QAAQ,CAAC;YAC3B;YACA,OAAO,IAAI,CAACzK,KAAK,CAACgE,SAAS,CAAC0L,SAAS,CAACjF,QAAQ,CAAC;UAChD,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;EACC8F,WAAWA,CAAC5J,OAAO,EAAE;IACpB;IACA;IACA;IACAA,OAAO,CAACgF,IAAI,CAAC1N,mBAAmB,CAAC;EAClC;;EAEA;AACD;AACA;AACA;AACA;EACC0R,iCAAiCA,CAAClG,MAAM,EAAE+C,MAAM,EAAE;IACjD,KAAK,IAAIuE,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGvE,MAAM,CAAC9N,MAAM,EAAEqS,UAAU,EAAE,EAAE;MAClE,MAAMxE,KAAK,GAAGC,MAAM,CAACuE,UAAU,CAAC;MAChC,MAAMnS,YAAY,GAAG2N,KAAK,CAAC3N,YAAY;MAEvC,KAAK,IAAIoS,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGpS,YAAY,CAACF,MAAM,EAAEsS,QAAQ,EAAE,EAAE;QAClE,MAAMnD,CAAC,GAAGjP,YAAY,CAACoS,QAAQ,CAAC;QAEhC,MAAM9J,QAAQ,GAAG2G,CAAC,CAACoD,WAAW,CAAC,CAAC;QAChC,IAAI/J,QAAQ,EAAE;UACb,KAAK,IAAIgK,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGhK,QAAQ,CAACxI,MAAM,EAAEwS,QAAQ,EAAE,EAAE;YAC9D,MAAMC,CAAC,GAAGjK,QAAQ,CAACgK,QAAQ,CAAC;YAE5B,MAAME,OAAO,GAAG,IAAIlV,uBAAuB,CAACuN,MAAM,EAAE0H,CAAC,EAAEtD,CAAC,CAAChC,GAAG,CAAC;YAC7D,IAAI,CAAC3E,QAAQ,CAACqC,IAAI,CAAC6H,OAAO,CAAC;UAC5B;QACD;QACA,MAAMnK,MAAM,GAAG4G,CAAC,CAACwD,SAAS,CAAC,CAAC;QAC5B,IAAIpK,MAAM,EAAE;UACX,KAAK,IAAIqK,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGrK,MAAM,CAACvI,MAAM,EAAE4S,QAAQ,EAAE,EAAE;YAC5D,MAAM7E,CAAC,GAAGxF,MAAM,CAACqK,QAAQ,CAAC;YAE1B,MAAM7I,KAAK,GAAG,IAAItM,qBAAqB,CAACsN,MAAM,EAAEgD,CAAC,EAAEoB,CAAC,CAAChC,GAAG,CAAC;YACzD,IAAI,CAAC5E,MAAM,CAACsC,IAAI,CAACd,KAAK,CAAC;UACxB;QACD;MACD;MAEA,IAAI,CAACkH,iCAAiC,CAAClG,MAAM,EAAE8C,KAAK,CAACC,MAAM,CAAC;IAC7D;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC+E,eAAeA,CAACC,YAAY,EAAE/H,MAAM,EAAEoC,GAAG,EAAEiD,OAAO,EAAE;IACnD,IAAI,OAAO0C,YAAY,KAAK,QAAQ,EAAE;MACrCA,YAAY,GAAG;QAAEpT,IAAI,EAAEoT;MAAa,CAAC;IACtC;IACA,MAAMpT,IAAI,GAAGoT,YAAY,CAACpT,IAAI;IAC9B,IAAIA,IAAI,EAAE;MACT,MAAMqT,UAAU,GAAG,IAAI,CAAChL,gBAAgB,CAAC6C,GAAG,CAAClL,IAAI,CAAC;MAClD,IAAIqT,UAAU,KAAKxM,SAAS,EAAE;QAC7BwM,UAAU,CAACC,UAAU,CAACF,YAAY,CAAC;QACnC,IAAI/H,MAAM,EAAE;UACXgI,UAAU,CAACvB,SAAS,CAACzG,MAAM,EAAEoC,GAAG,EAAEiD,OAAO,CAAC;QAC3C;QACA,OAAO2C,UAAU;MAClB;IACD;IACA,MAAMA,UAAU,GAAG,IAAIrV,UAAU,CAACoV,YAAY,CAAC;IAC/C,IAAI/H,MAAM,EAAEgI,UAAU,CAACvB,SAAS,CAACzG,MAAM,EAAEoC,GAAG,EAAEiD,OAAO,CAAC;IACtD,MAAMgB,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC3R,IAAI,CAAC;IAEjCnB,YAAY,CAACkT,yBAAyB,CAACsB,UAAU,EAAE3B,KAAK,CAAC;IAEzD,IAAI,CAACtJ,WAAW,CAAC+C,IAAI,CAACkI,UAAU,CAAC;IACjC,IAAIrT,IAAI,EAAE;MACT,IAAI,CAACqI,gBAAgB,CAACxH,GAAG,CAACb,IAAI,EAAEqT,UAAU,CAAC;IAC5C;IACA,OAAOA,UAAU;EAClB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC1B,QAAQA,CAAC3R,IAAI,EAAE;IACd,IAAIA,IAAI,EAAE;MACT,MAAM0R,KAAK,GAAG,IAAI,CAACpJ,WAAW,CAAC4C,GAAG,CAAClL,IAAI,CAAC;MACxC,IAAI0R,KAAK,KAAK7K,SAAS,EAAE;QACxB,OAAO6K,KAAK;MACb;IACD;IACA,MAAMA,KAAK,GAAG,IAAIzT,KAAK,CAAC+B,IAAI,CAAC;IAC7B,IAAI,CAACmI,MAAM,CAACgD,IAAI,CAACuG,KAAK,CAAC;IACvB,IAAI1R,IAAI,EAAE;MACT,IAAI,CAACsI,WAAW,CAACzH,GAAG,CAACb,IAAI,EAAE0R,KAAK,CAAC;IAClC;IACA,OAAOA,KAAK;EACb;;EAEA;AACD;AACA;AACA;EACCQ,WAAWA,CAAC7G,MAAM,EAAE;IACnB,MAAMkI,KAAK,GAAG,IAAI3J,GAAG,CAAC,CAACyB,MAAM,CAAC,CAAC;IAC/B,IAAImI,KAAK;IAETnI,MAAM,CAACmI,KAAK,GAAG,CAAC;;IAEhB;AACF;AACA;AACA;IACE,MAAMC,UAAU,GAAGpI,MAAM,IAAI;MAC5B,MAAMoE,CAAC,GAAGpE,MAAM,CAACmI,KAAK;MACtB,IAAI,OAAO/D,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI+D,KAAK,EAAE;MACzCD,KAAK,CAACvS,GAAG,CAACqK,MAAM,CAAC;MACjBA,MAAM,CAACmI,KAAK,GAAGA,KAAK;IACrB,CAAC;;IAED;AACF;AACA;AACA;IACE,MAAME,uBAAuB,GAAGtD,UAAU,IAAI;MAC7C,IAAIA,UAAU,CAAC/E,MAAM,EAAE;QACtBoI,UAAU,CAACrD,UAAU,CAAC/E,MAAM,CAAC;MAC9B;IACD,CAAC;;IAED;AACF;AACA;AACA;IACE,MAAMsI,4BAA4B,GAAGxF,KAAK,IAAI;MAC7C,IAAIA,KAAK,CAAChO,SAAS,EAAE;QACpBD,sBAAsB,CAACiO,KAAK,CAAChO,SAAS,EAAEuT,uBAAuB,CAAC;MACjE;MAEA,IAAIvF,KAAK,CAAC3N,YAAY,EAAE;QACvBE,wBAAwB,CAACyN,KAAK,CAAC3N,YAAY,EAAEkT,uBAAuB,CAAC;MACtE;MAEA,IAAIvF,KAAK,CAACC,MAAM,EAAE;QACjB1N,wBAAwB,CAACyN,KAAK,CAACC,MAAM,EAAEuF,4BAA4B,CAAC;MACrE;IACD,CAAC;IAED,KAAKtI,MAAM,IAAIkI,KAAK,EAAE;MACrBA,KAAK,CAAC3G,MAAM,CAACvB,MAAM,CAAC;MACpBmI,KAAK,GAAGnI,MAAM,CAACmI,KAAK;MAEpBA,KAAK,EAAE;MACPG,4BAA4B,CAACtI,MAAM,CAAC;IACrC;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCuI,sBAAsBA,CAACvI,MAAM,EAAE+E,UAAU,EAAE;IAC1C;IACA,IAAI,OAAOA,UAAU,CAACyD,YAAY,KAAK,UAAU,EAAE,OAAO,IAAI;IAC9D,MAAMC,GAAG,GAAG1D,UAAU,CAACyD,YAAY,CAAC,CAAC;IACrC,IAAI,CAACC,GAAG,EAAE,OAAO,IAAI;IACrB,OAAO,IAAI,CAAClS,KAAK,CAACQ,mBAAmB,CAAC2I,IAAI,CAAC+I,GAAG,EAAE1D,UAAU,EAAE/E,MAAM,CAAC;EACpE;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC+F,8BAA8BA,CAAC/F,MAAM,EAAE8C,KAAK,EAAE;IAC7C,MAAM4F,kBAAkB,GAAGtE,CAAC,IAAI;MAC/B,IAAI,CAACA,CAAC,CAACpE,MAAM,EAAE;QACd;MACD;MACA,IAAIoE,CAAC,CAACpE,MAAM,CAAC2I,YAAY,CAAC3I,MAAM,EAAEoE,CAAC,CAAC,EAAE;QACrC,KAAK,MAAMiC,KAAK,IAAIjC,CAAC,CAACpE,MAAM,CAAC4I,cAAc,EAAE;UAC5C,IAAI,CAACC,6BAA6B,CAACzE,CAAC,CAACpE,MAAM,EAAEqG,KAAK,CAAC;QACpD;MACD;IACD,CAAC;IAED,IAAIvD,KAAK,CAACC,MAAM,EAAE;MACjB1N,wBAAwB,CAACyN,KAAK,CAACC,MAAM,EAAED,KAAK,IAC3C,IAAI,CAACiD,8BAA8B,CAAC/F,MAAM,EAAE8C,KAAK,CAClD,CAAC;IACF;IAEA,IAAIA,KAAK,CAAC3N,YAAY,EAAE;MACvBE,wBAAwB,CAACyN,KAAK,CAAC3N,YAAY,EAAEuT,kBAAkB,CAAC;IACjE;IAEA,IAAI5F,KAAK,CAAChO,SAAS,EAAE;MACpBD,sBAAsB,CAACiO,KAAK,CAAChO,SAAS,EAAE4T,kBAAkB,CAAC;IAC5D;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCG,6BAA6BA,CAAC7I,MAAM,EAAEqG,KAAK,EAAE;IAC5C,IAAI,CAACrG,MAAM,CAAC8I,UAAU,CAAC,CAAC,EAAE;MACzB,IAAI,CAAC/C,8BAA8B,CAAC/F,MAAM,EAAEA,MAAM,CAAC;IACpD;IACA,IAAI,CAACA,MAAM,CAAC+I,iBAAiB,CAAC1C,KAAK,CAAC,EAAE;MACrC,IAAIrG,MAAM,CAACgJ,WAAW,CAAC3C,KAAK,CAAC,EAAE;QAC9B,IAAI,CAAC4C,2BAA2B,CAACjJ,MAAM,EAAEqG,KAAK,CAAC;MAChD;IACD;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC4C,2BAA2BA,CAACnG,KAAK,EAAEuD,KAAK,EAAE;IACzC,MAAMqC,kBAAkB,GAAGtE,CAAC,IAAI;MAC/B,IAAI,CAACA,CAAC,CAACpE,MAAM,EAAE;QACd;MACD;MACA,IAAI,CAAC6I,6BAA6B,CAACzE,CAAC,CAACpE,MAAM,EAAEqG,KAAK,CAAC;IACpD,CAAC;IAED,MAAMtD,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,KAAK,IAAIuE,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGvE,MAAM,CAAC9N,MAAM,EAAEqS,UAAU,EAAE,EAAE;MAClE,MAAM4B,UAAU,GAAGnG,MAAM,CAACuE,UAAU,CAAC;MACrC;MACA,MAAMxK,MAAM,GAAGoM,UAAU,CAAClB,UAAU,CAAClL,MAAM;MAC3C;MACA,KAAK,IAAIqM,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;QAClE,MAAMC,aAAa,GAAGtM,MAAM,CAACqM,UAAU,CAAC;QACxCD,UAAU,CAAClB,UAAU,CAACgB,WAAW,CAACI,aAAa,CAAC;QAChDF,UAAU,CAAClB,UAAU,CAACqB,YAAY,CAACD,aAAa,CAAC;QACjD;QACA,IAAI,CAACH,2BAA2B,CAACnG,KAAK,EAAEsG,aAAa,CAAC;MACvD;IACD;IAEA,IAAItG,KAAK,CAAC3N,YAAY,EAAE;MACvBE,wBAAwB,CAACyN,KAAK,CAAC3N,YAAY,EAAEuT,kBAAkB,CAAC;IACjE;IAEA,IAAI5F,KAAK,CAAChO,SAAS,EAAE;MACpBD,sBAAsB,CAACiO,KAAK,CAAChO,SAAS,EAAE4T,kBAAkB,CAAC;IAC5D;EACD;EAEA3B,cAAcA,CAAA,EAAG;IAChB,MAAMuC,SAAS,GAAG,EAAE;IACpB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,MAAMC,OAAO,GAAG,IAAIjL,GAAG,CAAC,CAAC;IACzB,IAAI,IAAI,CAACP,aAAa,EAAE;MACvB,KAAK,MAAM7J,EAAE,IAAI,IAAI,CAAC6J,aAAa,EAAE;QACpCwL,OAAO,CAAC7T,GAAG,CAACxB,EAAE,CAAC;MAChB;IACD;IAEA,MAAMsV,QAAQ,GAAG,IAAI,CAACvM,OAAO;IAC7B,KAAK,IAAIwM,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAGD,QAAQ,CAACxU,MAAM,EAAEyU,YAAY,EAAE,EAAE;MAC1E,MAAMC,OAAO,GAAGF,QAAQ,CAACC,YAAY,CAAC;MACtC,IAAIC,OAAO,CAACxV,EAAE,KAAK,IAAI,EAAE;QACxBqV,OAAO,CAAC7T,GAAG,CAACgU,OAAO,CAACxV,EAAE,CAAC;MACxB;IACD;IAEA,IAAIqV,OAAO,CAACI,IAAI,GAAG,CAAC,EAAE;MACrB,IAAIC,SAAS,GAAG,CAAC,CAAC;MAClB,KAAK,MAAMC,SAAS,IAAIN,OAAO,EAAE;QAChC,IAAI,OAAOM,SAAS,KAAK,QAAQ,EAAE;UAClC;QACD;QAEAD,SAAS,GAAGE,IAAI,CAACC,GAAG,CAACH,SAAS,EAAEC,SAAS,CAAC;MAC3C;MAEA,IAAIG,iBAAiB,GAAIV,gBAAgB,GAAGM,SAAS,GAAG,CAAE;MAE1D,OAAOI,iBAAiB,EAAE,EAAE;QAC3B,IAAI,CAACT,OAAO,CAACU,GAAG,CAACD,iBAAiB,CAAC,EAAE;UACpCX,SAAS,CAACxJ,IAAI,CAACmK,iBAAiB,CAAC;QAClC;MACD;IACD;IAEA,MAAME,QAAQ,GAAG,IAAI,CAACjN,OAAO;IAC7B,KAAK,IAAIkN,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAGD,QAAQ,CAAClV,MAAM,EAAEmV,YAAY,EAAE,EAAE;MAC1E,MAAMC,OAAO,GAAGF,QAAQ,CAACC,YAAY,CAAC;MACtC,IAAIC,OAAO,CAAClW,EAAE,KAAK,IAAI,EAAE;QACxB,IAAImV,SAAS,CAACrU,MAAM,GAAG,CAAC,EAAE;UACzBoV,OAAO,CAAClW,EAAE,GAAGmV,SAAS,CAACgB,GAAG,CAAC,CAAC;QAC7B,CAAC,MAAM;UACND,OAAO,CAAClW,EAAE,GAAGoV,gBAAgB,EAAE;QAChC;MACD;IACD;EACD;EAEAtC,aAAaA,CAAA,EAAG;IACf;IACA,MAAMuC,OAAO,GAAG,IAAIjL,GAAG,CAAC,CAAC;;IAEzB;IACA,IAAI,IAAI,CAACR,YAAY,EAAE;MACtB,KAAK,MAAM5J,EAAE,IAAI,IAAI,CAAC4J,YAAY,EAAE;QACnC,IAAI,OAAO5J,EAAE,KAAK,QAAQ,EAAE;UAC3B;QACD;QAEAqV,OAAO,CAAC7T,GAAG,CAACxB,EAAE,CAAC;MAChB;IACD;;IAEA;IACA,MAAM2I,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,KAAK,IAAIqM,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;MAClE,MAAM9C,KAAK,GAAGvJ,MAAM,CAACqM,UAAU,CAAC;MAChC,MAAMoB,WAAW,GAAGlE,KAAK,CAAClS,EAAE;MAE5B,IAAI,OAAOoW,WAAW,KAAK,QAAQ,EAAE;QACpC;MACD;MAEAf,OAAO,CAAC7T,GAAG,CAAC4U,WAAW,CAAC;IACzB;;IAEA;IACA,IAAIC,eAAe,GAAG,CAAC,CAAC;IACxB,KAAK,MAAMrW,EAAE,IAAIqV,OAAO,EAAE;MACzBgB,eAAe,GAAGT,IAAI,CAACC,GAAG,CAACQ,eAAe,EAAErW,EAAE,CAAC;IAChD;IACAqW,eAAe,EAAE;;IAEjB;IACA;IACA,MAAMlB,SAAS,GAAG,EAAE;IACpB,IAAIkB,eAAe,GAAG,CAAC,EAAE;MACxB,IAAI/V,KAAK,GAAG+V,eAAe;MAC3B,OAAO/V,KAAK,EAAE,EAAE;QACf,IAAI,CAAC+U,OAAO,CAACU,GAAG,CAACzV,KAAK,CAAC,EAAE;UACxB6U,SAAS,CAACxJ,IAAI,CAACrL,KAAK,CAAC;QACtB;MACD;IACD;;IAEA;IACA,KAAK,IAAI0U,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;MAClE,MAAM9C,KAAK,GAAGvJ,MAAM,CAACqM,UAAU,CAAC;MAChC,IAAI9C,KAAK,CAAClS,EAAE,KAAK,IAAI,EAAE;QACtB,IAAImV,SAAS,CAACrU,MAAM,GAAG,CAAC,EAAE;UACzBoR,KAAK,CAAClS,EAAE,GAAGmV,SAAS,CAACgB,GAAG,CAAC,CAAC;QAC3B,CAAC,MAAM;UACNjE,KAAK,CAAClS,EAAE,GAAGqW,eAAe,EAAE;QAC7B;MACD;MACA,IAAI,CAACnE,KAAK,CAACoE,GAAG,EAAE;QACfpE,KAAK,CAACoE,GAAG,GAAG,CAACpE,KAAK,CAAClS,EAAE,CAAC;MACvB;IACD;EACD;EAEA6S,sBAAsBA,CAAA,EAAG;IACxB,IAAI,CAAC9J,OAAO,CAACgF,IAAI,CAAC9N,gBAAgB,CAAC;IAEnC,MAAM8I,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,KAAK,IAAIwN,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGxN,OAAO,CAACjI,MAAM,EAAEyV,WAAW,EAAE,EAAE;MACtExN,OAAO,CAACwN,WAAW,CAAC,CAACC,SAAS,CAAC,KAAK,CAAC;IACtC;IAEA,MAAM7N,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,KAAK,IAAIqM,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;MAClErM,MAAM,CAACqM,UAAU,CAAC,CAACwB,SAAS,CAAC,CAAC;IAC/B;IAEA7N,MAAM,CAACoF,IAAI,CAAC,CAACjO,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC2W,SAAS,CAAC1W,CAAC,CAAC,CAAC;EACtC;EAEAgT,qBAAqBA,CAAA,EAAG;IACvB,KAAK,MAAMc,UAAU,IAAI,IAAI,CAACjL,WAAW,EAAE;MAC1CiL,UAAU,CAAC2C,SAAS,CAAC,CAAC;IACvB;IAEA,IAAI,CAAC7N,MAAM,CAACoF,IAAI,CAAClO,IAAI,CAAC;IAEtB,KACC,IAAI0W,WAAW,GAAG,CAAC,EACnBA,WAAW,GAAG,IAAI,CAACxN,OAAO,CAACjI,MAAM,EACjCyV,WAAW,EAAE,EACZ;MACD,IAAI,CAACxN,OAAO,CAACwN,WAAW,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC;IAC1C;IAEA,MAAM7N,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,KAAK,IAAIqM,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;MAClErM,MAAM,CAACqM,UAAU,CAAC,CAACwB,SAAS,CAAC,CAAC;IAC/B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAME,SAAS,GAAGA,CAAC5W,CAAC,EAAEC,CAAC,KAAK;MAC3B,MAAM4W,EAAE,GAAG,GAAG7W,CAAC,CAAC8W,OAAO,EAAE;MACzB,MAAMC,EAAE,GAAG,GAAG9W,CAAC,CAAC6W,OAAO,EAAE;MACzB,IAAID,EAAE,GAAGE,EAAE,EAAE,OAAO,CAAC,CAAC;MACtB,IAAIA,EAAE,GAAGF,EAAE,EAAE,OAAO,CAAC;MACrB,OAAO,CAAC;IACT,CAAC;IAED,IAAI,CAACtN,MAAM,CAAC0E,IAAI,CAAC2I,SAAS,CAAC;IAC3B,IAAI,CAACpN,QAAQ,CAACyE,IAAI,CAAC2I,SAAS,CAAC;IAC7B,IAAI,CAACnN,QAAQ,CAACwE,IAAI,CAACxN,YAAY,CAAC;EACjC;EAEA2S,qBAAqBA,CAAA,EAAG;IACvB,IAAI,CAAC4D,gBAAgB,GAAG,IAAI1X,WAAW,CAAC,IAAI,CAAC4K,uBAAuB,CAAC;IACrE,IAAI,CAAC+M,mBAAmB,GAAG,IAAI3X,WAAW,CAAC,CAAC;IAC5C,IAAI,CAAC4X,mBAAmB,GAAG,IAAI5X,WAAW,CAAC,CAAC;IAE5C,KACC,IAAI6X,aAAa,GAAG,CAAC,EACrBA,aAAa,GAAG,IAAI,CAAC1N,QAAQ,CAACzI,MAAM,EACpCmW,aAAa,EAAE,EACd;MACD,MAAMC,KAAK,GAAG,IAAI,CAAC3N,QAAQ,CAAC0N,aAAa,CAAC;MAE1C7V,WAAW,CAAC,IAAI,CAAC0V,gBAAgB,EAAEI,KAAK,CAACJ,gBAAgB,CAAC;MAC1D1V,WAAW,CAAC,IAAI,CAAC2V,mBAAmB,EAAEG,KAAK,CAACH,mBAAmB,CAAC;MAChE3V,WAAW,CAAC,IAAI,CAAC4V,mBAAmB,EAAEE,KAAK,CAACF,mBAAmB,CAAC;IACjE;IAEA,KACC,IAAIT,WAAW,GAAG,CAAC,EACnBA,WAAW,GAAG,IAAI,CAACxN,OAAO,CAACjI,MAAM,EACjCyV,WAAW,EAAE,EACZ;MACD,MAAM1K,MAAM,GAAG,IAAI,CAAC9C,OAAO,CAACwN,WAAW,CAAC;MAExC,IAAI1K,MAAM,CAACsL,SAAS,CAACL,gBAAgB,EAAE;QACtC1V,WAAW,CAAC,IAAI,CAAC0V,gBAAgB,EAAEjL,MAAM,CAACsL,SAAS,CAACL,gBAAgB,CAAC;MACtE;MACA,IAAIjL,MAAM,CAACsL,SAAS,CAACJ,mBAAmB,EAAE;QACzC3V,WAAW,CACV,IAAI,CAAC2V,mBAAmB,EACxBlL,MAAM,CAACsL,SAAS,CAACJ,mBAClB,CAAC;MACF;IACD;IACA,KAAK,MAAMlM,KAAK,IAAI,IAAI,CAACxB,MAAM,EAAE;MAChC,IACC,OAAOwB,KAAK,CAACuM,OAAO,KAAK,QAAQ,IACjCvM,KAAK,CAACuM,OAAO,IACbvM,KAAK,CAACuM,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,EAC7B;QACDlW,WAAW,CAAC,IAAI,CAAC4V,mBAAmB,EAAEnM,KAAK,CAACuM,OAAO,CAAC;MACrD;IACD;IACA,IAAI,CAACN,gBAAgB,CAAC/I,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACgJ,mBAAmB,CAAChJ,IAAI,CAAC,CAAC;IAC/B,IAAI,CAACiJ,mBAAmB,CAACjJ,IAAI,CAAC,CAAC;EAChC;EAEA5O,UAAUA,CAAA,EAAG;IACZ,MAAMsI,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAM8P,YAAY,GAAG9P,aAAa,CAAC8P,YAAY;IAC/C,MAAMC,UAAU,GAAG/P,aAAa,CAAC+P,UAAU;IAC3C,MAAMC,gBAAgB,GAAGhQ,aAAa,CAACgQ,gBAAgB;IACvD,MAAMC,IAAI,GAAGvY,UAAU,CAACoY,YAAY,CAAC;IACrC,IAAI9P,aAAa,CAACkQ,QAAQ,EAAE;MAC3BD,IAAI,CAACE,MAAM,CAACnQ,aAAa,CAACkQ,QAAQ,CAAC;IACpC;IACA,IAAI,CAAC7P,YAAY,CAAC+P,UAAU,CAACH,IAAI,CAAC;IAClC,IAAI,CAAC3P,aAAa,CAAC8P,UAAU,CAACH,IAAI,CAAC;IACnC,KAAK,MAAMI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC9P,eAAe,CAAC,CAAC6F,IAAI,CAAC,CAAC,EAAE;MAC3D,IAAI,CAAC7F,eAAe,CAAC4P,GAAG,CAAC,CAACD,UAAU,CAACH,IAAI,CAAC;IAC3C;IACA,KAAK,MAAMR,KAAK,IAAI,IAAI,CAAC3N,QAAQ,EAAE;MAClCmO,IAAI,CAACE,MAAM,CAACV,KAAK,CAACQ,IAAI,CAAC;IACxB;IACA,KAAK,MAAMlE,OAAO,IAAI,IAAI,CAAClK,QAAQ,EAAE;MACpCoO,IAAI,CAACE,MAAM,CAAC,GAAGpE,OAAO,CAACoD,OAAO,EAAE,CAAC;IAClC;IACA,KAAK,MAAM/L,KAAK,IAAI,IAAI,CAACxB,MAAM,EAAE;MAChCqO,IAAI,CAACE,MAAM,CAAC,GAAG/M,KAAK,CAAC+L,OAAO,EAAE,CAAC;IAChC;IACA,MAAM7N,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,KAAK,IAAI+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/E,OAAO,CAACjI,MAAM,EAAEgN,CAAC,EAAE,EAAE;MACxC,MAAMjC,MAAM,GAAG9C,OAAO,CAAC+E,CAAC,CAAC;MACzB,MAAMmK,UAAU,GAAG9Y,UAAU,CAACoY,YAAY,CAAC;MAC3C1L,MAAM,CAACgM,UAAU,CAACI,UAAU,CAAC;MAC7BpM,MAAM,CAAC6L,IAAI,GAAG,qBAAuBO,UAAU,CAACC,MAAM,CAACV,UAAU,CAAE;MACnE3L,MAAM,CAACsM,YAAY,GAAGtM,MAAM,CAAC6L,IAAI,CAACU,MAAM,CAAC,CAAC,EAAEX,gBAAgB,CAAC;IAC9D;IACA;IACA,MAAM9O,MAAM,GAAG,IAAI,CAACA,MAAM,CAACuC,KAAK,CAAC,CAAC;IAClC;AACF;AACA;AACA;AACA;IACEvC,MAAM,CAACoF,IAAI,CAAC,CAACjO,CAAC,EAAEC,CAAC,KAAK;MACrB,MAAMsY,MAAM,GAAGvY,CAAC,CAACwY,UAAU,CAAC,CAAC;MAC7B,MAAMC,MAAM,GAAGxY,CAAC,CAACuY,UAAU,CAAC,CAAC;MAC7B,IAAID,MAAM,IAAI,CAACE,MAAM,EAAE,OAAO,CAAC;MAC/B,IAAI,CAACF,MAAM,IAAIE,MAAM,EAAE,OAAO,CAAC,CAAC;MAChC,OAAO1Y,IAAI,CAACC,CAAC,EAAEC,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,KAAK,IAAI+N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnF,MAAM,CAAC7H,MAAM,EAAEgN,CAAC,EAAE,EAAE;MACvC,MAAMoE,KAAK,GAAGvJ,MAAM,CAACmF,CAAC,CAAC;MACvB,MAAMzH,SAAS,GAAGlH,UAAU,CAACoY,YAAY,CAAC;MAC1C,IAAI;QACH,IAAI9P,aAAa,CAACkQ,QAAQ,EAAE;UAC3BtR,SAAS,CAACuR,MAAM,CAACnQ,aAAa,CAACkQ,QAAQ,CAAC;QACzC;QACAzF,KAAK,CAAC2F,UAAU,CAACxR,SAAS,CAAC;QAC3B,MAAMmS,QAAQ,GAAGtG,KAAK,CAACoG,UAAU,CAAC,CAAC,GAChC,IAAI,CAACxQ,YAAY,GACjB,IAAI,CAACC,aAAa;QACrByQ,QAAQ,CAACC,kBAAkB,CAC1BpS,SAAS,EACT6L,KAAK,EACL,IAAI,CAAChK,eAAe,CAACC,UAAU,EAC/B,IAAI,CAACuB,mBACN,CAAC;QACD,IAAI,CAACtH,KAAK,CAACiE,SAAS,CAACkF,IAAI,CAAC2G,KAAK,EAAE7L,SAAS,CAAC;QAC3C6L,KAAK,CAACwF,IAAI,GAAG,qBAAuBrR,SAAS,CAAC6R,MAAM,CAACV,UAAU,CAAE;QACjEE,IAAI,CAACE,MAAM,CAAC1F,KAAK,CAACwF,IAAI,CAAC;QACvBxF,KAAK,CAACiG,YAAY,GAAGjG,KAAK,CAACwF,IAAI,CAACU,MAAM,CAAC,CAAC,EAAEX,gBAAgB,CAAC;QAC3D,IAAI,CAACrV,KAAK,CAACkD,WAAW,CAACiG,IAAI,CAAC2G,KAAK,CAAC;MACnC,CAAC,CAAC,OAAO1F,GAAG,EAAE;QACb,IAAI,CAACnD,MAAM,CAACsC,IAAI,CAAC,IAAI3M,gBAAgB,CAACkT,KAAK,EAAE,EAAE,EAAE1F,GAAG,CAAC,CAAC;MACvD;IACD;IACA,IAAI,CAAC/L,QAAQ,GAAG,qBAAuBiX,IAAI,CAACQ,MAAM,CAACV,UAAU,CAAE;IAC/D,IAAI,CAACE,IAAI,GAAG,IAAI,CAACjX,QAAQ,CAAC2X,MAAM,CAAC,CAAC,EAAEX,gBAAgB,CAAC;EACtD;;EAEA;AACD;AACA;AACA;EACCiB,UAAUA,CAACd,MAAM,EAAE;IAClB,MAAMnQ,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAM8P,YAAY,GAAG9P,aAAa,CAAC8P,YAAY;IAC/C,MAAMC,UAAU,GAAG/P,aAAa,CAAC+P,UAAU;IAC3C,MAAMC,gBAAgB,GAAGhQ,aAAa,CAACgQ,gBAAgB;IACvD,MAAMC,IAAI,GAAGvY,UAAU,CAACoY,YAAY,CAAC;IACrCG,IAAI,CAACE,MAAM,CAAC,IAAI,CAACnX,QAAQ,CAAC;IAC1BiX,IAAI,CAACE,MAAM,CAACA,MAAM,CAAC;IACnB,IAAI,CAACnX,QAAQ,GAAG,qBAAuBiX,IAAI,CAACQ,MAAM,CAACV,UAAU,CAAE;IAC/D,IAAI,CAACE,IAAI,GAAG,IAAI,CAACjX,QAAQ,CAAC2X,MAAM,CAAC,CAAC,EAAEX,gBAAgB,CAAC;EACtD;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCkB,SAASA,CAACC,IAAI,EAAEjX,MAAM,EAAEkX,SAAS,GAAG,CAAC,CAAC,EAAE;IACvC,IAAI,IAAI,CAAC1P,MAAM,CAACyP,IAAI,CAAC,EAAE;MACtB,IAAI,CAACnX,aAAa,CAAC,IAAI,CAAC0H,MAAM,CAACyP,IAAI,CAAC,EAAEjX,MAAM,CAAC,EAAE;QAC9C;QACA,IAAI,CAAC2H,QAAQ,CAACqC,IAAI,CACjB,IAAI/L,YAAY,CACf,yEAAyEgZ,IAAI,EAC9E,CACD,CAAC;QACD,IAAI,CAACzP,MAAM,CAACyP,IAAI,CAAC,GAAGjX,MAAM;QAC1B,IAAI,CAACyH,UAAU,CAAC/H,GAAG,CAACuX,IAAI,EAAEC,SAAS,CAAC;QACpC;MACD;MACA,MAAMC,OAAO,GAAG,IAAI,CAAC1P,UAAU,CAACsC,GAAG,CAACkN,IAAI,CAAC;MACzC,IAAI,CAACxP,UAAU,CAAC/H,GAAG,CAACuX,IAAI,EAAEb,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC,EAAED,OAAO,EAAED,SAAS,CAAC,CAAC;MAChE;IACD;IACA,IAAI,CAAC1P,MAAM,CAACyP,IAAI,CAAC,GAAGjX,MAAM;IAC1B,IAAI,CAACyH,UAAU,CAAC/H,GAAG,CAACuX,IAAI,EAAEC,SAAS,CAAC;EACrC;;EAEA;AACD;AACA;AACA;AACA;EACCG,WAAWA,CACVJ,IAAI,EACJK,mBAAmB,EACnBC,yBAAyB,GAAG7R,SAAS,EACpC;IACD,IAAI,CAAC,IAAI,CAAC8B,MAAM,CAACyP,IAAI,CAAC,EAAE;MACvB,MAAM,IAAI7N,KAAK,CACd,4DAA4D6N,IAAI,EACjE,CAAC;IACF;IACA,IAAI,OAAOK,mBAAmB,KAAK,UAAU,EAAE;MAC9C,IAAI,CAAC9P,MAAM,CAACyP,IAAI,CAAC,GAAGK,mBAAmB,CAAC,IAAI,CAAC9P,MAAM,CAACyP,IAAI,CAAC,CAAC;IAC3D,CAAC,MAAM;MACN,IAAI,CAACzP,MAAM,CAACyP,IAAI,CAAC,GAAGK,mBAAmB;IACxC;IACA,IAAIC,yBAAyB,KAAK7R,SAAS,EAAE;MAC5C,MAAMyR,OAAO,GAAG,IAAI,CAAC1P,UAAU,CAACsC,GAAG,CAACkN,IAAI,CAAC;MACzC,IAAI,OAAOM,yBAAyB,KAAK,UAAU,EAAE;QACpD,IAAI,CAAC9P,UAAU,CAAC/H,GAAG,CAACuX,IAAI,EAAEM,yBAAyB,CAACJ,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;MACpE,CAAC,MAAM;QACN,IAAI,CAAC1P,UAAU,CAAC/H,GAAG,CAClBuX,IAAI,EACJb,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC,EAAED,OAAO,EAAEI,yBAAyB,CACrD,CAAC;MACF;IACD;EACD;EAEAC,SAASA,CAAA,EAAG;IACX;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMC,SAAS,IAAItB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC7O,MAAM,CAAC,EAAE;MACjD,IAAI4O,MAAM,CAACuB,SAAS,CAACC,cAAc,CAAChO,IAAI,CAAC,IAAI,CAACpC,MAAM,EAAEkQ,SAAS,CAAC,EAAE;QACjED,KAAK,CAACzN,IAAI,CAAC;UACVnL,IAAI,EAAE6Y,SAAS;UACf1X,MAAM,EAAE,IAAI,CAACwH,MAAM,CAACkQ,SAAS,CAAC;UAC9BG,IAAI,EAAE,IAAI,CAACpQ,UAAU,CAACsC,GAAG,CAAC2N,SAAS,CAAC,IAAI,CAAC;QAC1C,CAAC,CAAC;MACH;IACD;IACA,OAAOD,KAAK;EACb;;EAEA;AACD;AACA;AACA;EACCK,QAAQA,CAACjZ,IAAI,EAAE;IACd,IAAI,CAACuX,MAAM,CAACuB,SAAS,CAACC,cAAc,CAAChO,IAAI,CAAC,IAAI,CAACpC,MAAM,EAAE3I,IAAI,CAAC,EAC3D,OAAO6G,SAAS;IACjB,OAAO;MACN7G,IAAI;MACJmB,MAAM,EAAE,IAAI,CAACwH,MAAM,CAAC3I,IAAI,CAAC;MACzBgZ,IAAI,EAAE,IAAI,CAACpQ,UAAU,CAACsC,GAAG,CAAClL,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;EACF;EAEAwS,kBAAkBA,CAAA,EAAG;IACpB,KAAK,IAAIlF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC/E,OAAO,CAACjI,MAAM,EAAEgN,CAAC,EAAE,EAAE;MAC7C,MAAMjC,MAAM,GAAG,IAAI,CAAC9C,OAAO,CAAC+E,CAAC,CAAC;MAC9B,IAAIjC,MAAM,CAACsL,SAAS,CAAChO,MAAM,EAAE;QAC5B,MAAMC,UAAU,GAAGyC,MAAM,CAACsL,SAAS,CAAC/N,UAAU;QAC9C,KAAK,MAAMiQ,SAAS,IAAItB,MAAM,CAACC,IAAI,CAACnM,MAAM,CAACsL,SAAS,CAAChO,MAAM,CAAC,EAAE;UAC7D,MAAMuQ,QAAQ,GAAG,IAAI,CAACC,OAAO,CAACN,SAAS,CAAC;UACxC,IAAI,CAACV,SAAS,CACbe,QAAQ,EACR7N,MAAM,CAACsL,SAAS,CAAChO,MAAM,CAACkQ,SAAS,CAAC,EAClCjQ,UAAU,GAAGA,UAAU,CAACsC,GAAG,CAAC2N,SAAS,CAAC,GAAGhS,SAC1C,CAAC;UACD,IAAI,CAACjF,KAAK,CAACkE,WAAW,CAACiF,IAAI,CAACM,MAAM,EAAE6N,QAAQ,CAAC;QAC9C;MACD;IACD;EACD;EAEAzG,iBAAiBA,CAAA,EAAG;IACnB,MAAMxL,aAAa,GAAG,IAAI,CAACA,aAAa;IACxC,MAAMmS,eAAe,GAAG,IAAIlR,GAAG,CAAC,CAAC;IACjC;IACA,MAAMmR,mBAAmB,GAAG,IAAInR,GAAG,CAAC,CAAC;IACrC,KAAK,IAAIoF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnF,MAAM,CAAC7H,MAAM,EAAEgN,CAAC,EAAE,EAAE;MAC5C,MAAMoE,KAAK,GAAG,IAAI,CAACvJ,MAAM,CAACmF,CAAC,CAAC;MAC5BoE,KAAK,CAAC4H,KAAK,GAAG,EAAE;MAChB,IAAInY,MAAM;MACV,IAAIiX,IAAI;MACR,IAAImB,gBAAgB;MACpB,IAAI;QACH,MAAMvB,QAAQ,GAAGtG,KAAK,CAACoG,UAAU,CAAC,CAAC,GAChC,IAAI,CAACxQ,YAAY,GACjB,IAAI,CAACC,aAAa;QACrB,MAAMiS,QAAQ,GAAGxB,QAAQ,CAACyB,iBAAiB,CAAC;UAC3C/H,KAAK;UACLwF,IAAI,EAAE,IAAI,CAACA,IAAI;UACfjX,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBgH,aAAa;UACbS,eAAe,EAAE,IAAI,CAACA,eAAe;UACrCwB,mBAAmB,EAAE,IAAI,CAACA;QAC3B,CAAC,CAAC,CAAC,CAAC;QACJ,KAAK,MAAMwQ,YAAY,IAAIF,QAAQ,EAAE;UACpC,MAAM9N,SAAS,GAAGgO,YAAY,CAAC/Z,UAAU;UACzC,MAAMga,QAAQ,GAAGD,YAAY,CAACxC,IAAI;UAClCqC,gBAAgB,GAAGG,YAAY,CAACH,gBAAgB;UAChD,MAAMK,WAAW,GAAG,IAAI,CAACC,eAAe,CACvCN,gBAAgB,EAChBG,YAAY,CAACI,WACd,CAAC;UACD1B,IAAI,GAAGwB,WAAW,CAACG,IAAI;UACvB,MAAM1B,SAAS,GAAGuB,WAAW,CAACZ,IAAI;;UAElC;UACA,MAAMgB,cAAc,GAAGX,mBAAmB,CAACnO,GAAG,CAACkN,IAAI,CAAC;UACpD,IAAI4B,cAAc,KAAKnT,SAAS,EAAE;YACjC,IAAImT,cAAc,CAAC9C,IAAI,KAAKyC,QAAQ,EAAE;cACrC,IAAI,IAAI,CAAClR,KAAK,EAAE;gBACf,IAAI,CAACA,KAAK,CAACiD,SAAS,CAAC,GAAG;kBACvBwL,IAAI,EAAEyC,QAAQ;kBACdxY,MAAM,EAAE6Y,cAAc,CAAC7Y;gBACxB,CAAC;cACF;cACAuQ,KAAK,CAAC4H,KAAK,CAACnO,IAAI,CAACiN,IAAI,CAAC;cACtB,IAAI,CAACxW,KAAK,CAACmE,UAAU,CAACgF,IAAI,CAAC2G,KAAK,EAAE0G,IAAI,CAAC;cACvC;YACD,CAAC,MAAM;cACN,MAAM,IAAI7N,KAAK,CACd,8DAA8D6N,IAAI,EAAE,GACnE,YAAY4B,cAAc,CAACtI,KAAK,CAAClS,EAAE,QAAQkS,KAAK,CAAClS,EAAE,GACrD,CAAC;YACF;UACD;UACA,IACC,IAAI,CAACiJ,KAAK,IACV,IAAI,CAACA,KAAK,CAACiD,SAAS,CAAC,IACrB,IAAI,CAACjD,KAAK,CAACiD,SAAS,CAAC,CAACwL,IAAI,KAAKyC,QAAQ,EACtC;YACDxY,MAAM,GAAG,IAAI,CAACsH,KAAK,CAACiD,SAAS,CAAC,CAACvK,MAAM;UACtC,CAAC,MAAM;YACNA,MAAM,GAAGuY,YAAY,CAACO,MAAM,CAAC,CAAC;YAC9B;YACA,IAAI,EAAE9Y,MAAM,YAAY7D,YAAY,CAAC,EAAE;cACtC,MAAM4c,UAAU,GAAGd,eAAe,CAAClO,GAAG,CAAC/J,MAAM,CAAC;cAC9C,IAAI+Y,UAAU,EAAE;gBACf/Y,MAAM,GAAG+Y,UAAU;cACpB,CAAC,MAAM;gBACN,MAAMC,YAAY,GAAG,IAAI7c,YAAY,CAAC6D,MAAM,CAAC;gBAC7CiY,eAAe,CAACvY,GAAG,CAACM,MAAM,EAAEgZ,YAAY,CAAC;gBACzChZ,MAAM,GAAGgZ,YAAY;cACtB;YACD;YACA,IAAI,IAAI,CAAC1R,KAAK,EAAE;cACf,IAAI,CAACA,KAAK,CAACiD,SAAS,CAAC,GAAG;gBACvBwL,IAAI,EAAEyC,QAAQ;gBACdxY;cACD,CAAC;YACF;UACD;UACA,IAAI,CAACgX,SAAS,CAACC,IAAI,EAAEjX,MAAM,EAAEkX,SAAS,CAAC;UACvC3G,KAAK,CAAC4H,KAAK,CAACnO,IAAI,CAACiN,IAAI,CAAC;UACtB,IAAI,CAACxW,KAAK,CAACmE,UAAU,CAACgF,IAAI,CAAC2G,KAAK,EAAE0G,IAAI,CAAC;UACvCiB,mBAAmB,CAACxY,GAAG,CAACuX,IAAI,EAAE;YAC7BlB,IAAI,EAAEyC,QAAQ;YACdxY,MAAM;YACNuQ;UACD,CAAC,CAAC;QACH;MACD,CAAC,CAAC,OAAO1F,GAAG,EAAE;QACb,IAAI,CAACnD,MAAM,CAACsC,IAAI,CACf,IAAI3M,gBAAgB,CAACkT,KAAK,EAAE0G,IAAI,IAAImB,gBAAgB,EAAEvN,GAAG,CAC1D,CAAC;MACF;IACD;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCmN,OAAOA,CAACiB,QAAQ,EAAEC,IAAI,EAAE;IACvBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjBA,IAAI,CAACnD,IAAI,GAAGmD,IAAI,CAACnD,IAAI,IAAI,IAAI,CAACA,IAAI;IAClC,OAAO,IAAI,CAAC5P,YAAY,CAACgT,YAAY,CAACF,QAAQ,EAAEC,IAAI,CAAC;EACtD;;EAEA;AACD;AACA;AACA;AACA;EACCR,eAAeA,CAACO,QAAQ,EAAEC,IAAI,EAAE;IAC/BA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjBA,IAAI,CAACnD,IAAI,GAAGmD,IAAI,CAACnD,IAAI,IAAI,IAAI,CAACA,IAAI;IAClC,OAAO,IAAI,CAAC5P,YAAY,CAACiT,oBAAoB,CAACH,QAAQ,EAAEC,IAAI,CAAC;EAC9D;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCG,mBAAmBA,CAACxa,IAAI,EAAEiH,aAAa,EAAEwT,OAAO,EAAE;IACjD,MAAM9J,GAAG,GAAG,IAAI,CAACxH,gBAAgB,CAACnJ,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACmJ,gBAAgB,CAACnJ,IAAI,CAAC,GAAG2Q,GAAG,GAAG,CAAC;IACrC,OAAO,IAAI,CAAChP,QAAQ,CAAC6Y,mBAAmB,CACvC,IAAI,EACJxa,IAAI,EACJ2Q,GAAG,EACH1J,aAAa,EACbwT,OACD,CAAC;EACF;EAEAC,gBAAgBA,CAAA,EAAG;IAClB;IACA,MAAM7F,OAAO,GAAG,IAAIjL,GAAG,CAAC,CAAC;IAEzB,MAAMrB,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,KAAK,IAAIwN,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGxN,OAAO,CAACjI,MAAM,EAAEyV,WAAW,EAAE,EAAE;MACtE,MAAM4E,QAAQ,GAAGpS,OAAO,CAACwN,WAAW,CAAC,CAACvW,EAAE;MACxC,IAAImb,QAAQ,KAAK,IAAI,EAAE;MACvB,IAAI9F,OAAO,CAACU,GAAG,CAACoF,QAAQ,CAAC,EAAE;QAC1B,MAAM,IAAIpQ,KAAK,CAAC,yCAAyCoQ,QAAQ,EAAE,CAAC;MACrE;MACA9F,OAAO,CAAC7T,GAAG,CAAC2Z,QAAQ,CAAC;IACtB;IAEA,MAAMxS,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,KAAK,IAAIqM,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGrM,MAAM,CAAC7H,MAAM,EAAEkU,UAAU,EAAE,EAAE;MAClE,MAAM9C,KAAK,GAAGvJ,MAAM,CAACqM,UAAU,CAAC;MAChC,IAAIrM,MAAM,CAAC0I,OAAO,CAACa,KAAK,CAAC,KAAK8C,UAAU,EAAE;QACzC,MAAM,IAAIjK,KAAK,CACd,oDAAoDmH,KAAK,CAACkJ,OAAO,EAClE,CAAC;MACF;IACD;IAEA,KAAK,MAAMvH,UAAU,IAAI,IAAI,CAACjL,WAAW,EAAE;MAC1CiL,UAAU,CAACqH,gBAAgB,CAAC,CAAC;IAC9B;EACD;AACD;;AAEA;AACAjZ,WAAW,CAACqX,SAAS,CAAC+B,YAAY,GAAGxd,IAAI,CAACyd,SAAS;AAClD;AACD;AACA;AACA;AACA;AACA;AACA;AACC,UAAS9a,IAAI,EAAE,GAAGkK,IAAI,EAAE;EACvB,IAAI,CAACtI,KAAK,CACT5B,IAAI,CAAC+a,OAAO,CAAC,cAAc,EAAEC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAC7D,CAAClQ,IAAI,CAAC,GAAGb,IAAI,CAAC;AAChB,CAAC,EACD,yEACD,CAAC;;AAED;AACAqN,MAAM,CAAC2D,cAAc,CAACzZ,WAAW,CAACqX,SAAS,EAAE,gBAAgB,EAAE;EAC9DqC,YAAY,EAAE,KAAK;EACnBjQ,GAAG,EAAE7N,IAAI,CAACyd,SAAS;EAClB;AACF;AACA;AACA;AACA;EACE,YAAW;IACV,OAAO,IAAI,CAACpT,eAAe,CAACC,UAAU;EACvC,CAAC,EACD,gFACD,CAAC;EACD9G,GAAG,EAAExD,IAAI,CAACyd,SAAS;EAClB;AACF;AACA;AACA;AACA;AACA;EACE,UAASM,KAAK,EAAE;IACf,IAAI,CAAC1T,eAAe,CAACC,UAAU,GAAGyT,KAAK;EACxC,CAAC,EACD,iFACD;AACD,CAAC,CAAC;AAEF/P,MAAM,CAACgQ,OAAO,GAAG5Z,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script"}