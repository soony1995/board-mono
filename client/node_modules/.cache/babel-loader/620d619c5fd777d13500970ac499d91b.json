{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst Template = require(\"./Template\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/BannerPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginArgument} BannerPluginArgument */\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginOptions} BannerPluginOptions */\n\nconst wrapComment = str => {\n  if (!str.includes(\"\\n\")) {\n    return Template.toComment(str);\n  }\n  return `/*!\\n * ${str.replace(/\\*\\//g, \"* /\").split(\"\\n\").join(\"\\n * \")}\\n */`;\n};\nclass BannerPlugin {\n  /**\n   * @param {BannerPluginArgument} options options object\n   */\n  constructor(options) {\n    if (arguments.length > 1) {\n      throw new Error(\"BannerPlugin only takes one argument (pass an options object)\");\n    }\n    validateOptions(schema, options, \"Banner Plugin\");\n    if (typeof options === \"string\" || typeof options === \"function\") {\n      options = {\n        banner: options\n      };\n    }\n\n    /** @type {BannerPluginOptions} */\n    this.options = options;\n    const bannerOption = options.banner;\n    if (typeof bannerOption === \"function\") {\n      const getBanner = bannerOption;\n      this.banner = this.options.raw ? getBanner : data => wrapComment(getBanner(data));\n    } else {\n      const banner = this.options.raw ? bannerOption : wrapComment(bannerOption);\n      this.banner = () => banner;\n    }\n  }\n  apply(compiler) {\n    const options = this.options;\n    const banner = this.banner;\n    const matchObject = ModuleFilenameHelpers.matchObject.bind(undefined, options);\n    compiler.hooks.compilation.tap(\"BannerPlugin\", compilation => {\n      compilation.hooks.optimizeChunkAssets.tap(\"BannerPlugin\", chunks => {\n        for (const chunk of chunks) {\n          if (options.entryOnly && !chunk.canBeInitial()) {\n            continue;\n          }\n          for (const file of chunk.files) {\n            if (!matchObject(file)) {\n              continue;\n            }\n            let query = \"\";\n            let filename = file;\n            const hash = compilation.hash;\n            const querySplit = filename.indexOf(\"?\");\n            if (querySplit >= 0) {\n              query = filename.substr(querySplit);\n              filename = filename.substr(0, querySplit);\n            }\n            const lastSlashIndex = filename.lastIndexOf(\"/\");\n            const basename = lastSlashIndex === -1 ? filename : filename.substr(lastSlashIndex + 1);\n            const data = {\n              hash,\n              chunk,\n              filename,\n              basename,\n              query\n            };\n            const comment = compilation.getPath(banner(data), data);\n            compilation.updateAsset(file, old => new ConcatSource(comment, \"\\n\", old));\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = BannerPlugin;","map":{"version":3,"names":["ConcatSource","require","ModuleFilenameHelpers","Template","validateOptions","schema","wrapComment","str","includes","toComment","replace","split","join","BannerPlugin","constructor","options","arguments","length","Error","banner","bannerOption","getBanner","raw","data","apply","compiler","matchObject","bind","undefined","hooks","compilation","tap","optimizeChunkAssets","chunks","chunk","entryOnly","canBeInitial","file","files","query","filename","hash","querySplit","indexOf","substr","lastSlashIndex","lastIndexOf","basename","comment","getPath","updateAsset","old","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/BannerPlugin.js"],"sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst Template = require(\"./Template\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/BannerPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginArgument} BannerPluginArgument */\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginOptions} BannerPluginOptions */\n\nconst wrapComment = str => {\n\tif (!str.includes(\"\\n\")) {\n\t\treturn Template.toComment(str);\n\t}\n\treturn `/*!\\n * ${str\n\t\t.replace(/\\*\\//g, \"* /\")\n\t\t.split(\"\\n\")\n\t\t.join(\"\\n * \")}\\n */`;\n};\n\nclass BannerPlugin {\n\t/**\n\t * @param {BannerPluginArgument} options options object\n\t */\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"BannerPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\n\t\tvalidateOptions(schema, options, \"Banner Plugin\");\n\n\t\tif (typeof options === \"string\" || typeof options === \"function\") {\n\t\t\toptions = {\n\t\t\t\tbanner: options\n\t\t\t};\n\t\t}\n\n\t\t/** @type {BannerPluginOptions} */\n\t\tthis.options = options;\n\n\t\tconst bannerOption = options.banner;\n\t\tif (typeof bannerOption === \"function\") {\n\t\t\tconst getBanner = bannerOption;\n\t\t\tthis.banner = this.options.raw\n\t\t\t\t? getBanner\n\t\t\t\t: data => wrapComment(getBanner(data));\n\t\t} else {\n\t\t\tconst banner = this.options.raw\n\t\t\t\t? bannerOption\n\t\t\t\t: wrapComment(bannerOption);\n\t\t\tthis.banner = () => banner;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst banner = this.banner;\n\t\tconst matchObject = ModuleFilenameHelpers.matchObject.bind(\n\t\t\tundefined,\n\t\t\toptions\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"BannerPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunkAssets.tap(\"BannerPlugin\", chunks => {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tif (options.entryOnly && !chunk.canBeInitial()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const file of chunk.files) {\n\t\t\t\t\t\tif (!matchObject(file)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet query = \"\";\n\t\t\t\t\t\tlet filename = file;\n\t\t\t\t\t\tconst hash = compilation.hash;\n\t\t\t\t\t\tconst querySplit = filename.indexOf(\"?\");\n\n\t\t\t\t\t\tif (querySplit >= 0) {\n\t\t\t\t\t\t\tquery = filename.substr(querySplit);\n\t\t\t\t\t\t\tfilename = filename.substr(0, querySplit);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst lastSlashIndex = filename.lastIndexOf(\"/\");\n\n\t\t\t\t\t\tconst basename =\n\t\t\t\t\t\t\tlastSlashIndex === -1\n\t\t\t\t\t\t\t\t? filename\n\t\t\t\t\t\t\t\t: filename.substr(lastSlashIndex + 1);\n\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tbasename,\n\t\t\t\t\t\t\tquery\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst comment = compilation.getPath(banner(data), data);\n\n\t\t\t\t\t\tcompilation.updateAsset(\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\told => new ConcatSource(comment, \"\\n\", old)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = BannerPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}