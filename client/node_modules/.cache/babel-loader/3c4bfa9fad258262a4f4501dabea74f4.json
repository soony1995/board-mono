{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n\n// THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n  if (nan === true) {\n    node.nan = true;\n  }\n  if (inf === true) {\n    node.inf = true;\n  }\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isTypeOf","t","n","type","assertTypeOf","Error","undefined","module","id","fields","metadata","length","node","moduleMetadata","sections","functionNames","localNames","producers","moduleNameMetadata","value","functionNameMetadata","index","localNameMetadata","localIndex","functionIndex","binaryModule","blob","quoteModule","string","sectionMetadata","section","startOffset","size","vectorOfSize","producersSectionMetadata","producerMetadata","language","processedBy","sdk","producerMetadataVersionedName","name","version","loopInstruction","label","resulttype","instr","object","args","namedArgs","Object","keys","ifInstruction","testLabel","test","result","consequent","alternate","stringLiteral","numberLiteral","raw","longNumberLiteral","floatLiteral","nan","inf","elem","table","offset","funcs","indexInFuncSection","valtypeLiteral","typeInstruction","functype","start","globalType","valtype","mutability","leadingComment","blockComment","data","memoryIndex","init","global","elementType","limits","elements","memory","funcImportDescr","signature","moduleImport","descr","moduleExportDescr","exportType","moduleExport","limit","min","max","params","results","program","body","identifier","blockInstruction","callInstruction","instrArgs","numeric","callIndirectInstruction","intrs","byteArray","values","func","isExternal","internalBrUnless","target","internalGoto","internalCallExtern","internalEndAndReturn","isModule","isModuleMetadata","isModuleNameMetadata","isFunctionNameMetadata","isLocalNameMetadata","isBinaryModule","isQuoteModule","isSectionMetadata","isProducersSectionMetadata","isProducerMetadata","isProducerMetadataVersionedName","isLoopInstruction","isInstr","isIfInstruction","isStringLiteral","isNumberLiteral","isLongNumberLiteral","isFloatLiteral","isElem","isIndexInFuncSection","isValtypeLiteral","isTypeInstruction","isStart","isGlobalType","isLeadingComment","isBlockComment","isData","isGlobal","isTable","isMemory","isFuncImportDescr","isModuleImport","isModuleExportDescr","isModuleExport","isLimit","isSignature","isProgram","isIdentifier","isBlockInstruction","isCallInstruction","isCallIndirectInstruction","isByteArray","isFunc","isInternalBrUnless","isInternalGoto","isInternalCallExtern","isInternalEndAndReturn","isNode","isBlock","isInstruction","isExpression","isNumericLiteral","isImportDescr","isIntrinsic","assertModule","assertModuleMetadata","assertModuleNameMetadata","assertFunctionNameMetadata","assertLocalNameMetadata","assertBinaryModule","assertQuoteModule","assertSectionMetadata","assertProducersSectionMetadata","assertProducerMetadata","assertProducerMetadataVersionedName","assertLoopInstruction","assertInstr","assertIfInstruction","assertStringLiteral","assertNumberLiteral","assertLongNumberLiteral","assertFloatLiteral","assertElem","assertIndexInFuncSection","assertValtypeLiteral","assertTypeInstruction","assertStart","assertGlobalType","assertLeadingComment","assertBlockComment","assertData","assertGlobal","assertTable","assertMemory","assertFuncImportDescr","assertModuleImport","assertModuleExportDescr","assertModuleExport","assertLimit","assertSignature","assertProgram","assertIdentifier","assertBlockInstruction","assertCallInstruction","assertCallIndirectInstruction","assertByteArray","assertFunc","assertInternalBrUnless","assertInternalGoto","assertInternalCallExtern","assertInternalEndAndReturn","unionTypesMap","Module","ModuleMetadata","ModuleNameMetadata","FunctionNameMetadata","LocalNameMetadata","BinaryModule","QuoteModule","SectionMetadata","ProducersSectionMetadata","ProducerMetadata","ProducerMetadataVersionedName","LoopInstruction","Instr","IfInstruction","StringLiteral","NumberLiteral","LongNumberLiteral","FloatLiteral","Elem","IndexInFuncSection","ValtypeLiteral","TypeInstruction","Start","GlobalType","LeadingComment","BlockComment","Data","Global","Table","Memory","FuncImportDescr","ModuleImport","ModuleExportDescr","ModuleExport","Limit","Signature","Program","Identifier","BlockInstruction","CallInstruction","CallIndirectInstruction","ByteArray","Func","InternalBrUnless","InternalGoto","InternalCallExtern","InternalEndAndReturn","nodeAndUnionTypes"],"sources":["/home/soon/bulletin-board/node_modules/@webassemblyjs/ast/esm/nodes.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\n\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\n\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n\n  if (nan === true) {\n    node.nan = true;\n  }\n\n  if (inf === true) {\n    node.inf = true;\n  }\n\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}