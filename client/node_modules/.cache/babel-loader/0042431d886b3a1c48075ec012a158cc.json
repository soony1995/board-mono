{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst asyncLib = require(\"neo-async\");\nconst path = require(\"path\");\nconst {\n  Source\n} = require(\"webpack-sources\");\nconst util = require(\"util\");\nconst {\n  Tapable,\n  SyncHook,\n  SyncBailHook,\n  AsyncParallelHook,\n  AsyncSeriesHook\n} = require(\"tapable\");\nconst Compilation = require(\"./Compilation\");\nconst Stats = require(\"./Stats\");\nconst Watching = require(\"./Watching\");\nconst NormalModuleFactory = require(\"./NormalModuleFactory\");\nconst ContextModuleFactory = require(\"./ContextModuleFactory\");\nconst ResolverFactory = require(\"./ResolverFactory\");\nconst RequestShortener = require(\"./RequestShortener\");\nconst {\n  makePathsRelative\n} = require(\"./util/identifier\");\nconst ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\nconst {\n  Logger\n} = require(\"./logging/Logger\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Entry} Entry */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n\n/**\n * @typedef {Object} CompilationParams\n * @property {NormalModuleFactory} normalModuleFactory\n * @property {ContextModuleFactory} contextModuleFactory\n * @property {Set<string>} compilationDependencies\n */\n\nclass Compiler extends Tapable {\n  constructor(context) {\n    super();\n    this.hooks = {\n      /** @type {SyncBailHook<Compilation>} */\n      shouldEmit: new SyncBailHook([\"compilation\"]),\n      /** @type {AsyncSeriesHook<Stats>} */\n      done: new AsyncSeriesHook([\"stats\"]),\n      /** @type {AsyncSeriesHook<>} */\n      additionalPass: new AsyncSeriesHook([]),\n      /** @type {AsyncSeriesHook<Compiler>} */\n      beforeRun: new AsyncSeriesHook([\"compiler\"]),\n      /** @type {AsyncSeriesHook<Compiler>} */\n      run: new AsyncSeriesHook([\"compiler\"]),\n      /** @type {AsyncSeriesHook<Compilation>} */\n      emit: new AsyncSeriesHook([\"compilation\"]),\n      /** @type {AsyncSeriesHook<string, Buffer>} */\n      assetEmitted: new AsyncSeriesHook([\"file\", \"content\"]),\n      /** @type {AsyncSeriesHook<Compilation>} */\n      afterEmit: new AsyncSeriesHook([\"compilation\"]),\n      /** @type {SyncHook<Compilation, CompilationParams>} */\n      thisCompilation: new SyncHook([\"compilation\", \"params\"]),\n      /** @type {SyncHook<Compilation, CompilationParams>} */\n      compilation: new SyncHook([\"compilation\", \"params\"]),\n      /** @type {SyncHook<NormalModuleFactory>} */\n      normalModuleFactory: new SyncHook([\"normalModuleFactory\"]),\n      /** @type {SyncHook<ContextModuleFactory>}  */\n      contextModuleFactory: new SyncHook([\"contextModulefactory\"]),\n      /** @type {AsyncSeriesHook<CompilationParams>} */\n      beforeCompile: new AsyncSeriesHook([\"params\"]),\n      /** @type {SyncHook<CompilationParams>} */\n      compile: new SyncHook([\"params\"]),\n      /** @type {AsyncParallelHook<Compilation>} */\n      make: new AsyncParallelHook([\"compilation\"]),\n      /** @type {AsyncSeriesHook<Compilation>} */\n      afterCompile: new AsyncSeriesHook([\"compilation\"]),\n      /** @type {AsyncSeriesHook<Compiler>} */\n      watchRun: new AsyncSeriesHook([\"compiler\"]),\n      /** @type {SyncHook<Error>} */\n      failed: new SyncHook([\"error\"]),\n      /** @type {SyncHook<string, string>} */\n      invalid: new SyncHook([\"filename\", \"changeTime\"]),\n      /** @type {SyncHook} */\n      watchClose: new SyncHook([]),\n      /** @type {SyncBailHook<string, string, any[]>} */\n      infrastructureLog: new SyncBailHook([\"origin\", \"type\", \"args\"]),\n      // TODO the following hooks are weirdly located here\n      // TODO move them for webpack 5\n      /** @type {SyncHook} */\n      environment: new SyncHook([]),\n      /** @type {SyncHook} */\n      afterEnvironment: new SyncHook([]),\n      /** @type {SyncHook<Compiler>} */\n      afterPlugins: new SyncHook([\"compiler\"]),\n      /** @type {SyncHook<Compiler>} */\n      afterResolvers: new SyncHook([\"compiler\"]),\n      /** @type {SyncBailHook<string, Entry>} */\n      entryOption: new SyncBailHook([\"context\", \"entry\"])\n    };\n    // TODO webpack 5 remove this\n    this.hooks.infrastructurelog = this.hooks.infrastructureLog;\n    this._pluginCompat.tap(\"Compiler\", options => {\n      switch (options.name) {\n        case \"additional-pass\":\n        case \"before-run\":\n        case \"run\":\n        case \"emit\":\n        case \"after-emit\":\n        case \"before-compile\":\n        case \"make\":\n        case \"after-compile\":\n        case \"watch-run\":\n          options.async = true;\n          break;\n      }\n    });\n\n    /** @type {string=} */\n    this.name = undefined;\n    /** @type {Compilation=} */\n    this.parentCompilation = undefined;\n    /** @type {string} */\n    this.outputPath = \"\";\n    this.outputFileSystem = null;\n    this.inputFileSystem = null;\n\n    /** @type {string|null} */\n    this.recordsInputPath = null;\n    /** @type {string|null} */\n    this.recordsOutputPath = null;\n    this.records = {};\n    this.removedFiles = new Set();\n    /** @type {Map<string, number>} */\n    this.fileTimestamps = new Map();\n    /** @type {Map<string, number>} */\n    this.contextTimestamps = new Map();\n    /** @type {ResolverFactory} */\n    this.resolverFactory = new ResolverFactory();\n    this.infrastructureLogger = undefined;\n\n    // TODO remove in webpack 5\n    this.resolvers = {\n      normal: {\n        plugins: util.deprecate((hook, fn) => {\n          this.resolverFactory.plugin(\"resolver normal\", resolver => {\n            resolver.plugin(hook, fn);\n          });\n        }, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n        apply: util.deprecate((...args) => {\n          this.resolverFactory.plugin(\"resolver normal\", resolver => {\n            resolver.apply(...args);\n          });\n        }, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n      },\n      loader: {\n        plugins: util.deprecate((hook, fn) => {\n          this.resolverFactory.plugin(\"resolver loader\", resolver => {\n            resolver.plugin(hook, fn);\n          });\n        }, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n        apply: util.deprecate((...args) => {\n          this.resolverFactory.plugin(\"resolver loader\", resolver => {\n            resolver.apply(...args);\n          });\n        }, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n      },\n      context: {\n        plugins: util.deprecate((hook, fn) => {\n          this.resolverFactory.plugin(\"resolver context\", resolver => {\n            resolver.plugin(hook, fn);\n          });\n        }, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n        apply: util.deprecate((...args) => {\n          this.resolverFactory.plugin(\"resolver context\", resolver => {\n            resolver.apply(...args);\n          });\n        }, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n      }\n    };\n\n    /** @type {WebpackOptions} */\n    this.options = /** @type {WebpackOptions} */{};\n    this.context = context;\n    this.requestShortener = new RequestShortener(context);\n\n    /** @type {boolean} */\n    this.running = false;\n\n    /** @type {boolean} */\n    this.watchMode = false;\n\n    /** @private @type {WeakMap<Source, { sizeOnlySource: SizeOnlySource, writtenTo: Map<string, number> }>} */\n    this._assetEmittingSourceCache = new WeakMap();\n    /** @private @type {Map<string, number>} */\n    this._assetEmittingWrittenFiles = new Map();\n  }\n\n  /**\n   * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n   * @returns {Logger} a logger with that name\n   */\n  getInfrastructureLogger(name) {\n    if (!name) {\n      throw new TypeError(\"Compiler.getInfrastructureLogger(name) called without a name\");\n    }\n    return new Logger((type, args) => {\n      if (typeof name === \"function\") {\n        name = name();\n        if (!name) {\n          throw new TypeError(\"Compiler.getInfrastructureLogger(name) called with a function not returning a name\");\n        }\n      }\n      if (this.hooks.infrastructureLog.call(name, type, args) === undefined) {\n        if (this.infrastructureLogger !== undefined) {\n          this.infrastructureLogger(name, type, args);\n        }\n      }\n    });\n  }\n  watch(watchOptions, handler) {\n    if (this.running) return handler(new ConcurrentCompilationError());\n    this.running = true;\n    this.watchMode = true;\n    this.fileTimestamps = new Map();\n    this.contextTimestamps = new Map();\n    this.removedFiles = new Set();\n    return new Watching(this, watchOptions, handler);\n  }\n  run(callback) {\n    if (this.running) return callback(new ConcurrentCompilationError());\n    const finalCallback = (err, stats) => {\n      this.running = false;\n      if (err) {\n        this.hooks.failed.call(err);\n      }\n      if (callback !== undefined) return callback(err, stats);\n    };\n    const startTime = Date.now();\n    this.running = true;\n    const onCompiled = (err, compilation) => {\n      if (err) return finalCallback(err);\n      if (this.hooks.shouldEmit.call(compilation) === false) {\n        const stats = new Stats(compilation);\n        stats.startTime = startTime;\n        stats.endTime = Date.now();\n        this.hooks.done.callAsync(stats, err => {\n          if (err) return finalCallback(err);\n          return finalCallback(null, stats);\n        });\n        return;\n      }\n      this.emitAssets(compilation, err => {\n        if (err) return finalCallback(err);\n        if (compilation.hooks.needAdditionalPass.call()) {\n          compilation.needAdditionalPass = true;\n          const stats = new Stats(compilation);\n          stats.startTime = startTime;\n          stats.endTime = Date.now();\n          this.hooks.done.callAsync(stats, err => {\n            if (err) return finalCallback(err);\n            this.hooks.additionalPass.callAsync(err => {\n              if (err) return finalCallback(err);\n              this.compile(onCompiled);\n            });\n          });\n          return;\n        }\n        this.emitRecords(err => {\n          if (err) return finalCallback(err);\n          const stats = new Stats(compilation);\n          stats.startTime = startTime;\n          stats.endTime = Date.now();\n          this.hooks.done.callAsync(stats, err => {\n            if (err) return finalCallback(err);\n            return finalCallback(null, stats);\n          });\n        });\n      });\n    };\n    this.hooks.beforeRun.callAsync(this, err => {\n      if (err) return finalCallback(err);\n      this.hooks.run.callAsync(this, err => {\n        if (err) return finalCallback(err);\n        this.readRecords(err => {\n          if (err) return finalCallback(err);\n          this.compile(onCompiled);\n        });\n      });\n    });\n  }\n  runAsChild(callback) {\n    this.compile((err, compilation) => {\n      if (err) return callback(err);\n      this.parentCompilation.children.push(compilation);\n      for (const {\n        name,\n        source,\n        info\n      } of compilation.getAssets()) {\n        this.parentCompilation.emitAsset(name, source, info);\n      }\n      const entries = Array.from(compilation.entrypoints.values(), ep => ep.chunks).reduce((array, chunks) => {\n        return array.concat(chunks);\n      }, []);\n      return callback(null, entries, compilation);\n    });\n  }\n  purgeInputFileSystem() {\n    if (this.inputFileSystem && this.inputFileSystem.purge) {\n      this.inputFileSystem.purge();\n    }\n  }\n  emitAssets(compilation, callback) {\n    let outputPath;\n    const emitFiles = err => {\n      if (err) return callback(err);\n      asyncLib.forEachLimit(compilation.getAssets(), 15, ({\n        name: file,\n        source\n      }, callback) => {\n        let targetFile = file;\n        const queryStringIdx = targetFile.indexOf(\"?\");\n        if (queryStringIdx >= 0) {\n          targetFile = targetFile.substr(0, queryStringIdx);\n        }\n        const writeOut = err => {\n          if (err) return callback(err);\n          const targetPath = this.outputFileSystem.join(outputPath, targetFile);\n          // TODO webpack 5 remove futureEmitAssets option and make it on by default\n          if (this.options.output.futureEmitAssets) {\n            // check if the target file has already been written by this Compiler\n            const targetFileGeneration = this._assetEmittingWrittenFiles.get(targetPath);\n\n            // create an cache entry for this Source if not already existing\n            let cacheEntry = this._assetEmittingSourceCache.get(source);\n            if (cacheEntry === undefined) {\n              cacheEntry = {\n                sizeOnlySource: undefined,\n                writtenTo: new Map()\n              };\n              this._assetEmittingSourceCache.set(source, cacheEntry);\n            }\n\n            // if the target file has already been written\n            if (targetFileGeneration !== undefined) {\n              // check if the Source has been written to this target file\n              const writtenGeneration = cacheEntry.writtenTo.get(targetPath);\n              if (writtenGeneration === targetFileGeneration) {\n                // if yes, we skip writing the file\n                // as it's already there\n                // (we assume one doesn't remove files while the Compiler is running)\n\n                compilation.updateAsset(file, cacheEntry.sizeOnlySource, {\n                  size: cacheEntry.sizeOnlySource.size()\n                });\n                return callback();\n              }\n            }\n\n            // TODO webpack 5: if info.immutable check if file already exists in output\n            // skip emitting if it's already there\n\n            // get the binary (Buffer) content from the Source\n            /** @type {Buffer} */\n            let content;\n            if (typeof source.buffer === \"function\") {\n              content = source.buffer();\n            } else {\n              const bufferOrString = source.source();\n              if (Buffer.isBuffer(bufferOrString)) {\n                content = bufferOrString;\n              } else {\n                content = Buffer.from(bufferOrString, \"utf8\");\n              }\n            }\n\n            // Create a replacement resource which only allows to ask for size\n            // This allows to GC all memory allocated by the Source\n            // (expect when the Source is stored in any other cache)\n            cacheEntry.sizeOnlySource = new SizeOnlySource(content.length);\n            compilation.updateAsset(file, cacheEntry.sizeOnlySource, {\n              size: content.length\n            });\n\n            // Write the file to output file system\n            this.outputFileSystem.writeFile(targetPath, content, err => {\n              if (err) return callback(err);\n\n              // information marker that the asset has been emitted\n              compilation.emittedAssets.add(file);\n\n              // cache the information that the Source has been written to that location\n              const newGeneration = targetFileGeneration === undefined ? 1 : targetFileGeneration + 1;\n              cacheEntry.writtenTo.set(targetPath, newGeneration);\n              this._assetEmittingWrittenFiles.set(targetPath, newGeneration);\n              this.hooks.assetEmitted.callAsync(file, content, callback);\n            });\n          } else {\n            if (source.existsAt === targetPath) {\n              source.emitted = false;\n              return callback();\n            }\n            let content = source.source();\n            if (!Buffer.isBuffer(content)) {\n              content = Buffer.from(content, \"utf8\");\n            }\n            source.existsAt = targetPath;\n            source.emitted = true;\n            this.outputFileSystem.writeFile(targetPath, content, err => {\n              if (err) return callback(err);\n              this.hooks.assetEmitted.callAsync(file, content, callback);\n            });\n          }\n        };\n        if (targetFile.match(/\\/|\\\\/)) {\n          const dir = path.dirname(targetFile);\n          this.outputFileSystem.mkdirp(this.outputFileSystem.join(outputPath, dir), writeOut);\n        } else {\n          writeOut();\n        }\n      }, err => {\n        if (err) return callback(err);\n        this.hooks.afterEmit.callAsync(compilation, err => {\n          if (err) return callback(err);\n          return callback();\n        });\n      });\n    };\n    this.hooks.emit.callAsync(compilation, err => {\n      if (err) return callback(err);\n      outputPath = compilation.getPath(this.outputPath);\n      this.outputFileSystem.mkdirp(outputPath, emitFiles);\n    });\n  }\n  emitRecords(callback) {\n    if (!this.recordsOutputPath) return callback();\n    const idx1 = this.recordsOutputPath.lastIndexOf(\"/\");\n    const idx2 = this.recordsOutputPath.lastIndexOf(\"\\\\\");\n    let recordsOutputPathDirectory = null;\n    if (idx1 > idx2) {\n      recordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx1);\n    } else if (idx1 < idx2) {\n      recordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx2);\n    }\n    const writeFile = () => {\n      this.outputFileSystem.writeFile(this.recordsOutputPath, JSON.stringify(this.records, undefined, 2), callback);\n    };\n    if (!recordsOutputPathDirectory) {\n      return writeFile();\n    }\n    this.outputFileSystem.mkdirp(recordsOutputPathDirectory, err => {\n      if (err) return callback(err);\n      writeFile();\n    });\n  }\n  readRecords(callback) {\n    if (!this.recordsInputPath) {\n      this.records = {};\n      return callback();\n    }\n    this.inputFileSystem.stat(this.recordsInputPath, err => {\n      // It doesn't exist\n      // We can ignore this.\n      if (err) return callback();\n      this.inputFileSystem.readFile(this.recordsInputPath, (err, content) => {\n        if (err) return callback(err);\n        try {\n          this.records = parseJson(content.toString(\"utf-8\"));\n        } catch (e) {\n          e.message = \"Cannot parse records: \" + e.message;\n          return callback(e);\n        }\n        return callback();\n      });\n    });\n  }\n  createChildCompiler(compilation, compilerName, compilerIndex, outputOptions, plugins) {\n    const childCompiler = new Compiler(this.context);\n    if (Array.isArray(plugins)) {\n      for (const plugin of plugins) {\n        plugin.apply(childCompiler);\n      }\n    }\n    for (const name in this.hooks) {\n      if (![\"make\", \"compile\", \"emit\", \"afterEmit\", \"invalid\", \"done\", \"thisCompilation\"].includes(name)) {\n        if (childCompiler.hooks[name]) {\n          childCompiler.hooks[name].taps = this.hooks[name].taps.slice();\n        }\n      }\n    }\n    childCompiler.name = compilerName;\n    childCompiler.outputPath = this.outputPath;\n    childCompiler.inputFileSystem = this.inputFileSystem;\n    childCompiler.outputFileSystem = null;\n    childCompiler.resolverFactory = this.resolverFactory;\n    childCompiler.fileTimestamps = this.fileTimestamps;\n    childCompiler.contextTimestamps = this.contextTimestamps;\n    const relativeCompilerName = makePathsRelative(this.context, compilerName);\n    if (!this.records[relativeCompilerName]) {\n      this.records[relativeCompilerName] = [];\n    }\n    if (this.records[relativeCompilerName][compilerIndex]) {\n      childCompiler.records = this.records[relativeCompilerName][compilerIndex];\n    } else {\n      this.records[relativeCompilerName].push(childCompiler.records = {});\n    }\n    childCompiler.options = Object.create(this.options);\n    childCompiler.options.output = Object.create(childCompiler.options.output);\n    for (const name in outputOptions) {\n      childCompiler.options.output[name] = outputOptions[name];\n    }\n    childCompiler.parentCompilation = compilation;\n    compilation.hooks.childCompiler.call(childCompiler, compilerName, compilerIndex);\n    return childCompiler;\n  }\n  isChild() {\n    return !!this.parentCompilation;\n  }\n  createCompilation() {\n    return new Compilation(this);\n  }\n  newCompilation(params) {\n    const compilation = this.createCompilation();\n    compilation.fileTimestamps = this.fileTimestamps;\n    compilation.contextTimestamps = this.contextTimestamps;\n    compilation.name = this.name;\n    compilation.records = this.records;\n    compilation.compilationDependencies = params.compilationDependencies;\n    this.hooks.thisCompilation.call(compilation, params);\n    this.hooks.compilation.call(compilation, params);\n    return compilation;\n  }\n  createNormalModuleFactory() {\n    const normalModuleFactory = new NormalModuleFactory(this.options.context, this.resolverFactory, this.options.module || {});\n    this.hooks.normalModuleFactory.call(normalModuleFactory);\n    return normalModuleFactory;\n  }\n  createContextModuleFactory() {\n    const contextModuleFactory = new ContextModuleFactory(this.resolverFactory);\n    this.hooks.contextModuleFactory.call(contextModuleFactory);\n    return contextModuleFactory;\n  }\n  newCompilationParams() {\n    const params = {\n      normalModuleFactory: this.createNormalModuleFactory(),\n      contextModuleFactory: this.createContextModuleFactory(),\n      compilationDependencies: new Set()\n    };\n    return params;\n  }\n  compile(callback) {\n    const params = this.newCompilationParams();\n    this.hooks.beforeCompile.callAsync(params, err => {\n      if (err) return callback(err);\n      this.hooks.compile.call(params);\n      const compilation = this.newCompilation(params);\n      this.hooks.make.callAsync(compilation, err => {\n        if (err) return callback(err);\n        compilation.finish(err => {\n          if (err) return callback(err);\n          compilation.seal(err => {\n            if (err) return callback(err);\n            this.hooks.afterCompile.callAsync(compilation, err => {\n              if (err) return callback(err);\n              return callback(null, compilation);\n            });\n          });\n        });\n      });\n    });\n  }\n}\nmodule.exports = Compiler;\nclass SizeOnlySource extends Source {\n  constructor(size) {\n    super();\n    this._size = size;\n  }\n  _error() {\n    return new Error(\"Content and Map of this Source is no longer available (only size() is supported)\");\n  }\n  size() {\n    return this._size;\n  }\n\n  /**\n   * @param {any} options options\n   * @returns {string} the source\n   */\n  source(options) {\n    throw this._error();\n  }\n  node() {\n    throw this._error();\n  }\n  listMap() {\n    throw this._error();\n  }\n  map() {\n    throw this._error();\n  }\n  listNode() {\n    throw this._error();\n  }\n  updateHash() {\n    throw this._error();\n  }\n}","map":{"version":3,"names":["parseJson","require","asyncLib","path","Source","util","Tapable","SyncHook","SyncBailHook","AsyncParallelHook","AsyncSeriesHook","Compilation","Stats","Watching","NormalModuleFactory","ContextModuleFactory","ResolverFactory","RequestShortener","makePathsRelative","ConcurrentCompilationError","Logger","Compiler","constructor","context","hooks","shouldEmit","done","additionalPass","beforeRun","run","emit","assetEmitted","afterEmit","thisCompilation","compilation","normalModuleFactory","contextModuleFactory","beforeCompile","compile","make","afterCompile","watchRun","failed","invalid","watchClose","infrastructureLog","environment","afterEnvironment","afterPlugins","afterResolvers","entryOption","infrastructurelog","_pluginCompat","tap","options","name","async","undefined","parentCompilation","outputPath","outputFileSystem","inputFileSystem","recordsInputPath","recordsOutputPath","records","removedFiles","Set","fileTimestamps","Map","contextTimestamps","resolverFactory","infrastructureLogger","resolvers","normal","plugins","deprecate","hook","fn","plugin","resolver","apply","args","loader","requestShortener","running","watchMode","_assetEmittingSourceCache","WeakMap","_assetEmittingWrittenFiles","getInfrastructureLogger","TypeError","type","call","watch","watchOptions","handler","callback","finalCallback","err","stats","startTime","Date","now","onCompiled","endTime","callAsync","emitAssets","needAdditionalPass","emitRecords","readRecords","runAsChild","children","push","source","info","getAssets","emitAsset","entries","Array","from","entrypoints","values","ep","chunks","reduce","array","concat","purgeInputFileSystem","purge","emitFiles","forEachLimit","file","targetFile","queryStringIdx","indexOf","substr","writeOut","targetPath","join","output","futureEmitAssets","targetFileGeneration","get","cacheEntry","sizeOnlySource","writtenTo","set","writtenGeneration","updateAsset","size","content","buffer","bufferOrString","Buffer","isBuffer","SizeOnlySource","length","writeFile","emittedAssets","add","newGeneration","existsAt","emitted","match","dir","dirname","mkdirp","getPath","idx1","lastIndexOf","idx2","recordsOutputPathDirectory","JSON","stringify","stat","readFile","toString","e","message","createChildCompiler","compilerName","compilerIndex","outputOptions","childCompiler","isArray","includes","taps","slice","relativeCompilerName","Object","create","isChild","createCompilation","newCompilation","params","compilationDependencies","createNormalModuleFactory","module","createContextModuleFactory","newCompilationParams","finish","seal","exports","_size","_error","Error","node","listMap","map","listNode","updateHash"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/Compiler.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst asyncLib = require(\"neo-async\");\nconst path = require(\"path\");\nconst { Source } = require(\"webpack-sources\");\nconst util = require(\"util\");\nconst {\n\tTapable,\n\tSyncHook,\n\tSyncBailHook,\n\tAsyncParallelHook,\n\tAsyncSeriesHook\n} = require(\"tapable\");\n\nconst Compilation = require(\"./Compilation\");\nconst Stats = require(\"./Stats\");\nconst Watching = require(\"./Watching\");\nconst NormalModuleFactory = require(\"./NormalModuleFactory\");\nconst ContextModuleFactory = require(\"./ContextModuleFactory\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst { makePathsRelative } = require(\"./util/identifier\");\nconst ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\nconst { Logger } = require(\"./logging/Logger\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Entry} Entry */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n\n/**\n * @typedef {Object} CompilationParams\n * @property {NormalModuleFactory} normalModuleFactory\n * @property {ContextModuleFactory} contextModuleFactory\n * @property {Set<string>} compilationDependencies\n */\n\nclass Compiler extends Tapable {\n\tconstructor(context) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncBailHook<Compilation>} */\n\t\t\tshouldEmit: new SyncBailHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<Stats>} */\n\t\t\tdone: new AsyncSeriesHook([\"stats\"]),\n\t\t\t/** @type {AsyncSeriesHook<>} */\n\t\t\tadditionalPass: new AsyncSeriesHook([]),\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\tbeforeRun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\trun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\temit: new AsyncSeriesHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<string, Buffer>} */\n\t\t\tassetEmitted: new AsyncSeriesHook([\"file\", \"content\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\tafterEmit: new AsyncSeriesHook([\"compilation\"]),\n\n\t\t\t/** @type {SyncHook<Compilation, CompilationParams>} */\n\t\t\tthisCompilation: new SyncHook([\"compilation\", \"params\"]),\n\t\t\t/** @type {SyncHook<Compilation, CompilationParams>} */\n\t\t\tcompilation: new SyncHook([\"compilation\", \"params\"]),\n\t\t\t/** @type {SyncHook<NormalModuleFactory>} */\n\t\t\tnormalModuleFactory: new SyncHook([\"normalModuleFactory\"]),\n\t\t\t/** @type {SyncHook<ContextModuleFactory>}  */\n\t\t\tcontextModuleFactory: new SyncHook([\"contextModulefactory\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<CompilationParams>} */\n\t\t\tbeforeCompile: new AsyncSeriesHook([\"params\"]),\n\t\t\t/** @type {SyncHook<CompilationParams>} */\n\t\t\tcompile: new SyncHook([\"params\"]),\n\t\t\t/** @type {AsyncParallelHook<Compilation>} */\n\t\t\tmake: new AsyncParallelHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\tafterCompile: new AsyncSeriesHook([\"compilation\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\twatchRun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {SyncHook<Error>} */\n\t\t\tfailed: new SyncHook([\"error\"]),\n\t\t\t/** @type {SyncHook<string, string>} */\n\t\t\tinvalid: new SyncHook([\"filename\", \"changeTime\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\twatchClose: new SyncHook([]),\n\n\t\t\t/** @type {SyncBailHook<string, string, any[]>} */\n\t\t\tinfrastructureLog: new SyncBailHook([\"origin\", \"type\", \"args\"]),\n\n\t\t\t// TODO the following hooks are weirdly located here\n\t\t\t// TODO move them for webpack 5\n\t\t\t/** @type {SyncHook} */\n\t\t\tenvironment: new SyncHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tafterEnvironment: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Compiler>} */\n\t\t\tafterPlugins: new SyncHook([\"compiler\"]),\n\t\t\t/** @type {SyncHook<Compiler>} */\n\t\t\tafterResolvers: new SyncHook([\"compiler\"]),\n\t\t\t/** @type {SyncBailHook<string, Entry>} */\n\t\t\tentryOption: new SyncBailHook([\"context\", \"entry\"])\n\t\t};\n\t\t// TODO webpack 5 remove this\n\t\tthis.hooks.infrastructurelog = this.hooks.infrastructureLog;\n\n\t\tthis._pluginCompat.tap(\"Compiler\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"additional-pass\":\n\t\t\t\tcase \"before-run\":\n\t\t\t\tcase \"run\":\n\t\t\t\tcase \"emit\":\n\t\t\t\tcase \"after-emit\":\n\t\t\t\tcase \"before-compile\":\n\t\t\t\tcase \"make\":\n\t\t\t\tcase \"after-compile\":\n\t\t\t\tcase \"watch-run\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\t/** @type {Compilation=} */\n\t\tthis.parentCompilation = undefined;\n\t\t/** @type {string} */\n\t\tthis.outputPath = \"\";\n\n\t\tthis.outputFileSystem = null;\n\t\tthis.inputFileSystem = null;\n\n\t\t/** @type {string|null} */\n\t\tthis.recordsInputPath = null;\n\t\t/** @type {string|null} */\n\t\tthis.recordsOutputPath = null;\n\t\tthis.records = {};\n\t\tthis.removedFiles = new Set();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.fileTimestamps = new Map();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.contextTimestamps = new Map();\n\t\t/** @type {ResolverFactory} */\n\t\tthis.resolverFactory = new ResolverFactory();\n\n\t\tthis.infrastructureLogger = undefined;\n\n\t\t// TODO remove in webpack 5\n\t\tthis.resolvers = {\n\t\t\tnormal: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver normal\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver normal\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t},\n\t\t\tloader: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver loader\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver loader\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t},\n\t\t\tcontext: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver context\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver context\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t}\n\t\t};\n\n\t\t/** @type {WebpackOptions} */\n\t\tthis.options = /** @type {WebpackOptions} */ ({});\n\n\t\tthis.context = context;\n\n\t\tthis.requestShortener = new RequestShortener(context);\n\n\t\t/** @type {boolean} */\n\t\tthis.running = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.watchMode = false;\n\n\t\t/** @private @type {WeakMap<Source, { sizeOnlySource: SizeOnlySource, writtenTo: Map<string, number> }>} */\n\t\tthis._assetEmittingSourceCache = new WeakMap();\n\t\t/** @private @type {Map<string, number>} */\n\t\tthis._assetEmittingWrittenFiles = new Map();\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetInfrastructureLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"Compiler.getInfrastructureLogger(name) called without a name\"\n\t\t\t);\n\t\t}\n\t\treturn new Logger((type, args) => {\n\t\t\tif (typeof name === \"function\") {\n\t\t\t\tname = name();\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\"Compiler.getInfrastructureLogger(name) called with a function not returning a name\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.hooks.infrastructureLog.call(name, type, args) === undefined) {\n\t\t\t\tif (this.infrastructureLogger !== undefined) {\n\t\t\t\t\tthis.infrastructureLogger(name, type, args);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twatch(watchOptions, handler) {\n\t\tif (this.running) return handler(new ConcurrentCompilationError());\n\n\t\tthis.running = true;\n\t\tthis.watchMode = true;\n\t\tthis.fileTimestamps = new Map();\n\t\tthis.contextTimestamps = new Map();\n\t\tthis.removedFiles = new Set();\n\t\treturn new Watching(this, watchOptions, handler);\n\t}\n\n\trun(callback) {\n\t\tif (this.running) return callback(new ConcurrentCompilationError());\n\n\t\tconst finalCallback = (err, stats) => {\n\t\t\tthis.running = false;\n\n\t\t\tif (err) {\n\t\t\t\tthis.hooks.failed.call(err);\n\t\t\t}\n\n\t\t\tif (callback !== undefined) return callback(err, stats);\n\t\t};\n\n\t\tconst startTime = Date.now();\n\n\t\tthis.running = true;\n\n\t\tconst onCompiled = (err, compilation) => {\n\t\t\tif (err) return finalCallback(err);\n\n\t\t\tif (this.hooks.shouldEmit.call(compilation) === false) {\n\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\tstats.startTime = startTime;\n\t\t\t\tstats.endTime = Date.now();\n\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\treturn finalCallback(null, stats);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitAssets(compilation, err => {\n\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\tif (compilation.hooks.needAdditionalPass.call()) {\n\t\t\t\t\tcompilation.needAdditionalPass = true;\n\n\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\tstats.startTime = startTime;\n\t\t\t\t\tstats.endTime = Date.now();\n\t\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\t\tthis.hooks.additionalPass.callAsync(err => {\n\t\t\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\t\t\tthis.compile(onCompiled);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.emitRecords(err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\tstats.startTime = startTime;\n\t\t\t\t\tstats.endTime = Date.now();\n\t\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\t\treturn finalCallback(null, stats);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tthis.hooks.beforeRun.callAsync(this, err => {\n\t\t\tif (err) return finalCallback(err);\n\n\t\t\tthis.hooks.run.callAsync(this, err => {\n\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\tthis.readRecords(err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\tthis.compile(onCompiled);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\trunAsChild(callback) {\n\t\tthis.compile((err, compilation) => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tthis.parentCompilation.children.push(compilation);\n\t\t\tfor (const { name, source, info } of compilation.getAssets()) {\n\t\t\t\tthis.parentCompilation.emitAsset(name, source, info);\n\t\t\t}\n\n\t\t\tconst entries = Array.from(\n\t\t\t\tcompilation.entrypoints.values(),\n\t\t\t\tep => ep.chunks\n\t\t\t).reduce((array, chunks) => {\n\t\t\t\treturn array.concat(chunks);\n\t\t\t}, []);\n\n\t\t\treturn callback(null, entries, compilation);\n\t\t});\n\t}\n\n\tpurgeInputFileSystem() {\n\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\tthis.inputFileSystem.purge();\n\t\t}\n\t}\n\n\temitAssets(compilation, callback) {\n\t\tlet outputPath;\n\t\tconst emitFiles = err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tasyncLib.forEachLimit(\n\t\t\t\tcompilation.getAssets(),\n\t\t\t\t15,\n\t\t\t\t({ name: file, source }, callback) => {\n\t\t\t\t\tlet targetFile = file;\n\t\t\t\t\tconst queryStringIdx = targetFile.indexOf(\"?\");\n\t\t\t\t\tif (queryStringIdx >= 0) {\n\t\t\t\t\t\ttargetFile = targetFile.substr(0, queryStringIdx);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst writeOut = err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tconst targetPath = this.outputFileSystem.join(\n\t\t\t\t\t\t\toutputPath,\n\t\t\t\t\t\t\ttargetFile\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// TODO webpack 5 remove futureEmitAssets option and make it on by default\n\t\t\t\t\t\tif (this.options.output.futureEmitAssets) {\n\t\t\t\t\t\t\t// check if the target file has already been written by this Compiler\n\t\t\t\t\t\t\tconst targetFileGeneration = this._assetEmittingWrittenFiles.get(\n\t\t\t\t\t\t\t\ttargetPath\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// create an cache entry for this Source if not already existing\n\t\t\t\t\t\t\tlet cacheEntry = this._assetEmittingSourceCache.get(source);\n\t\t\t\t\t\t\tif (cacheEntry === undefined) {\n\t\t\t\t\t\t\t\tcacheEntry = {\n\t\t\t\t\t\t\t\t\tsizeOnlySource: undefined,\n\t\t\t\t\t\t\t\t\twrittenTo: new Map()\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._assetEmittingSourceCache.set(source, cacheEntry);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if the target file has already been written\n\t\t\t\t\t\t\tif (targetFileGeneration !== undefined) {\n\t\t\t\t\t\t\t\t// check if the Source has been written to this target file\n\t\t\t\t\t\t\t\tconst writtenGeneration = cacheEntry.writtenTo.get(targetPath);\n\t\t\t\t\t\t\t\tif (writtenGeneration === targetFileGeneration) {\n\t\t\t\t\t\t\t\t\t// if yes, we skip writing the file\n\t\t\t\t\t\t\t\t\t// as it's already there\n\t\t\t\t\t\t\t\t\t// (we assume one doesn't remove files while the Compiler is running)\n\n\t\t\t\t\t\t\t\t\tcompilation.updateAsset(file, cacheEntry.sizeOnlySource, {\n\t\t\t\t\t\t\t\t\t\tsize: cacheEntry.sizeOnlySource.size()\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO webpack 5: if info.immutable check if file already exists in output\n\t\t\t\t\t\t\t// skip emitting if it's already there\n\n\t\t\t\t\t\t\t// get the binary (Buffer) content from the Source\n\t\t\t\t\t\t\t/** @type {Buffer} */\n\t\t\t\t\t\t\tlet content;\n\t\t\t\t\t\t\tif (typeof source.buffer === \"function\") {\n\t\t\t\t\t\t\t\tcontent = source.buffer();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst bufferOrString = source.source();\n\t\t\t\t\t\t\t\tif (Buffer.isBuffer(bufferOrString)) {\n\t\t\t\t\t\t\t\t\tcontent = bufferOrString;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontent = Buffer.from(bufferOrString, \"utf8\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Create a replacement resource which only allows to ask for size\n\t\t\t\t\t\t\t// This allows to GC all memory allocated by the Source\n\t\t\t\t\t\t\t// (expect when the Source is stored in any other cache)\n\t\t\t\t\t\t\tcacheEntry.sizeOnlySource = new SizeOnlySource(content.length);\n\t\t\t\t\t\t\tcompilation.updateAsset(file, cacheEntry.sizeOnlySource, {\n\t\t\t\t\t\t\t\tsize: content.length\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Write the file to output file system\n\t\t\t\t\t\t\tthis.outputFileSystem.writeFile(targetPath, content, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t// information marker that the asset has been emitted\n\t\t\t\t\t\t\t\tcompilation.emittedAssets.add(file);\n\n\t\t\t\t\t\t\t\t// cache the information that the Source has been written to that location\n\t\t\t\t\t\t\t\tconst newGeneration =\n\t\t\t\t\t\t\t\t\ttargetFileGeneration === undefined\n\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t: targetFileGeneration + 1;\n\t\t\t\t\t\t\t\tcacheEntry.writtenTo.set(targetPath, newGeneration);\n\t\t\t\t\t\t\t\tthis._assetEmittingWrittenFiles.set(targetPath, newGeneration);\n\t\t\t\t\t\t\t\tthis.hooks.assetEmitted.callAsync(file, content, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (source.existsAt === targetPath) {\n\t\t\t\t\t\t\t\tsource.emitted = false;\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet content = source.source();\n\n\t\t\t\t\t\t\tif (!Buffer.isBuffer(content)) {\n\t\t\t\t\t\t\t\tcontent = Buffer.from(content, \"utf8\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsource.existsAt = targetPath;\n\t\t\t\t\t\t\tsource.emitted = true;\n\t\t\t\t\t\t\tthis.outputFileSystem.writeFile(targetPath, content, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tthis.hooks.assetEmitted.callAsync(file, content, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (targetFile.match(/\\/|\\\\/)) {\n\t\t\t\t\t\tconst dir = path.dirname(targetFile);\n\t\t\t\t\t\tthis.outputFileSystem.mkdirp(\n\t\t\t\t\t\t\tthis.outputFileSystem.join(outputPath, dir),\n\t\t\t\t\t\t\twriteOut\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteOut();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tthis.hooks.afterEmit.callAsync(compilation, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tthis.hooks.emit.callAsync(compilation, err => {\n\t\t\tif (err) return callback(err);\n\t\t\toutputPath = compilation.getPath(this.outputPath);\n\t\t\tthis.outputFileSystem.mkdirp(outputPath, emitFiles);\n\t\t});\n\t}\n\n\temitRecords(callback) {\n\t\tif (!this.recordsOutputPath) return callback();\n\t\tconst idx1 = this.recordsOutputPath.lastIndexOf(\"/\");\n\t\tconst idx2 = this.recordsOutputPath.lastIndexOf(\"\\\\\");\n\t\tlet recordsOutputPathDirectory = null;\n\t\tif (idx1 > idx2) {\n\t\t\trecordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx1);\n\t\t} else if (idx1 < idx2) {\n\t\t\trecordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx2);\n\t\t}\n\n\t\tconst writeFile = () => {\n\t\t\tthis.outputFileSystem.writeFile(\n\t\t\t\tthis.recordsOutputPath,\n\t\t\t\tJSON.stringify(this.records, undefined, 2),\n\t\t\t\tcallback\n\t\t\t);\n\t\t};\n\n\t\tif (!recordsOutputPathDirectory) {\n\t\t\treturn writeFile();\n\t\t}\n\t\tthis.outputFileSystem.mkdirp(recordsOutputPathDirectory, err => {\n\t\t\tif (err) return callback(err);\n\t\t\twriteFile();\n\t\t});\n\t}\n\n\treadRecords(callback) {\n\t\tif (!this.recordsInputPath) {\n\t\t\tthis.records = {};\n\t\t\treturn callback();\n\t\t}\n\t\tthis.inputFileSystem.stat(this.recordsInputPath, err => {\n\t\t\t// It doesn't exist\n\t\t\t// We can ignore this.\n\t\t\tif (err) return callback();\n\n\t\t\tthis.inputFileSystem.readFile(this.recordsInputPath, (err, content) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.records = parseJson(content.toString(\"utf-8\"));\n\t\t\t\t} catch (e) {\n\t\t\t\t\te.message = \"Cannot parse records: \" + e.message;\n\t\t\t\t\treturn callback(e);\n\t\t\t\t}\n\n\t\t\t\treturn callback();\n\t\t\t});\n\t\t});\n\t}\n\n\tcreateChildCompiler(\n\t\tcompilation,\n\t\tcompilerName,\n\t\tcompilerIndex,\n\t\toutputOptions,\n\t\tplugins\n\t) {\n\t\tconst childCompiler = new Compiler(this.context);\n\t\tif (Array.isArray(plugins)) {\n\t\t\tfor (const plugin of plugins) {\n\t\t\t\tplugin.apply(childCompiler);\n\t\t\t}\n\t\t}\n\t\tfor (const name in this.hooks) {\n\t\t\tif (\n\t\t\t\t![\n\t\t\t\t\t\"make\",\n\t\t\t\t\t\"compile\",\n\t\t\t\t\t\"emit\",\n\t\t\t\t\t\"afterEmit\",\n\t\t\t\t\t\"invalid\",\n\t\t\t\t\t\"done\",\n\t\t\t\t\t\"thisCompilation\"\n\t\t\t\t].includes(name)\n\t\t\t) {\n\t\t\t\tif (childCompiler.hooks[name]) {\n\t\t\t\t\tchildCompiler.hooks[name].taps = this.hooks[name].taps.slice();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchildCompiler.name = compilerName;\n\t\tchildCompiler.outputPath = this.outputPath;\n\t\tchildCompiler.inputFileSystem = this.inputFileSystem;\n\t\tchildCompiler.outputFileSystem = null;\n\t\tchildCompiler.resolverFactory = this.resolverFactory;\n\t\tchildCompiler.fileTimestamps = this.fileTimestamps;\n\t\tchildCompiler.contextTimestamps = this.contextTimestamps;\n\n\t\tconst relativeCompilerName = makePathsRelative(this.context, compilerName);\n\t\tif (!this.records[relativeCompilerName]) {\n\t\t\tthis.records[relativeCompilerName] = [];\n\t\t}\n\t\tif (this.records[relativeCompilerName][compilerIndex]) {\n\t\t\tchildCompiler.records = this.records[relativeCompilerName][compilerIndex];\n\t\t} else {\n\t\t\tthis.records[relativeCompilerName].push((childCompiler.records = {}));\n\t\t}\n\n\t\tchildCompiler.options = Object.create(this.options);\n\t\tchildCompiler.options.output = Object.create(childCompiler.options.output);\n\t\tfor (const name in outputOptions) {\n\t\t\tchildCompiler.options.output[name] = outputOptions[name];\n\t\t}\n\t\tchildCompiler.parentCompilation = compilation;\n\n\t\tcompilation.hooks.childCompiler.call(\n\t\t\tchildCompiler,\n\t\t\tcompilerName,\n\t\t\tcompilerIndex\n\t\t);\n\n\t\treturn childCompiler;\n\t}\n\n\tisChild() {\n\t\treturn !!this.parentCompilation;\n\t}\n\n\tcreateCompilation() {\n\t\treturn new Compilation(this);\n\t}\n\n\tnewCompilation(params) {\n\t\tconst compilation = this.createCompilation();\n\t\tcompilation.fileTimestamps = this.fileTimestamps;\n\t\tcompilation.contextTimestamps = this.contextTimestamps;\n\t\tcompilation.name = this.name;\n\t\tcompilation.records = this.records;\n\t\tcompilation.compilationDependencies = params.compilationDependencies;\n\t\tthis.hooks.thisCompilation.call(compilation, params);\n\t\tthis.hooks.compilation.call(compilation, params);\n\t\treturn compilation;\n\t}\n\n\tcreateNormalModuleFactory() {\n\t\tconst normalModuleFactory = new NormalModuleFactory(\n\t\t\tthis.options.context,\n\t\t\tthis.resolverFactory,\n\t\t\tthis.options.module || {}\n\t\t);\n\t\tthis.hooks.normalModuleFactory.call(normalModuleFactory);\n\t\treturn normalModuleFactory;\n\t}\n\n\tcreateContextModuleFactory() {\n\t\tconst contextModuleFactory = new ContextModuleFactory(this.resolverFactory);\n\t\tthis.hooks.contextModuleFactory.call(contextModuleFactory);\n\t\treturn contextModuleFactory;\n\t}\n\n\tnewCompilationParams() {\n\t\tconst params = {\n\t\t\tnormalModuleFactory: this.createNormalModuleFactory(),\n\t\t\tcontextModuleFactory: this.createContextModuleFactory(),\n\t\t\tcompilationDependencies: new Set()\n\t\t};\n\t\treturn params;\n\t}\n\n\tcompile(callback) {\n\t\tconst params = this.newCompilationParams();\n\t\tthis.hooks.beforeCompile.callAsync(params, err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tthis.hooks.compile.call(params);\n\n\t\t\tconst compilation = this.newCompilation(params);\n\n\t\t\tthis.hooks.make.callAsync(compilation, err => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\tcompilation.finish(err => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tcompilation.seal(err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tthis.hooks.afterCompile.callAsync(compilation, err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\treturn callback(null, compilation);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = Compiler;\n\nclass SizeOnlySource extends Source {\n\tconstructor(size) {\n\t\tsuper();\n\t\tthis._size = size;\n\t}\n\n\t_error() {\n\t\treturn new Error(\n\t\t\t\"Content and Map of this Source is no longer available (only size() is supported)\"\n\t\t);\n\t}\n\n\tsize() {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * @param {any} options options\n\t * @returns {string} the source\n\t */\n\tsource(options) {\n\t\tthrow this._error();\n\t}\n\n\tnode() {\n\t\tthrow this._error();\n\t}\n\n\tlistMap() {\n\t\tthrow this._error();\n\t}\n\n\tmap() {\n\t\tthrow this._error();\n\t}\n\n\tlistNode() {\n\t\tthrow this._error();\n\t}\n\n\tupdateHash() {\n\t\tthrow this._error();\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACrD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEG;AAAO,CAAC,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC7C,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EACLK,OAAO;EACPC,QAAQ;EACRC,YAAY;EACZC,iBAAiB;EACjBC;AACD,CAAC,GAAGT,OAAO,CAAC,SAAS,CAAC;AAEtB,MAAMU,WAAW,GAAGV,OAAO,CAAC,eAAe,CAAC;AAC5C,MAAMW,KAAK,GAAGX,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMY,QAAQ,GAAGZ,OAAO,CAAC,YAAY,CAAC;AACtC,MAAMa,mBAAmB,GAAGb,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMc,oBAAoB,GAAGd,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAMe,eAAe,GAAGf,OAAO,CAAC,mBAAmB,CAAC;AAEpD,MAAMgB,gBAAgB,GAAGhB,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAM;EAAEiB;AAAkB,CAAC,GAAGjB,OAAO,CAAC,mBAAmB,CAAC;AAC1D,MAAMkB,0BAA0B,GAAGlB,OAAO,CAAC,8BAA8B,CAAC;AAC1E,MAAM;EAAEmB;AAAO,CAAC,GAAGnB,OAAO,CAAC,kBAAkB,CAAC;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMoB,QAAQ,SAASf,OAAO,CAAC;EAC9BgB,WAAWA,CAACC,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACZ;MACAC,UAAU,EAAE,IAAIjB,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC;MAC7C;MACAkB,IAAI,EAAE,IAAIhB,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC;MACpC;MACAiB,cAAc,EAAE,IAAIjB,eAAe,CAAC,EAAE,CAAC;MACvC;MACAkB,SAAS,EAAE,IAAIlB,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC;MAC5C;MACAmB,GAAG,EAAE,IAAInB,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC;MACtC;MACAoB,IAAI,EAAE,IAAIpB,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC;MAC1C;MACAqB,YAAY,EAAE,IAAIrB,eAAe,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;MACtD;MACAsB,SAAS,EAAE,IAAItB,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC;MAE/C;MACAuB,eAAe,EAAE,IAAI1B,QAAQ,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;MACxD;MACA2B,WAAW,EAAE,IAAI3B,QAAQ,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;MACpD;MACA4B,mBAAmB,EAAE,IAAI5B,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;MAC1D;MACA6B,oBAAoB,EAAE,IAAI7B,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;MAE5D;MACA8B,aAAa,EAAE,IAAI3B,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC9C;MACA4B,OAAO,EAAE,IAAI/B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACjC;MACAgC,IAAI,EAAE,IAAI9B,iBAAiB,CAAC,CAAC,aAAa,CAAC,CAAC;MAC5C;MACA+B,YAAY,EAAE,IAAI9B,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC;MAElD;MACA+B,QAAQ,EAAE,IAAI/B,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC;MAC3C;MACAgC,MAAM,EAAE,IAAInC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B;MACAoC,OAAO,EAAE,IAAIpC,QAAQ,CAAC,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;MACjD;MACAqC,UAAU,EAAE,IAAIrC,QAAQ,CAAC,EAAE,CAAC;MAE5B;MACAsC,iBAAiB,EAAE,IAAIrC,YAAY,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;MAE/D;MACA;MACA;MACAsC,WAAW,EAAE,IAAIvC,QAAQ,CAAC,EAAE,CAAC;MAC7B;MACAwC,gBAAgB,EAAE,IAAIxC,QAAQ,CAAC,EAAE,CAAC;MAClC;MACAyC,YAAY,EAAE,IAAIzC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACxC;MACA0C,cAAc,EAAE,IAAI1C,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MAC1C;MACA2C,WAAW,EAAE,IAAI1C,YAAY,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC;IACnD,CAAC;IACD;IACA,IAAI,CAACgB,KAAK,CAAC2B,iBAAiB,GAAG,IAAI,CAAC3B,KAAK,CAACqB,iBAAiB;IAE3D,IAAI,CAACO,aAAa,CAACC,GAAG,CAAC,UAAU,EAAEC,OAAO,IAAI;MAC7C,QAAQA,OAAO,CAACC,IAAI;QACnB,KAAK,iBAAiB;QACtB,KAAK,YAAY;QACjB,KAAK,KAAK;QACV,KAAK,MAAM;QACX,KAAK,YAAY;QACjB,KAAK,gBAAgB;QACrB,KAAK,MAAM;QACX,KAAK,eAAe;QACpB,KAAK,WAAW;UACfD,OAAO,CAACE,KAAK,GAAG,IAAI;UACpB;MACF;IACD,CAAC,CAAC;;IAEF;IACA,IAAI,CAACD,IAAI,GAAGE,SAAS;IACrB;IACA,IAAI,CAACC,iBAAiB,GAAGD,SAAS;IAClC;IACA,IAAI,CAACE,UAAU,GAAG,EAAE;IAEpB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,eAAe,GAAG,IAAI;;IAE3B;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B;IACA,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B;IACA,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B;IACA,IAAI,CAACC,iBAAiB,GAAG,IAAID,GAAG,CAAC,CAAC;IAClC;IACA,IAAI,CAACE,eAAe,GAAG,IAAItD,eAAe,CAAC,CAAC;IAE5C,IAAI,CAACuD,oBAAoB,GAAGd,SAAS;;IAErC;IACA,IAAI,CAACe,SAAS,GAAG;MAChBC,MAAM,EAAE;QACPC,OAAO,EAAErE,IAAI,CAACsE,SAAS,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;UACrC,IAAI,CAACP,eAAe,CAACQ,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,IAAI;YAC1DA,QAAQ,CAACD,MAAM,CAACF,IAAI,EAAEC,EAAE,CAAC;UAC1B,CAAC,CAAC;QACH,CAAC,EAAE,2DAA2D,GAAG,iHAAiH,CAAC;QACnLG,KAAK,EAAE3E,IAAI,CAACsE,SAAS,CAAC,CAAC,GAAGM,IAAI,KAAK;UAClC,IAAI,CAACX,eAAe,CAACQ,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,IAAI;YAC1DA,QAAQ,CAACC,KAAK,CAAC,GAAGC,IAAI,CAAC;UACxB,CAAC,CAAC;QACH,CAAC,EAAE,2DAA2D,GAAG,gHAAgH;MAClL,CAAC;MACDC,MAAM,EAAE;QACPR,OAAO,EAAErE,IAAI,CAACsE,SAAS,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;UACrC,IAAI,CAACP,eAAe,CAACQ,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,IAAI;YAC1DA,QAAQ,CAACD,MAAM,CAACF,IAAI,EAAEC,EAAE,CAAC;UAC1B,CAAC,CAAC;QACH,CAAC,EAAE,2DAA2D,GAAG,iHAAiH,CAAC;QACnLG,KAAK,EAAE3E,IAAI,CAACsE,SAAS,CAAC,CAAC,GAAGM,IAAI,KAAK;UAClC,IAAI,CAACX,eAAe,CAACQ,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,IAAI;YAC1DA,QAAQ,CAACC,KAAK,CAAC,GAAGC,IAAI,CAAC;UACxB,CAAC,CAAC;QACH,CAAC,EAAE,2DAA2D,GAAG,gHAAgH;MAClL,CAAC;MACD1D,OAAO,EAAE;QACRmD,OAAO,EAAErE,IAAI,CAACsE,SAAS,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;UACrC,IAAI,CAACP,eAAe,CAACQ,MAAM,CAAC,kBAAkB,EAAEC,QAAQ,IAAI;YAC3DA,QAAQ,CAACD,MAAM,CAACF,IAAI,EAAEC,EAAE,CAAC;UAC1B,CAAC,CAAC;QACH,CAAC,EAAE,4DAA4D,GAAG,kHAAkH,CAAC;QACrLG,KAAK,EAAE3E,IAAI,CAACsE,SAAS,CAAC,CAAC,GAAGM,IAAI,KAAK;UAClC,IAAI,CAACX,eAAe,CAACQ,MAAM,CAAC,kBAAkB,EAAEC,QAAQ,IAAI;YAC3DA,QAAQ,CAACC,KAAK,CAAC,GAAGC,IAAI,CAAC;UACxB,CAAC,CAAC;QACH,CAAC,EAAE,4DAA4D,GAAG,iHAAiH;MACpL;IACD,CAAC;;IAED;IACA,IAAI,CAAC3B,OAAO,GAAG,6BAA+B,CAAC,CAAE;IAEjD,IAAI,CAAC/B,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAAC4D,gBAAgB,GAAG,IAAIlE,gBAAgB,CAACM,OAAO,CAAC;;IAErD;IACA,IAAI,CAAC6D,OAAO,GAAG,KAAK;;IAEpB;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;;IAEtB;IACA,IAAI,CAACC,yBAAyB,GAAG,IAAIC,OAAO,CAAC,CAAC;IAC9C;IACA,IAAI,CAACC,0BAA0B,GAAG,IAAIpB,GAAG,CAAC,CAAC;EAC5C;;EAEA;AACD;AACA;AACA;EACCqB,uBAAuBA,CAAClC,IAAI,EAAE;IAC7B,IAAI,CAACA,IAAI,EAAE;MACV,MAAM,IAAImC,SAAS,CAClB,8DACD,CAAC;IACF;IACA,OAAO,IAAItE,MAAM,CAAC,CAACuE,IAAI,EAAEV,IAAI,KAAK;MACjC,IAAI,OAAO1B,IAAI,KAAK,UAAU,EAAE;QAC/BA,IAAI,GAAGA,IAAI,CAAC,CAAC;QACb,IAAI,CAACA,IAAI,EAAE;UACV,MAAM,IAAImC,SAAS,CAClB,oFACD,CAAC;QACF;MACD;MACA,IAAI,IAAI,CAAClE,KAAK,CAACqB,iBAAiB,CAAC+C,IAAI,CAACrC,IAAI,EAAEoC,IAAI,EAAEV,IAAI,CAAC,KAAKxB,SAAS,EAAE;QACtE,IAAI,IAAI,CAACc,oBAAoB,KAAKd,SAAS,EAAE;UAC5C,IAAI,CAACc,oBAAoB,CAAChB,IAAI,EAAEoC,IAAI,EAAEV,IAAI,CAAC;QAC5C;MACD;IACD,CAAC,CAAC;EACH;EAEAY,KAAKA,CAACC,YAAY,EAAEC,OAAO,EAAE;IAC5B,IAAI,IAAI,CAACX,OAAO,EAAE,OAAOW,OAAO,CAAC,IAAI5E,0BAA0B,CAAC,CAAC,CAAC;IAElE,IAAI,CAACiE,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAAClB,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACC,iBAAiB,GAAG,IAAID,GAAG,CAAC,CAAC;IAClC,IAAI,CAACH,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,OAAO,IAAIrD,QAAQ,CAAC,IAAI,EAAEiF,YAAY,EAAEC,OAAO,CAAC;EACjD;EAEAlE,GAAGA,CAACmE,QAAQ,EAAE;IACb,IAAI,IAAI,CAACZ,OAAO,EAAE,OAAOY,QAAQ,CAAC,IAAI7E,0BAA0B,CAAC,CAAC,CAAC;IAEnE,MAAM8E,aAAa,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;MACrC,IAAI,CAACf,OAAO,GAAG,KAAK;MAEpB,IAAIc,GAAG,EAAE;QACR,IAAI,CAAC1E,KAAK,CAACkB,MAAM,CAACkD,IAAI,CAACM,GAAG,CAAC;MAC5B;MAEA,IAAIF,QAAQ,KAAKvC,SAAS,EAAE,OAAOuC,QAAQ,CAACE,GAAG,EAAEC,KAAK,CAAC;IACxD,CAAC;IAED,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAE5B,IAAI,CAAClB,OAAO,GAAG,IAAI;IAEnB,MAAMmB,UAAU,GAAGA,CAACL,GAAG,EAAEhE,WAAW,KAAK;MACxC,IAAIgE,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;MAElC,IAAI,IAAI,CAAC1E,KAAK,CAACC,UAAU,CAACmE,IAAI,CAAC1D,WAAW,CAAC,KAAK,KAAK,EAAE;QACtD,MAAMiE,KAAK,GAAG,IAAIvF,KAAK,CAACsB,WAAW,CAAC;QACpCiE,KAAK,CAACC,SAAS,GAAGA,SAAS;QAC3BD,KAAK,CAACK,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC9E,KAAK,CAACE,IAAI,CAAC+E,SAAS,CAACN,KAAK,EAAED,GAAG,IAAI;UACvC,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;UAClC,OAAOD,aAAa,CAAC,IAAI,EAAEE,KAAK,CAAC;QAClC,CAAC,CAAC;QACF;MACD;MAEA,IAAI,CAACO,UAAU,CAACxE,WAAW,EAAEgE,GAAG,IAAI;QACnC,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;QAElC,IAAIhE,WAAW,CAACV,KAAK,CAACmF,kBAAkB,CAACf,IAAI,CAAC,CAAC,EAAE;UAChD1D,WAAW,CAACyE,kBAAkB,GAAG,IAAI;UAErC,MAAMR,KAAK,GAAG,IAAIvF,KAAK,CAACsB,WAAW,CAAC;UACpCiE,KAAK,CAACC,SAAS,GAAGA,SAAS;UAC3BD,KAAK,CAACK,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;UAC1B,IAAI,CAAC9E,KAAK,CAACE,IAAI,CAAC+E,SAAS,CAACN,KAAK,EAAED,GAAG,IAAI;YACvC,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;YAElC,IAAI,CAAC1E,KAAK,CAACG,cAAc,CAAC8E,SAAS,CAACP,GAAG,IAAI;cAC1C,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;cAClC,IAAI,CAAC5D,OAAO,CAACiE,UAAU,CAAC;YACzB,CAAC,CAAC;UACH,CAAC,CAAC;UACF;QACD;QAEA,IAAI,CAACK,WAAW,CAACV,GAAG,IAAI;UACvB,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;UAElC,MAAMC,KAAK,GAAG,IAAIvF,KAAK,CAACsB,WAAW,CAAC;UACpCiE,KAAK,CAACC,SAAS,GAAGA,SAAS;UAC3BD,KAAK,CAACK,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;UAC1B,IAAI,CAAC9E,KAAK,CAACE,IAAI,CAAC+E,SAAS,CAACN,KAAK,EAAED,GAAG,IAAI;YACvC,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;YAClC,OAAOD,aAAa,CAAC,IAAI,EAAEE,KAAK,CAAC;UAClC,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC;IAED,IAAI,CAAC3E,KAAK,CAACI,SAAS,CAAC6E,SAAS,CAAC,IAAI,EAAEP,GAAG,IAAI;MAC3C,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;MAElC,IAAI,CAAC1E,KAAK,CAACK,GAAG,CAAC4E,SAAS,CAAC,IAAI,EAAEP,GAAG,IAAI;QACrC,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;QAElC,IAAI,CAACW,WAAW,CAACX,GAAG,IAAI;UACvB,IAAIA,GAAG,EAAE,OAAOD,aAAa,CAACC,GAAG,CAAC;UAElC,IAAI,CAAC5D,OAAO,CAACiE,UAAU,CAAC;QACzB,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EAEAO,UAAUA,CAACd,QAAQ,EAAE;IACpB,IAAI,CAAC1D,OAAO,CAAC,CAAC4D,GAAG,EAAEhE,WAAW,KAAK;MAClC,IAAIgE,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAE7B,IAAI,CAACxC,iBAAiB,CAACqD,QAAQ,CAACC,IAAI,CAAC9E,WAAW,CAAC;MACjD,KAAK,MAAM;QAAEqB,IAAI;QAAE0D,MAAM;QAAEC;MAAK,CAAC,IAAIhF,WAAW,CAACiF,SAAS,CAAC,CAAC,EAAE;QAC7D,IAAI,CAACzD,iBAAiB,CAAC0D,SAAS,CAAC7D,IAAI,EAAE0D,MAAM,EAAEC,IAAI,CAAC;MACrD;MAEA,MAAMG,OAAO,GAAGC,KAAK,CAACC,IAAI,CACzBrF,WAAW,CAACsF,WAAW,CAACC,MAAM,CAAC,CAAC,EAChCC,EAAE,IAAIA,EAAE,CAACC,MACV,CAAC,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEF,MAAM,KAAK;QAC3B,OAAOE,KAAK,CAACC,MAAM,CAACH,MAAM,CAAC;MAC5B,CAAC,EAAE,EAAE,CAAC;MAEN,OAAO3B,QAAQ,CAAC,IAAI,EAAEqB,OAAO,EAAEnF,WAAW,CAAC;IAC5C,CAAC,CAAC;EACH;EAEA6F,oBAAoBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAAClE,eAAe,IAAI,IAAI,CAACA,eAAe,CAACmE,KAAK,EAAE;MACvD,IAAI,CAACnE,eAAe,CAACmE,KAAK,CAAC,CAAC;IAC7B;EACD;EAEAtB,UAAUA,CAACxE,WAAW,EAAE8D,QAAQ,EAAE;IACjC,IAAIrC,UAAU;IACd,MAAMsE,SAAS,GAAG/B,GAAG,IAAI;MACxB,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAE7BhG,QAAQ,CAACgI,YAAY,CACpBhG,WAAW,CAACiF,SAAS,CAAC,CAAC,EACvB,EAAE,EACF,CAAC;QAAE5D,IAAI,EAAE4E,IAAI;QAAElB;MAAO,CAAC,EAAEjB,QAAQ,KAAK;QACrC,IAAIoC,UAAU,GAAGD,IAAI;QACrB,MAAME,cAAc,GAAGD,UAAU,CAACE,OAAO,CAAC,GAAG,CAAC;QAC9C,IAAID,cAAc,IAAI,CAAC,EAAE;UACxBD,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC,CAAC,EAAEF,cAAc,CAAC;QAClD;QAEA,MAAMG,QAAQ,GAAGtC,GAAG,IAAI;UACvB,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;UAC7B,MAAMuC,UAAU,GAAG,IAAI,CAAC7E,gBAAgB,CAAC8E,IAAI,CAC5C/E,UAAU,EACVyE,UACD,CAAC;UACD;UACA,IAAI,IAAI,CAAC9E,OAAO,CAACqF,MAAM,CAACC,gBAAgB,EAAE;YACzC;YACA,MAAMC,oBAAoB,GAAG,IAAI,CAACrD,0BAA0B,CAACsD,GAAG,CAC/DL,UACD,CAAC;;YAED;YACA,IAAIM,UAAU,GAAG,IAAI,CAACzD,yBAAyB,CAACwD,GAAG,CAAC7B,MAAM,CAAC;YAC3D,IAAI8B,UAAU,KAAKtF,SAAS,EAAE;cAC7BsF,UAAU,GAAG;gBACZC,cAAc,EAAEvF,SAAS;gBACzBwF,SAAS,EAAE,IAAI7E,GAAG,CAAC;cACpB,CAAC;cACD,IAAI,CAACkB,yBAAyB,CAAC4D,GAAG,CAACjC,MAAM,EAAE8B,UAAU,CAAC;YACvD;;YAEA;YACA,IAAIF,oBAAoB,KAAKpF,SAAS,EAAE;cACvC;cACA,MAAM0F,iBAAiB,GAAGJ,UAAU,CAACE,SAAS,CAACH,GAAG,CAACL,UAAU,CAAC;cAC9D,IAAIU,iBAAiB,KAAKN,oBAAoB,EAAE;gBAC/C;gBACA;gBACA;;gBAEA3G,WAAW,CAACkH,WAAW,CAACjB,IAAI,EAAEY,UAAU,CAACC,cAAc,EAAE;kBACxDK,IAAI,EAAEN,UAAU,CAACC,cAAc,CAACK,IAAI,CAAC;gBACtC,CAAC,CAAC;gBAEF,OAAOrD,QAAQ,CAAC,CAAC;cAClB;YACD;;YAEA;YACA;;YAEA;YACA;YACA,IAAIsD,OAAO;YACX,IAAI,OAAOrC,MAAM,CAACsC,MAAM,KAAK,UAAU,EAAE;cACxCD,OAAO,GAAGrC,MAAM,CAACsC,MAAM,CAAC,CAAC;YAC1B,CAAC,MAAM;cACN,MAAMC,cAAc,GAAGvC,MAAM,CAACA,MAAM,CAAC,CAAC;cACtC,IAAIwC,MAAM,CAACC,QAAQ,CAACF,cAAc,CAAC,EAAE;gBACpCF,OAAO,GAAGE,cAAc;cACzB,CAAC,MAAM;gBACNF,OAAO,GAAGG,MAAM,CAAClC,IAAI,CAACiC,cAAc,EAAE,MAAM,CAAC;cAC9C;YACD;;YAEA;YACA;YACA;YACAT,UAAU,CAACC,cAAc,GAAG,IAAIW,cAAc,CAACL,OAAO,CAACM,MAAM,CAAC;YAC9D1H,WAAW,CAACkH,WAAW,CAACjB,IAAI,EAAEY,UAAU,CAACC,cAAc,EAAE;cACxDK,IAAI,EAAEC,OAAO,CAACM;YACf,CAAC,CAAC;;YAEF;YACA,IAAI,CAAChG,gBAAgB,CAACiG,SAAS,CAACpB,UAAU,EAAEa,OAAO,EAAEpD,GAAG,IAAI;cAC3D,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;;cAE7B;cACAhE,WAAW,CAAC4H,aAAa,CAACC,GAAG,CAAC5B,IAAI,CAAC;;cAEnC;cACA,MAAM6B,aAAa,GAClBnB,oBAAoB,KAAKpF,SAAS,GAC/B,CAAC,GACDoF,oBAAoB,GAAG,CAAC;cAC5BE,UAAU,CAACE,SAAS,CAACC,GAAG,CAACT,UAAU,EAAEuB,aAAa,CAAC;cACnD,IAAI,CAACxE,0BAA0B,CAAC0D,GAAG,CAACT,UAAU,EAAEuB,aAAa,CAAC;cAC9D,IAAI,CAACxI,KAAK,CAACO,YAAY,CAAC0E,SAAS,CAAC0B,IAAI,EAAEmB,OAAO,EAAEtD,QAAQ,CAAC;YAC3D,CAAC,CAAC;UACH,CAAC,MAAM;YACN,IAAIiB,MAAM,CAACgD,QAAQ,KAAKxB,UAAU,EAAE;cACnCxB,MAAM,CAACiD,OAAO,GAAG,KAAK;cACtB,OAAOlE,QAAQ,CAAC,CAAC;YAClB;YACA,IAAIsD,OAAO,GAAGrC,MAAM,CAACA,MAAM,CAAC,CAAC;YAE7B,IAAI,CAACwC,MAAM,CAACC,QAAQ,CAACJ,OAAO,CAAC,EAAE;cAC9BA,OAAO,GAAGG,MAAM,CAAClC,IAAI,CAAC+B,OAAO,EAAE,MAAM,CAAC;YACvC;YAEArC,MAAM,CAACgD,QAAQ,GAAGxB,UAAU;YAC5BxB,MAAM,CAACiD,OAAO,GAAG,IAAI;YACrB,IAAI,CAACtG,gBAAgB,CAACiG,SAAS,CAACpB,UAAU,EAAEa,OAAO,EAAEpD,GAAG,IAAI;cAC3D,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;cAC7B,IAAI,CAAC1E,KAAK,CAACO,YAAY,CAAC0E,SAAS,CAAC0B,IAAI,EAAEmB,OAAO,EAAEtD,QAAQ,CAAC;YAC3D,CAAC,CAAC;UACH;QACD,CAAC;QAED,IAAIoC,UAAU,CAAC+B,KAAK,CAAC,OAAO,CAAC,EAAE;UAC9B,MAAMC,GAAG,GAAGjK,IAAI,CAACkK,OAAO,CAACjC,UAAU,CAAC;UACpC,IAAI,CAACxE,gBAAgB,CAAC0G,MAAM,CAC3B,IAAI,CAAC1G,gBAAgB,CAAC8E,IAAI,CAAC/E,UAAU,EAAEyG,GAAG,CAAC,EAC3C5B,QACD,CAAC;QACF,CAAC,MAAM;UACNA,QAAQ,CAAC,CAAC;QACX;MACD,CAAC,EACDtC,GAAG,IAAI;QACN,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;QAE7B,IAAI,CAAC1E,KAAK,CAACQ,SAAS,CAACyE,SAAS,CAACvE,WAAW,EAAEgE,GAAG,IAAI;UAClD,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;UAE7B,OAAOF,QAAQ,CAAC,CAAC;QAClB,CAAC,CAAC;MACH,CACD,CAAC;IACF,CAAC;IAED,IAAI,CAACxE,KAAK,CAACM,IAAI,CAAC2E,SAAS,CAACvE,WAAW,EAAEgE,GAAG,IAAI;MAC7C,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAC7BvC,UAAU,GAAGzB,WAAW,CAACqI,OAAO,CAAC,IAAI,CAAC5G,UAAU,CAAC;MACjD,IAAI,CAACC,gBAAgB,CAAC0G,MAAM,CAAC3G,UAAU,EAAEsE,SAAS,CAAC;IACpD,CAAC,CAAC;EACH;EAEArB,WAAWA,CAACZ,QAAQ,EAAE;IACrB,IAAI,CAAC,IAAI,CAACjC,iBAAiB,EAAE,OAAOiC,QAAQ,CAAC,CAAC;IAC9C,MAAMwE,IAAI,GAAG,IAAI,CAACzG,iBAAiB,CAAC0G,WAAW,CAAC,GAAG,CAAC;IACpD,MAAMC,IAAI,GAAG,IAAI,CAAC3G,iBAAiB,CAAC0G,WAAW,CAAC,IAAI,CAAC;IACrD,IAAIE,0BAA0B,GAAG,IAAI;IACrC,IAAIH,IAAI,GAAGE,IAAI,EAAE;MAChBC,0BAA0B,GAAG,IAAI,CAAC5G,iBAAiB,CAACwE,MAAM,CAAC,CAAC,EAAEiC,IAAI,CAAC;IACpE,CAAC,MAAM,IAAIA,IAAI,GAAGE,IAAI,EAAE;MACvBC,0BAA0B,GAAG,IAAI,CAAC5G,iBAAiB,CAACwE,MAAM,CAAC,CAAC,EAAEmC,IAAI,CAAC;IACpE;IAEA,MAAMb,SAAS,GAAGA,CAAA,KAAM;MACvB,IAAI,CAACjG,gBAAgB,CAACiG,SAAS,CAC9B,IAAI,CAAC9F,iBAAiB,EACtB6G,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC7G,OAAO,EAAEP,SAAS,EAAE,CAAC,CAAC,EAC1CuC,QACD,CAAC;IACF,CAAC;IAED,IAAI,CAAC2E,0BAA0B,EAAE;MAChC,OAAOd,SAAS,CAAC,CAAC;IACnB;IACA,IAAI,CAACjG,gBAAgB,CAAC0G,MAAM,CAACK,0BAA0B,EAAEzE,GAAG,IAAI;MAC/D,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAC7B2D,SAAS,CAAC,CAAC;IACZ,CAAC,CAAC;EACH;EAEAhD,WAAWA,CAACb,QAAQ,EAAE;IACrB,IAAI,CAAC,IAAI,CAAClC,gBAAgB,EAAE;MAC3B,IAAI,CAACE,OAAO,GAAG,CAAC,CAAC;MACjB,OAAOgC,QAAQ,CAAC,CAAC;IAClB;IACA,IAAI,CAACnC,eAAe,CAACiH,IAAI,CAAC,IAAI,CAAChH,gBAAgB,EAAEoC,GAAG,IAAI;MACvD;MACA;MACA,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAAC,CAAC;MAE1B,IAAI,CAACnC,eAAe,CAACkH,QAAQ,CAAC,IAAI,CAACjH,gBAAgB,EAAE,CAACoC,GAAG,EAAEoD,OAAO,KAAK;QACtE,IAAIpD,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;QAE7B,IAAI;UACH,IAAI,CAAClC,OAAO,GAAGhE,SAAS,CAACsJ,OAAO,CAAC0B,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpD,CAAC,CAAC,OAAOC,CAAC,EAAE;UACXA,CAAC,CAACC,OAAO,GAAG,wBAAwB,GAAGD,CAAC,CAACC,OAAO;UAChD,OAAOlF,QAAQ,CAACiF,CAAC,CAAC;QACnB;QAEA,OAAOjF,QAAQ,CAAC,CAAC;MAClB,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EAEAmF,mBAAmBA,CAClBjJ,WAAW,EACXkJ,YAAY,EACZC,aAAa,EACbC,aAAa,EACb5G,OAAO,EACN;IACD,MAAM6G,aAAa,GAAG,IAAIlK,QAAQ,CAAC,IAAI,CAACE,OAAO,CAAC;IAChD,IAAI+F,KAAK,CAACkE,OAAO,CAAC9G,OAAO,CAAC,EAAE;MAC3B,KAAK,MAAMI,MAAM,IAAIJ,OAAO,EAAE;QAC7BI,MAAM,CAACE,KAAK,CAACuG,aAAa,CAAC;MAC5B;IACD;IACA,KAAK,MAAMhI,IAAI,IAAI,IAAI,CAAC/B,KAAK,EAAE;MAC9B,IACC,CAAC,CACA,MAAM,EACN,SAAS,EACT,MAAM,EACN,WAAW,EACX,SAAS,EACT,MAAM,EACN,iBAAiB,CACjB,CAACiK,QAAQ,CAAClI,IAAI,CAAC,EACf;QACD,IAAIgI,aAAa,CAAC/J,KAAK,CAAC+B,IAAI,CAAC,EAAE;UAC9BgI,aAAa,CAAC/J,KAAK,CAAC+B,IAAI,CAAC,CAACmI,IAAI,GAAG,IAAI,CAAClK,KAAK,CAAC+B,IAAI,CAAC,CAACmI,IAAI,CAACC,KAAK,CAAC,CAAC;QAC/D;MACD;IACD;IACAJ,aAAa,CAAChI,IAAI,GAAG6H,YAAY;IACjCG,aAAa,CAAC5H,UAAU,GAAG,IAAI,CAACA,UAAU;IAC1C4H,aAAa,CAAC1H,eAAe,GAAG,IAAI,CAACA,eAAe;IACpD0H,aAAa,CAAC3H,gBAAgB,GAAG,IAAI;IACrC2H,aAAa,CAACjH,eAAe,GAAG,IAAI,CAACA,eAAe;IACpDiH,aAAa,CAACpH,cAAc,GAAG,IAAI,CAACA,cAAc;IAClDoH,aAAa,CAAClH,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IAExD,MAAMuH,oBAAoB,GAAG1K,iBAAiB,CAAC,IAAI,CAACK,OAAO,EAAE6J,YAAY,CAAC;IAC1E,IAAI,CAAC,IAAI,CAACpH,OAAO,CAAC4H,oBAAoB,CAAC,EAAE;MACxC,IAAI,CAAC5H,OAAO,CAAC4H,oBAAoB,CAAC,GAAG,EAAE;IACxC;IACA,IAAI,IAAI,CAAC5H,OAAO,CAAC4H,oBAAoB,CAAC,CAACP,aAAa,CAAC,EAAE;MACtDE,aAAa,CAACvH,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC4H,oBAAoB,CAAC,CAACP,aAAa,CAAC;IAC1E,CAAC,MAAM;MACN,IAAI,CAACrH,OAAO,CAAC4H,oBAAoB,CAAC,CAAC5E,IAAI,CAAEuE,aAAa,CAACvH,OAAO,GAAG,CAAC,CAAE,CAAC;IACtE;IAEAuH,aAAa,CAACjI,OAAO,GAAGuI,MAAM,CAACC,MAAM,CAAC,IAAI,CAACxI,OAAO,CAAC;IACnDiI,aAAa,CAACjI,OAAO,CAACqF,MAAM,GAAGkD,MAAM,CAACC,MAAM,CAACP,aAAa,CAACjI,OAAO,CAACqF,MAAM,CAAC;IAC1E,KAAK,MAAMpF,IAAI,IAAI+H,aAAa,EAAE;MACjCC,aAAa,CAACjI,OAAO,CAACqF,MAAM,CAACpF,IAAI,CAAC,GAAG+H,aAAa,CAAC/H,IAAI,CAAC;IACzD;IACAgI,aAAa,CAAC7H,iBAAiB,GAAGxB,WAAW;IAE7CA,WAAW,CAACV,KAAK,CAAC+J,aAAa,CAAC3F,IAAI,CACnC2F,aAAa,EACbH,YAAY,EACZC,aACD,CAAC;IAED,OAAOE,aAAa;EACrB;EAEAQ,OAAOA,CAAA,EAAG;IACT,OAAO,CAAC,CAAC,IAAI,CAACrI,iBAAiB;EAChC;EAEAsI,iBAAiBA,CAAA,EAAG;IACnB,OAAO,IAAIrL,WAAW,CAAC,IAAI,CAAC;EAC7B;EAEAsL,cAAcA,CAACC,MAAM,EAAE;IACtB,MAAMhK,WAAW,GAAG,IAAI,CAAC8J,iBAAiB,CAAC,CAAC;IAC5C9J,WAAW,CAACiC,cAAc,GAAG,IAAI,CAACA,cAAc;IAChDjC,WAAW,CAACmC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IACtDnC,WAAW,CAACqB,IAAI,GAAG,IAAI,CAACA,IAAI;IAC5BrB,WAAW,CAAC8B,OAAO,GAAG,IAAI,CAACA,OAAO;IAClC9B,WAAW,CAACiK,uBAAuB,GAAGD,MAAM,CAACC,uBAAuB;IACpE,IAAI,CAAC3K,KAAK,CAACS,eAAe,CAAC2D,IAAI,CAAC1D,WAAW,EAAEgK,MAAM,CAAC;IACpD,IAAI,CAAC1K,KAAK,CAACU,WAAW,CAAC0D,IAAI,CAAC1D,WAAW,EAAEgK,MAAM,CAAC;IAChD,OAAOhK,WAAW;EACnB;EAEAkK,yBAAyBA,CAAA,EAAG;IAC3B,MAAMjK,mBAAmB,GAAG,IAAIrB,mBAAmB,CAClD,IAAI,CAACwC,OAAO,CAAC/B,OAAO,EACpB,IAAI,CAAC+C,eAAe,EACpB,IAAI,CAAChB,OAAO,CAAC+I,MAAM,IAAI,CAAC,CACzB,CAAC;IACD,IAAI,CAAC7K,KAAK,CAACW,mBAAmB,CAACyD,IAAI,CAACzD,mBAAmB,CAAC;IACxD,OAAOA,mBAAmB;EAC3B;EAEAmK,0BAA0BA,CAAA,EAAG;IAC5B,MAAMlK,oBAAoB,GAAG,IAAIrB,oBAAoB,CAAC,IAAI,CAACuD,eAAe,CAAC;IAC3E,IAAI,CAAC9C,KAAK,CAACY,oBAAoB,CAACwD,IAAI,CAACxD,oBAAoB,CAAC;IAC1D,OAAOA,oBAAoB;EAC5B;EAEAmK,oBAAoBA,CAAA,EAAG;IACtB,MAAML,MAAM,GAAG;MACd/J,mBAAmB,EAAE,IAAI,CAACiK,yBAAyB,CAAC,CAAC;MACrDhK,oBAAoB,EAAE,IAAI,CAACkK,0BAA0B,CAAC,CAAC;MACvDH,uBAAuB,EAAE,IAAIjI,GAAG,CAAC;IAClC,CAAC;IACD,OAAOgI,MAAM;EACd;EAEA5J,OAAOA,CAAC0D,QAAQ,EAAE;IACjB,MAAMkG,MAAM,GAAG,IAAI,CAACK,oBAAoB,CAAC,CAAC;IAC1C,IAAI,CAAC/K,KAAK,CAACa,aAAa,CAACoE,SAAS,CAACyF,MAAM,EAAEhG,GAAG,IAAI;MACjD,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAE7B,IAAI,CAAC1E,KAAK,CAACc,OAAO,CAACsD,IAAI,CAACsG,MAAM,CAAC;MAE/B,MAAMhK,WAAW,GAAG,IAAI,CAAC+J,cAAc,CAACC,MAAM,CAAC;MAE/C,IAAI,CAAC1K,KAAK,CAACe,IAAI,CAACkE,SAAS,CAACvE,WAAW,EAAEgE,GAAG,IAAI;QAC7C,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;QAE7BhE,WAAW,CAACsK,MAAM,CAACtG,GAAG,IAAI;UACzB,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;UAE7BhE,WAAW,CAACuK,IAAI,CAACvG,GAAG,IAAI;YACvB,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;YAE7B,IAAI,CAAC1E,KAAK,CAACgB,YAAY,CAACiE,SAAS,CAACvE,WAAW,EAAEgE,GAAG,IAAI;cACrD,IAAIA,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;cAE7B,OAAOF,QAAQ,CAAC,IAAI,EAAE9D,WAAW,CAAC;YACnC,CAAC,CAAC;UACH,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEAmK,MAAM,CAACK,OAAO,GAAGrL,QAAQ;AAEzB,MAAMsI,cAAc,SAASvJ,MAAM,CAAC;EACnCkB,WAAWA,CAAC+H,IAAI,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAI,CAACsD,KAAK,GAAGtD,IAAI;EAClB;EAEAuD,MAAMA,CAAA,EAAG;IACR,OAAO,IAAIC,KAAK,CACf,kFACD,CAAC;EACF;EAEAxD,IAAIA,CAAA,EAAG;IACN,OAAO,IAAI,CAACsD,KAAK;EAClB;;EAEA;AACD;AACA;AACA;EACC1F,MAAMA,CAAC3D,OAAO,EAAE;IACf,MAAM,IAAI,CAACsJ,MAAM,CAAC,CAAC;EACpB;EAEAE,IAAIA,CAAA,EAAG;IACN,MAAM,IAAI,CAACF,MAAM,CAAC,CAAC;EACpB;EAEAG,OAAOA,CAAA,EAAG;IACT,MAAM,IAAI,CAACH,MAAM,CAAC,CAAC;EACpB;EAEAI,GAAGA,CAAA,EAAG;IACL,MAAM,IAAI,CAACJ,MAAM,CAAC,CAAC;EACpB;EAEAK,QAAQA,CAAA,EAAG;IACV,MAAM,IAAI,CAACL,MAAM,CAAC,CAAC;EACpB;EAEAM,UAAUA,CAAA,EAAG;IACZ,MAAM,IAAI,CAACN,MAAM,CAAC,CAAC;EACpB;AACD","ignoreList":[]},"metadata":{},"sourceType":"script"}