{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nclass AMDRequireDependenciesBlockParserPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  processFunctionArgument(parser, expression) {\n    let bindThis = true;\n    const fnData = getFunctionExpression(expression);\n    if (fnData) {\n      parser.inScope(fnData.fn.params.filter(i => {\n        return ![\"require\", \"module\", \"exports\"].includes(i.name);\n      }), () => {\n        if (fnData.fn.body.type === \"BlockStatement\") {\n          parser.walkStatement(fnData.fn.body);\n        } else {\n          parser.walkExpression(fnData.fn.body);\n        }\n      });\n      parser.walkExpressions(fnData.expressions);\n      if (fnData.needThis === false) {\n        bindThis = false;\n      }\n    } else {\n      parser.walkExpression(expression);\n    }\n    return bindThis;\n  }\n  apply(parser) {\n    parser.hooks.call.for(\"require\").tap(\"AMDRequireDependenciesBlockParserPlugin\", this.processCallRequire.bind(this, parser));\n  }\n  processArray(parser, expr, param) {\n    if (param.isArray()) {\n      for (const p of param.items) {\n        const result = this.processItem(parser, expr, p);\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n      return true;\n    } else if (param.isConstArray()) {\n      const deps = [];\n      for (const request of param.array) {\n        let dep, localModule;\n        if (request === \"require\") {\n          dep = \"__webpack_require__\";\n        } else if ([\"exports\", \"module\"].includes(request)) {\n          dep = request;\n        } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, request)) {\n          dep = new LocalModuleDependency(localModule, undefined, false);\n          dep.loc = expr.loc;\n          parser.state.current.addDependency(dep);\n        } else {\n          dep = this.newRequireItemDependency(request);\n          dep.loc = expr.loc;\n          dep.optional = !!parser.scope.inTry;\n          parser.state.current.addDependency(dep);\n        }\n        deps.push(dep);\n      }\n      const dep = this.newRequireArrayDependency(deps, param.range);\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    }\n  }\n  processItem(parser, expr, param) {\n    if (param.isConditional()) {\n      for (const p of param.options) {\n        const result = this.processItem(parser, expr, p);\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n      return true;\n    } else if (param.isString()) {\n      let dep, localModule;\n      if (param.string === \"require\") {\n        dep = new ConstDependency(\"__webpack_require__\", param.string);\n      } else if (param.string === \"module\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.moduleArgument, param.range);\n      } else if (param.string === \"exports\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.exportsArgument, param.range);\n      } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string)) {\n        dep = new LocalModuleDependency(localModule, param.range, false);\n      } else {\n        dep = this.newRequireItemDependency(param.string, param.range);\n      }\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    }\n  }\n  processContext(parser, expr, param) {\n    const dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, this.options, {}, parser);\n    if (!dep) return;\n    dep.loc = expr.loc;\n    dep.optional = !!parser.scope.inTry;\n    parser.state.current.addDependency(dep);\n    return true;\n  }\n  processArrayForRequestString(param) {\n    if (param.isArray()) {\n      const result = param.items.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\" \");\n    } else if (param.isConstArray()) {\n      return param.array.join(\" \");\n    }\n  }\n  processItemForRequestString(param) {\n    if (param.isConditional()) {\n      const result = param.options.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\"|\");\n    } else if (param.isString()) {\n      return param.string;\n    }\n  }\n  processCallRequire(parser, expr) {\n    let param;\n    let dep;\n    let result;\n    const old = parser.state.current;\n    if (expr.arguments.length >= 1) {\n      param = parser.evaluateExpression(expr.arguments[0]);\n      dep = this.newRequireDependenciesBlock(expr, param.range, expr.arguments.length > 1 ? expr.arguments[1].range : null, expr.arguments.length > 2 ? expr.arguments[2].range : null, parser.state.module, expr.loc, this.processArrayForRequestString(param));\n      parser.state.current = dep;\n    }\n    if (expr.arguments.length === 1) {\n      parser.inScope([], () => {\n        result = this.processArray(parser, expr, param);\n      });\n      parser.state.current = old;\n      if (!result) return;\n      parser.state.current.addBlock(dep);\n      return true;\n    }\n    if (expr.arguments.length === 2 || expr.arguments.length === 3) {\n      try {\n        parser.inScope([], () => {\n          result = this.processArray(parser, expr, param);\n        });\n        if (!result) {\n          dep = new UnsupportedDependency(\"unsupported\", expr.range);\n          old.addDependency(dep);\n          if (parser.state.module) {\n            parser.state.module.errors.push(new UnsupportedFeatureWarning(parser.state.module, \"Cannot statically analyse 'require(…, …)' in line \" + expr.loc.start.line, expr.loc));\n          }\n          dep = null;\n          return true;\n        }\n        dep.functionBindThis = this.processFunctionArgument(parser, expr.arguments[1]);\n        if (expr.arguments.length === 3) {\n          dep.errorCallbackBindThis = this.processFunctionArgument(parser, expr.arguments[2]);\n        }\n      } finally {\n        parser.state.current = old;\n        if (dep) parser.state.current.addBlock(dep);\n      }\n      return true;\n    }\n  }\n  newRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request) {\n    return new AMDRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request);\n  }\n  newRequireItemDependency(request, range) {\n    return new AMDRequireItemDependency(request, range);\n  }\n  newRequireArrayDependency(depsArray, range) {\n    return new AMDRequireArrayDependency(depsArray, range);\n  }\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;","map":{"version":3,"names":["AMDRequireItemDependency","require","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlock","UnsupportedDependency","LocalModuleDependency","ContextDependencyHelpers","LocalModulesHelpers","ConstDependency","getFunctionExpression","UnsupportedFeatureWarning","AMDRequireDependenciesBlockParserPlugin","constructor","options","processFunctionArgument","parser","expression","bindThis","fnData","inScope","fn","params","filter","i","includes","name","body","type","walkStatement","walkExpression","walkExpressions","expressions","needThis","apply","hooks","call","for","tap","processCallRequire","bind","processArray","expr","param","isArray","p","items","result","processItem","undefined","processContext","isConstArray","deps","request","array","dep","localModule","getLocalModule","state","loc","current","addDependency","newRequireItemDependency","optional","scope","inTry","push","newRequireArrayDependency","range","isConditional","isString","string","module","buildInfo","moduleArgument","exportsArgument","create","processArrayForRequestString","map","item","processItemForRequestString","every","Boolean","join","old","arguments","length","evaluateExpression","newRequireDependenciesBlock","addBlock","errors","start","line","functionBindThis","errorCallbackBindThis","arrayRange","functionRange","errorCallbackRange","depsArray","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tprocessFunctionArgument(parser, expression) {\n\t\tlet bindThis = true;\n\t\tconst fnData = getFunctionExpression(expression);\n\t\tif (fnData) {\n\t\t\tparser.inScope(\n\t\t\t\tfnData.fn.params.filter(i => {\n\t\t\t\t\treturn ![\"require\", \"module\", \"exports\"].includes(i.name);\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tif (fnData.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fnData.fn.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fnData.fn.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tparser.walkExpressions(fnData.expressions);\n\t\t\tif (fnData.needThis === false) {\n\t\t\t\tbindThis = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparser.walkExpression(expression);\n\t\t}\n\t\treturn bindThis;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\n\t\t\t\t\"AMDRequireDependenciesBlockParserPlugin\",\n\t\t\t\tthis.processCallRequire.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param) {\n\t\tif (param.isArray()) {\n\t\t\tfor (const p of param.items) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tfor (const request of param.array) {\n\t\t\t\tlet dep, localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if (\n\t\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\t\tparser.state,\n\t\t\t\t\t\trequest\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param) {\n\t\tif (param.isConditional()) {\n\t\t\tfor (const p of param.options) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string);\n\t\t\t} else if (param.string === \"module\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.moduleArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (param.string === \"exports\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.exportsArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessArrayForRequestString(param) {\n\t\tif (param.isArray()) {\n\t\t\tconst result = param.items.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\" \");\n\t\t} else if (param.isConstArray()) {\n\t\t\treturn param.array.join(\" \");\n\t\t}\n\t}\n\n\tprocessItemForRequestString(param) {\n\t\tif (param.isConditional()) {\n\t\t\tconst result = param.options.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\"|\");\n\t\t} else if (param.isString()) {\n\t\t\treturn param.string;\n\t\t}\n\t}\n\n\tprocessCallRequire(parser, expr) {\n\t\tlet param;\n\t\tlet dep;\n\t\tlet result;\n\n\t\tconst old = parser.state.current;\n\n\t\tif (expr.arguments.length >= 1) {\n\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tdep = this.newRequireDependenciesBlock(\n\t\t\t\texpr,\n\t\t\t\tparam.range,\n\t\t\t\texpr.arguments.length > 1 ? expr.arguments[1].range : null,\n\t\t\t\texpr.arguments.length > 2 ? expr.arguments[2].range : null,\n\t\t\t\tparser.state.module,\n\t\t\t\texpr.loc,\n\t\t\t\tthis.processArrayForRequestString(param)\n\t\t\t);\n\t\t\tparser.state.current = dep;\n\t\t}\n\n\t\tif (expr.arguments.length === 1) {\n\t\t\tparser.inScope([], () => {\n\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t});\n\t\t\tparser.state.current = old;\n\t\t\tif (!result) return;\n\t\t\tparser.state.current.addBlock(dep);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (expr.arguments.length === 2 || expr.arguments.length === 3) {\n\t\t\ttry {\n\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tdep = new UnsupportedDependency(\"unsupported\", expr.range);\n\t\t\t\t\told.addDependency(dep);\n\t\t\t\t\tif (parser.state.module) {\n\t\t\t\t\t\tparser.state.module.errors.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\"Cannot statically analyse 'require(…, …)' in line \" +\n\t\t\t\t\t\t\t\t\texpr.loc.start.line,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdep = null;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tdep.functionBindThis = this.processFunctionArgument(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.arguments[1]\n\t\t\t\t);\n\t\t\t\tif (expr.arguments.length === 3) {\n\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tparser.state.current = old;\n\t\t\t\tif (dep) parser.state.current.addBlock(dep);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tnewRequireDependenciesBlock(\n\t\texpr,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange,\n\t\tmodule,\n\t\tloc,\n\t\trequest\n\t) {\n\t\treturn new AMDRequireDependenciesBlock(\n\t\t\texpr,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\terrorCallbackRange,\n\t\t\tmodule,\n\t\t\tloc,\n\t\t\trequest\n\t\t);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACxE,MAAME,2BAA2B,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAMG,2BAA2B,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAMI,qBAAqB,GAAGJ,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMK,qBAAqB,GAAGL,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMM,wBAAwB,GAAGN,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAMO,mBAAmB,GAAGP,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMQ,eAAe,GAAGR,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAMS,qBAAqB,GAAGT,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMU,yBAAyB,GAAGV,OAAO,CAAC,8BAA8B,CAAC;AAEzE,MAAMW,uCAAuC,CAAC;EAC7CC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAEAC,uBAAuBA,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC3C,IAAIC,QAAQ,GAAG,IAAI;IACnB,MAAMC,MAAM,GAAGT,qBAAqB,CAACO,UAAU,CAAC;IAChD,IAAIE,MAAM,EAAE;MACXH,MAAM,CAACI,OAAO,CACbD,MAAM,CAACE,EAAE,CAACC,MAAM,CAACC,MAAM,CAACC,CAAC,IAAI;QAC5B,OAAO,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACE,IAAI,CAAC;MAC1D,CAAC,CAAC,EACF,MAAM;QACL,IAAIP,MAAM,CAACE,EAAE,CAACM,IAAI,CAACC,IAAI,KAAK,gBAAgB,EAAE;UAC7CZ,MAAM,CAACa,aAAa,CAACV,MAAM,CAACE,EAAE,CAACM,IAAI,CAAC;QACrC,CAAC,MAAM;UACNX,MAAM,CAACc,cAAc,CAACX,MAAM,CAACE,EAAE,CAACM,IAAI,CAAC;QACtC;MACD,CACD,CAAC;MACDX,MAAM,CAACe,eAAe,CAACZ,MAAM,CAACa,WAAW,CAAC;MAC1C,IAAIb,MAAM,CAACc,QAAQ,KAAK,KAAK,EAAE;QAC9Bf,QAAQ,GAAG,KAAK;MACjB;IACD,CAAC,MAAM;MACNF,MAAM,CAACc,cAAc,CAACb,UAAU,CAAC;IAClC;IACA,OAAOC,QAAQ;EAChB;EAEAgB,KAAKA,CAAClB,MAAM,EAAE;IACbA,MAAM,CAACmB,KAAK,CAACC,IAAI,CACfC,GAAG,CAAC,SAAS,CAAC,CACdC,GAAG,CACH,yCAAyC,EACzC,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,EAAExB,MAAM,CAC1C,CAAC;EACH;EAEAyB,YAAYA,CAACzB,MAAM,EAAE0B,IAAI,EAAEC,KAAK,EAAE;IACjC,IAAIA,KAAK,CAACC,OAAO,CAAC,CAAC,EAAE;MACpB,KAAK,MAAMC,CAAC,IAAIF,KAAK,CAACG,KAAK,EAAE;QAC5B,MAAMC,MAAM,GAAG,IAAI,CAACC,WAAW,CAAChC,MAAM,EAAE0B,IAAI,EAAEG,CAAC,CAAC;QAChD,IAAIE,MAAM,KAAKE,SAAS,EAAE;UACzB,IAAI,CAACC,cAAc,CAAClC,MAAM,EAAE0B,IAAI,EAAEG,CAAC,CAAC;QACrC;MACD;MACA,OAAO,IAAI;IACZ,CAAC,MAAM,IAAIF,KAAK,CAACQ,YAAY,CAAC,CAAC,EAAE;MAChC,MAAMC,IAAI,GAAG,EAAE;MACf,KAAK,MAAMC,OAAO,IAAIV,KAAK,CAACW,KAAK,EAAE;QAClC,IAAIC,GAAG,EAAEC,WAAW;QACpB,IAAIH,OAAO,KAAK,SAAS,EAAE;UAC1BE,GAAG,GAAG,qBAAqB;QAC5B,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC9B,QAAQ,CAAC4B,OAAO,CAAC,EAAE;UACnDE,GAAG,GAAGF,OAAO;QACd,CAAC,MAAM,IACLG,WAAW,GAAGhD,mBAAmB,CAACiD,cAAc,CAChDzC,MAAM,CAAC0C,KAAK,EACZL,OACD,CAAC,EACA;UACDE,GAAG,GAAG,IAAIjD,qBAAqB,CAACkD,WAAW,EAAEP,SAAS,EAAE,KAAK,CAAC;UAC9DM,GAAG,CAACI,GAAG,GAAGjB,IAAI,CAACiB,GAAG;UAClB3C,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAACC,aAAa,CAACN,GAAG,CAAC;QACxC,CAAC,MAAM;UACNA,GAAG,GAAG,IAAI,CAACO,wBAAwB,CAACT,OAAO,CAAC;UAC5CE,GAAG,CAACI,GAAG,GAAGjB,IAAI,CAACiB,GAAG;UAClBJ,GAAG,CAACQ,QAAQ,GAAG,CAAC,CAAC/C,MAAM,CAACgD,KAAK,CAACC,KAAK;UACnCjD,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAACC,aAAa,CAACN,GAAG,CAAC;QACxC;QACAH,IAAI,CAACc,IAAI,CAACX,GAAG,CAAC;MACf;MACA,MAAMA,GAAG,GAAG,IAAI,CAACY,yBAAyB,CAACf,IAAI,EAAET,KAAK,CAACyB,KAAK,CAAC;MAC7Db,GAAG,CAACI,GAAG,GAAGjB,IAAI,CAACiB,GAAG;MAClBJ,GAAG,CAACQ,QAAQ,GAAG,CAAC,CAAC/C,MAAM,CAACgD,KAAK,CAACC,KAAK;MACnCjD,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAACC,aAAa,CAACN,GAAG,CAAC;MACvC,OAAO,IAAI;IACZ;EACD;EACAP,WAAWA,CAAChC,MAAM,EAAE0B,IAAI,EAAEC,KAAK,EAAE;IAChC,IAAIA,KAAK,CAAC0B,aAAa,CAAC,CAAC,EAAE;MAC1B,KAAK,MAAMxB,CAAC,IAAIF,KAAK,CAAC7B,OAAO,EAAE;QAC9B,MAAMiC,MAAM,GAAG,IAAI,CAACC,WAAW,CAAChC,MAAM,EAAE0B,IAAI,EAAEG,CAAC,CAAC;QAChD,IAAIE,MAAM,KAAKE,SAAS,EAAE;UACzB,IAAI,CAACC,cAAc,CAAClC,MAAM,EAAE0B,IAAI,EAAEG,CAAC,CAAC;QACrC;MACD;MACA,OAAO,IAAI;IACZ,CAAC,MAAM,IAAIF,KAAK,CAAC2B,QAAQ,CAAC,CAAC,EAAE;MAC5B,IAAIf,GAAG,EAAEC,WAAW;MACpB,IAAIb,KAAK,CAAC4B,MAAM,KAAK,SAAS,EAAE;QAC/BhB,GAAG,GAAG,IAAI9C,eAAe,CAAC,qBAAqB,EAAEkC,KAAK,CAAC4B,MAAM,CAAC;MAC/D,CAAC,MAAM,IAAI5B,KAAK,CAAC4B,MAAM,KAAK,QAAQ,EAAE;QACrChB,GAAG,GAAG,IAAI9C,eAAe,CACxBO,MAAM,CAAC0C,KAAK,CAACc,MAAM,CAACC,SAAS,CAACC,cAAc,EAC5C/B,KAAK,CAACyB,KACP,CAAC;MACF,CAAC,MAAM,IAAIzB,KAAK,CAAC4B,MAAM,KAAK,SAAS,EAAE;QACtChB,GAAG,GAAG,IAAI9C,eAAe,CACxBO,MAAM,CAAC0C,KAAK,CAACc,MAAM,CAACC,SAAS,CAACE,eAAe,EAC7ChC,KAAK,CAACyB,KACP,CAAC;MACF,CAAC,MAAM,IACLZ,WAAW,GAAGhD,mBAAmB,CAACiD,cAAc,CAChDzC,MAAM,CAAC0C,KAAK,EACZf,KAAK,CAAC4B,MACP,CAAC,EACA;QACDhB,GAAG,GAAG,IAAIjD,qBAAqB,CAACkD,WAAW,EAAEb,KAAK,CAACyB,KAAK,EAAE,KAAK,CAAC;MACjE,CAAC,MAAM;QACNb,GAAG,GAAG,IAAI,CAACO,wBAAwB,CAACnB,KAAK,CAAC4B,MAAM,EAAE5B,KAAK,CAACyB,KAAK,CAAC;MAC/D;MACAb,GAAG,CAACI,GAAG,GAAGjB,IAAI,CAACiB,GAAG;MAClBJ,GAAG,CAACQ,QAAQ,GAAG,CAAC,CAAC/C,MAAM,CAACgD,KAAK,CAACC,KAAK;MACnCjD,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAACC,aAAa,CAACN,GAAG,CAAC;MACvC,OAAO,IAAI;IACZ;EACD;EACAL,cAAcA,CAAClC,MAAM,EAAE0B,IAAI,EAAEC,KAAK,EAAE;IACnC,MAAMY,GAAG,GAAGhD,wBAAwB,CAACqE,MAAM,CAC1CzE,2BAA2B,EAC3BwC,KAAK,CAACyB,KAAK,EACXzB,KAAK,EACLD,IAAI,EACJ,IAAI,CAAC5B,OAAO,EACZ,CAAC,CAAC,EACFE,MACD,CAAC;IACD,IAAI,CAACuC,GAAG,EAAE;IACVA,GAAG,CAACI,GAAG,GAAGjB,IAAI,CAACiB,GAAG;IAClBJ,GAAG,CAACQ,QAAQ,GAAG,CAAC,CAAC/C,MAAM,CAACgD,KAAK,CAACC,KAAK;IACnCjD,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAACC,aAAa,CAACN,GAAG,CAAC;IACvC,OAAO,IAAI;EACZ;EAEAsB,4BAA4BA,CAAClC,KAAK,EAAE;IACnC,IAAIA,KAAK,CAACC,OAAO,CAAC,CAAC,EAAE;MACpB,MAAMG,MAAM,GAAGJ,KAAK,CAACG,KAAK,CAACgC,GAAG,CAACC,IAAI,IAClC,IAAI,CAACC,2BAA2B,CAACD,IAAI,CACtC,CAAC;MACD,IAAIhC,MAAM,CAACkC,KAAK,CAACC,OAAO,CAAC,EAAE,OAAOnC,MAAM,CAACoC,IAAI,CAAC,GAAG,CAAC;IACnD,CAAC,MAAM,IAAIxC,KAAK,CAACQ,YAAY,CAAC,CAAC,EAAE;MAChC,OAAOR,KAAK,CAACW,KAAK,CAAC6B,IAAI,CAAC,GAAG,CAAC;IAC7B;EACD;EAEAH,2BAA2BA,CAACrC,KAAK,EAAE;IAClC,IAAIA,KAAK,CAAC0B,aAAa,CAAC,CAAC,EAAE;MAC1B,MAAMtB,MAAM,GAAGJ,KAAK,CAAC7B,OAAO,CAACgE,GAAG,CAACC,IAAI,IACpC,IAAI,CAACC,2BAA2B,CAACD,IAAI,CACtC,CAAC;MACD,IAAIhC,MAAM,CAACkC,KAAK,CAACC,OAAO,CAAC,EAAE,OAAOnC,MAAM,CAACoC,IAAI,CAAC,GAAG,CAAC;IACnD,CAAC,MAAM,IAAIxC,KAAK,CAAC2B,QAAQ,CAAC,CAAC,EAAE;MAC5B,OAAO3B,KAAK,CAAC4B,MAAM;IACpB;EACD;EAEAhC,kBAAkBA,CAACvB,MAAM,EAAE0B,IAAI,EAAE;IAChC,IAAIC,KAAK;IACT,IAAIY,GAAG;IACP,IAAIR,MAAM;IAEV,MAAMqC,GAAG,GAAGpE,MAAM,CAAC0C,KAAK,CAACE,OAAO;IAEhC,IAAIlB,IAAI,CAAC2C,SAAS,CAACC,MAAM,IAAI,CAAC,EAAE;MAC/B3C,KAAK,GAAG3B,MAAM,CAACuE,kBAAkB,CAAC7C,IAAI,CAAC2C,SAAS,CAAC,CAAC,CAAC,CAAC;MACpD9B,GAAG,GAAG,IAAI,CAACiC,2BAA2B,CACrC9C,IAAI,EACJC,KAAK,CAACyB,KAAK,EACX1B,IAAI,CAAC2C,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG5C,IAAI,CAAC2C,SAAS,CAAC,CAAC,CAAC,CAACjB,KAAK,GAAG,IAAI,EAC1D1B,IAAI,CAAC2C,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG5C,IAAI,CAAC2C,SAAS,CAAC,CAAC,CAAC,CAACjB,KAAK,GAAG,IAAI,EAC1DpD,MAAM,CAAC0C,KAAK,CAACc,MAAM,EACnB9B,IAAI,CAACiB,GAAG,EACR,IAAI,CAACkB,4BAA4B,CAAClC,KAAK,CACxC,CAAC;MACD3B,MAAM,CAAC0C,KAAK,CAACE,OAAO,GAAGL,GAAG;IAC3B;IAEA,IAAIb,IAAI,CAAC2C,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;MAChCtE,MAAM,CAACI,OAAO,CAAC,EAAE,EAAE,MAAM;QACxB2B,MAAM,GAAG,IAAI,CAACN,YAAY,CAACzB,MAAM,EAAE0B,IAAI,EAAEC,KAAK,CAAC;MAChD,CAAC,CAAC;MACF3B,MAAM,CAAC0C,KAAK,CAACE,OAAO,GAAGwB,GAAG;MAC1B,IAAI,CAACrC,MAAM,EAAE;MACb/B,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAAC6B,QAAQ,CAAClC,GAAG,CAAC;MAClC,OAAO,IAAI;IACZ;IAEA,IAAIb,IAAI,CAAC2C,SAAS,CAACC,MAAM,KAAK,CAAC,IAAI5C,IAAI,CAAC2C,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;MAC/D,IAAI;QACHtE,MAAM,CAACI,OAAO,CAAC,EAAE,EAAE,MAAM;UACxB2B,MAAM,GAAG,IAAI,CAACN,YAAY,CAACzB,MAAM,EAAE0B,IAAI,EAAEC,KAAK,CAAC;QAChD,CAAC,CAAC;QACF,IAAI,CAACI,MAAM,EAAE;UACZQ,GAAG,GAAG,IAAIlD,qBAAqB,CAAC,aAAa,EAAEqC,IAAI,CAAC0B,KAAK,CAAC;UAC1DgB,GAAG,CAACvB,aAAa,CAACN,GAAG,CAAC;UACtB,IAAIvC,MAAM,CAAC0C,KAAK,CAACc,MAAM,EAAE;YACxBxD,MAAM,CAAC0C,KAAK,CAACc,MAAM,CAACkB,MAAM,CAACxB,IAAI,CAC9B,IAAIvD,yBAAyB,CAC5BK,MAAM,CAAC0C,KAAK,CAACc,MAAM,EACnB,oDAAoD,GACnD9B,IAAI,CAACiB,GAAG,CAACgC,KAAK,CAACC,IAAI,EACpBlD,IAAI,CAACiB,GACN,CACD,CAAC;UACF;UACAJ,GAAG,GAAG,IAAI;UACV,OAAO,IAAI;QACZ;QACAA,GAAG,CAACsC,gBAAgB,GAAG,IAAI,CAAC9E,uBAAuB,CAClDC,MAAM,EACN0B,IAAI,CAAC2C,SAAS,CAAC,CAAC,CACjB,CAAC;QACD,IAAI3C,IAAI,CAAC2C,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;UAChC/B,GAAG,CAACuC,qBAAqB,GAAG,IAAI,CAAC/E,uBAAuB,CACvDC,MAAM,EACN0B,IAAI,CAAC2C,SAAS,CAAC,CAAC,CACjB,CAAC;QACF;MACD,CAAC,SAAS;QACTrE,MAAM,CAAC0C,KAAK,CAACE,OAAO,GAAGwB,GAAG;QAC1B,IAAI7B,GAAG,EAAEvC,MAAM,CAAC0C,KAAK,CAACE,OAAO,CAAC6B,QAAQ,CAAClC,GAAG,CAAC;MAC5C;MACA,OAAO,IAAI;IACZ;EACD;EAEAiC,2BAA2BA,CAC1B9C,IAAI,EACJqD,UAAU,EACVC,aAAa,EACbC,kBAAkB,EAClBzB,MAAM,EACNb,GAAG,EACHN,OAAO,EACN;IACD,OAAO,IAAIjD,2BAA2B,CACrCsC,IAAI,EACJqD,UAAU,EACVC,aAAa,EACbC,kBAAkB,EAClBzB,MAAM,EACNb,GAAG,EACHN,OACD,CAAC;EACF;EACAS,wBAAwBA,CAACT,OAAO,EAAEe,KAAK,EAAE;IACxC,OAAO,IAAIpE,wBAAwB,CAACqD,OAAO,EAAEe,KAAK,CAAC;EACpD;EACAD,yBAAyBA,CAAC+B,SAAS,EAAE9B,KAAK,EAAE;IAC3C,OAAO,IAAIlE,yBAAyB,CAACgG,SAAS,EAAE9B,KAAK,CAAC;EACvD;AACD;AACAI,MAAM,CAAC2B,OAAO,GAAGvF,uCAAuC","ignoreList":[]},"metadata":{},"sourceType":"script"}