{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nmodule.exports = class NodeMainTemplatePlugin {\n  constructor(asyncChunkLoading) {\n    this.asyncChunkLoading = asyncChunkLoading;\n  }\n  apply(mainTemplate) {\n    const needChunkOnDemandLoadingCode = chunk => {\n      for (const chunkGroup of chunk.groupsIterable) {\n        if (chunkGroup.getNumberOfChildren() > 0) return true;\n      }\n      return false;\n    };\n    const asyncChunkLoading = this.asyncChunkLoading;\n    mainTemplate.hooks.localVars.tap(\"NodeMainTemplatePlugin\", (source, chunk) => {\n      if (needChunkOnDemandLoadingCode(chunk)) {\n        return Template.asString([source, \"\", \"// object to store loaded chunks\", '// \"0\" means \"already loaded\"', \"var installedChunks = {\", Template.indent(chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\"]);\n      }\n      return source;\n    });\n    mainTemplate.hooks.requireExtensions.tap(\"NodeMainTemplatePlugin\", (source, chunk) => {\n      if (needChunkOnDemandLoadingCode(chunk)) {\n        return Template.asString([source, \"\", \"// uncaught error handler for webpack runtime\", `${mainTemplate.requireFn}.oe = function(err) {`, Template.indent([\"process.nextTick(function() {\", Template.indent(\"throw err; // catch this error by using import().catch()\"), \"});\"]), \"};\"]);\n      }\n      return source;\n    });\n    mainTemplate.hooks.requireEnsure.tap(\"NodeMainTemplatePlugin\", (source, chunk, hash) => {\n      const chunkFilename = mainTemplate.outputOptions.chunkFilename;\n      const chunkMaps = chunk.getChunkMaps();\n      const insertMoreModules = [\"var moreModules = chunk.modules, chunkIds = chunk.ids;\", \"for(var moduleId in moreModules) {\", Template.indent(mainTemplate.renderAddModule(hash, chunk, \"moduleId\", \"moreModules[moduleId]\")), \"}\"];\n      if (asyncChunkLoading) {\n        return Template.asString([source, \"\", \"// ReadFile + VM.run chunk loading for javascript\", \"\", \"var installedChunkData = installedChunks[chunkId];\", 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent(['// array of [resolve, reject, promise] means \"currently loading\"', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([\"// load the chunk and return promise to it\", \"var promise = new Promise(function(resolve, reject) {\", Template.indent([\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\", \"var filename = require('path').join(__dirname, \" + mainTemplate.getAssetPath(JSON.stringify(`/${chunkFilename}`), {\n          hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n          hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n          chunk: {\n            id: '\" + chunkId + \"',\n            hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n            hashWithLength: length => {\n              const shortChunkHashMap = {};\n              for (const chunkId of Object.keys(chunkMaps.hash)) {\n                if (typeof chunkMaps.hash[chunkId] === \"string\") {\n                  shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(0, length);\n                }\n              }\n              return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n            },\n            contentHash: {\n              javascript: `\" + ${JSON.stringify(chunkMaps.contentHash.javascript)}[chunkId] + \"`\n            },\n            contentHashWithLength: {\n              javascript: length => {\n                const shortContentHashMap = {};\n                const contentHash = chunkMaps.contentHash.javascript;\n                for (const chunkId of Object.keys(contentHash)) {\n                  if (typeof contentHash[chunkId] === \"string\") {\n                    shortContentHashMap[chunkId] = contentHash[chunkId].substr(0, length);\n                  }\n                }\n                return `\" + ${JSON.stringify(shortContentHashMap)}[chunkId] + \"`;\n              }\n            },\n            name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n          },\n          contentHashType: \"javascript\"\n        }) + \");\", \"require('fs').readFile(filename, 'utf-8',  function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var chunk = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(chunk, require, require('path').dirname(filename), filename);\"].concat(insertMoreModules).concat([\"var callbacks = [];\", \"for(var i = 0; i < chunkIds.length; i++) {\", Template.indent([\"if(installedChunks[chunkIds[i]])\", Template.indent([\"callbacks = callbacks.concat(installedChunks[chunkIds[i]][0]);\"]), \"installedChunks[chunkIds[i]] = 0;\"]), \"}\", \"for(i = 0; i < callbacks.length; i++)\", Template.indent(\"callbacks[i]();\")])), \"});\"]), \"});\", \"promises.push(installedChunkData[2] = promise);\"]), \"}\"]), \"}\"]);\n      } else {\n        const request = mainTemplate.getAssetPath(JSON.stringify(`./${chunkFilename}`), {\n          hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n          hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n          chunk: {\n            id: '\" + chunkId + \"',\n            hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n            hashWithLength: length => {\n              const shortChunkHashMap = {};\n              for (const chunkId of Object.keys(chunkMaps.hash)) {\n                if (typeof chunkMaps.hash[chunkId] === \"string\") {\n                  shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(0, length);\n                }\n              }\n              return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n            },\n            contentHash: {\n              javascript: `\" + ${JSON.stringify(chunkMaps.contentHash.javascript)}[chunkId] + \"`\n            },\n            contentHashWithLength: {\n              javascript: length => {\n                const shortContentHashMap = {};\n                const contentHash = chunkMaps.contentHash.javascript;\n                for (const chunkId of Object.keys(contentHash)) {\n                  if (typeof contentHash[chunkId] === \"string\") {\n                    shortContentHashMap[chunkId] = contentHash[chunkId].substr(0, length);\n                  }\n                }\n                return `\" + ${JSON.stringify(shortContentHashMap)}[chunkId] + \"`;\n              }\n            },\n            name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n          },\n          contentHashType: \"javascript\"\n        });\n        return Template.asString([source, \"\", \"// require() chunk loading for javascript\", \"\", '// \"0\" is the signal for \"already loaded\"', \"if(installedChunks[chunkId] !== 0) {\", Template.indent([`var chunk = require(${request});`].concat(insertMoreModules).concat([\"for(var i = 0; i < chunkIds.length; i++)\", Template.indent(\"installedChunks[chunkIds[i]] = 0;\")])), \"}\"]);\n      }\n    });\n    mainTemplate.hooks.hotBootstrap.tap(\"NodeMainTemplatePlugin\", (source, chunk, hash) => {\n      const hotUpdateChunkFilename = mainTemplate.outputOptions.hotUpdateChunkFilename;\n      const hotUpdateMainFilename = mainTemplate.outputOptions.hotUpdateMainFilename;\n      const chunkMaps = chunk.getChunkMaps();\n      const currentHotUpdateChunkFilename = mainTemplate.getAssetPath(JSON.stringify(hotUpdateChunkFilename), {\n        hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n        hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n        chunk: {\n          id: '\" + chunkId + \"',\n          hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n          hashWithLength: length => {\n            const shortChunkHashMap = {};\n            for (const chunkId of Object.keys(chunkMaps.hash)) {\n              if (typeof chunkMaps.hash[chunkId] === \"string\") {\n                shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(0, length);\n              }\n            }\n            return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n          },\n          name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n        }\n      });\n      const currentHotUpdateMainFilename = mainTemplate.getAssetPath(JSON.stringify(hotUpdateMainFilename), {\n        hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n        hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n      });\n      return Template.getFunctionContent(asyncChunkLoading ? require(\"./NodeMainTemplateAsync.runtime\") : require(\"./NodeMainTemplate.runtime\")).replace(/\\$require\\$/g, mainTemplate.requireFn).replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename).replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename);\n    });\n    mainTemplate.hooks.hash.tap(\"NodeMainTemplatePlugin\", hash => {\n      hash.update(\"node\");\n      hash.update(\"4\");\n    });\n  }\n};","map":{"version":3,"names":["Template","require","module","exports","NodeMainTemplatePlugin","constructor","asyncChunkLoading","apply","mainTemplate","needChunkOnDemandLoadingCode","chunk","chunkGroup","groupsIterable","getNumberOfChildren","hooks","localVars","tap","source","asString","indent","ids","map","id","JSON","stringify","join","requireExtensions","requireFn","requireEnsure","hash","chunkFilename","outputOptions","chunkMaps","getChunkMaps","insertMoreModules","renderAddModule","getAssetPath","renderCurrentHashCode","hashWithLength","length","shortChunkHashMap","chunkId","Object","keys","substr","contentHash","javascript","contentHashWithLength","shortContentHashMap","name","contentHashType","concat","request","hotBootstrap","hotUpdateChunkFilename","hotUpdateMainFilename","currentHotUpdateChunkFilename","currentHotUpdateMainFilename","getFunctionContent","replace","update"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/node/NodeMainTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nmodule.exports = class NodeMainTemplatePlugin {\n\tconstructor(asyncChunkLoading) {\n\t\tthis.asyncChunkLoading = asyncChunkLoading;\n\t}\n\n\tapply(mainTemplate) {\n\t\tconst needChunkOnDemandLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst asyncChunkLoading = this.asyncChunkLoading;\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// object to store loaded chunks\",\n\t\t\t\t\t\t'// \"0\" means \"already loaded\"',\n\t\t\t\t\t\t\"var installedChunks = {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// uncaught error handler for webpack runtime\",\n\t\t\t\t\t\t`${mainTemplate.requireFn}.oe = function(err) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"process.nextTick(function() {\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\"throw err; // catch this error by using import().catch()\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst chunkFilename = mainTemplate.outputOptions.chunkFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\tconst insertMoreModules = [\n\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids;\",\n\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\tmainTemplate.renderAddModule(\n\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\"moduleId\",\n\t\t\t\t\t\t\t\"moreModules[moduleId]\"\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t\"}\"\n\t\t\t\t];\n\t\t\t\tif (asyncChunkLoading) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// ReadFile + VM.run chunk loading for javascript\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t'// array of [resolve, reject, promise] means \"currently loading\"',\n\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"// load the chunk and return promise to it\",\n\t\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\",\n\t\t\t\t\t\t\t\t\t\"var filename = require('path').join(__dirname, \" +\n\t\t\t\t\t\t\t\t\t\tmainTemplate.getAssetPath(\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(`/${chunkFilename}`),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\thash\n\t\t\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst contentHash =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\t\t\");\",\n\t\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8',  function(err, content) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\t\t\"var chunk = {};\",\n\t\t\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"(chunk, require, require('path').dirname(filename), filename);\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t.concat(insertMoreModules)\n\t\t\t\t\t\t\t\t\t\t\t.concat([\n\t\t\t\t\t\t\t\t\t\t\t\t\"var callbacks = [];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[chunkIds[i]])\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"callbacks = callbacks.concat(installedChunks[chunkIds[i]][0]);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunks[chunkIds[i]] = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"for(i = 0; i < callbacks.length; i++)\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\"callbacks[i]();\")\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tconst request = mainTemplate.getAssetPath(\n\t\t\t\t\t\tJSON.stringify(`./${chunkFilename}`),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\tconst contentHash = chunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// require() chunk loading for javascript\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t'// \"0\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\"if(installedChunks[chunkId] !== 0) {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t[`var chunk = require(${request});`]\n\t\t\t\t\t\t\t\t.concat(insertMoreModules)\n\t\t\t\t\t\t\t\t.concat([\n\t\t\t\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++)\",\n\t\t\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds[i]] = 0;\")\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hotBootstrap.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst hotUpdateChunkFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateChunkFilename;\n\t\t\t\tconst hotUpdateMainFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateMainFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\tconst currentHotUpdateChunkFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateChunkFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(\n\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst currentHotUpdateMainFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateMainFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn Template.getFunctionContent(\n\t\t\t\t\tasyncChunkLoading\n\t\t\t\t\t\t? require(\"./NodeMainTemplateAsync.runtime\")\n\t\t\t\t\t\t: require(\"./NodeMainTemplate.runtime\")\n\t\t\t\t)\n\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\n\t\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"NodeMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"node\");\n\t\t\thash.update(\"4\");\n\t\t});\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}