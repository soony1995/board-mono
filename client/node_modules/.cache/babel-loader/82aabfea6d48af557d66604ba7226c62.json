{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\nconst Tapable = require(\"tapable/lib/Tapable\");\nconst SyncHook = require(\"tapable/lib/SyncHook\");\nconst AsyncSeriesBailHook = require(\"tapable/lib/AsyncSeriesBailHook\");\nconst AsyncSeriesHook = require(\"tapable/lib/AsyncSeriesHook\");\nconst createInnerContext = require(\"./createInnerContext\");\nconst REGEXP_NOT_MODULE = /^\\.$|^\\.[\\\\/]|^\\.\\.$|^\\.\\.[\\\\/]|^\\/|^[A-Z]:[\\\\/]/i;\nconst REGEXP_DIRECTORY = /[\\\\/]$/i;\nconst memoryFsJoin = require(\"memory-fs/lib/join\");\nconst memoizedJoin = new Map();\nconst memoryFsNormalize = require(\"memory-fs/lib/normalize\");\nfunction withName(name, hook) {\n  hook.name = name;\n  return hook;\n}\nfunction toCamelCase(str) {\n  return str.replace(/-([a-z])/g, str => str.substr(1).toUpperCase());\n}\nconst deprecatedPushToMissing = util.deprecate((set, item) => {\n  set.add(item);\n}, \"Resolver: 'missing' is now a Set. Use add instead of push.\");\nconst deprecatedResolveContextInCallback = util.deprecate(x => {\n  return x;\n}, \"Resolver: The callback argument was splitted into resolveContext and callback.\");\nconst deprecatedHookAsString = util.deprecate(x => {\n  return x;\n}, \"Resolver#doResolve: The type arguments (string) is now a hook argument (Hook). Pass a reference to the hook instead.\");\nclass Resolver extends Tapable {\n  constructor(fileSystem) {\n    super();\n    this.fileSystem = fileSystem;\n    this.hooks = {\n      resolveStep: withName(\"resolveStep\", new SyncHook([\"hook\", \"request\"])),\n      noResolve: withName(\"noResolve\", new SyncHook([\"request\", \"error\"])),\n      resolve: withName(\"resolve\", new AsyncSeriesBailHook([\"request\", \"resolveContext\"])),\n      result: new AsyncSeriesHook([\"result\", \"resolveContext\"])\n    };\n    this._pluginCompat.tap(\"Resolver: before/after\", options => {\n      if (/^before-/.test(options.name)) {\n        options.name = options.name.substr(7);\n        options.stage = -10;\n      } else if (/^after-/.test(options.name)) {\n        options.name = options.name.substr(6);\n        options.stage = 10;\n      }\n    });\n    this._pluginCompat.tap(\"Resolver: step hooks\", options => {\n      const name = options.name;\n      const stepHook = !/^resolve(-s|S)tep$|^no(-r|R)esolve$/.test(name);\n      if (stepHook) {\n        options.async = true;\n        this.ensureHook(name);\n        const fn = options.fn;\n        options.fn = (request, resolverContext, callback) => {\n          const innerCallback = (err, result) => {\n            if (err) return callback(err);\n            if (result !== undefined) return callback(null, result);\n            callback();\n          };\n          for (const key in resolverContext) {\n            innerCallback[key] = resolverContext[key];\n          }\n          fn.call(this, request, innerCallback);\n        };\n      }\n    });\n  }\n  ensureHook(name) {\n    if (typeof name !== \"string\") return name;\n    name = toCamelCase(name);\n    if (/^before/.test(name)) {\n      return this.ensureHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n        stage: -10\n      });\n    }\n    if (/^after/.test(name)) {\n      return this.ensureHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n        stage: 10\n      });\n    }\n    const hook = this.hooks[name];\n    if (!hook) {\n      return this.hooks[name] = withName(name, new AsyncSeriesBailHook([\"request\", \"resolveContext\"]));\n    }\n    return hook;\n  }\n  getHook(name) {\n    if (typeof name !== \"string\") return name;\n    name = toCamelCase(name);\n    if (/^before/.test(name)) {\n      return this.getHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n        stage: -10\n      });\n    }\n    if (/^after/.test(name)) {\n      return this.getHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n        stage: 10\n      });\n    }\n    const hook = this.hooks[name];\n    if (!hook) {\n      throw new Error(`Hook ${name} doesn't exist`);\n    }\n    return hook;\n  }\n  resolveSync(context, path, request) {\n    let err,\n      result,\n      sync = false;\n    this.resolve(context, path, request, {}, (e, r) => {\n      err = e;\n      result = r;\n      sync = true;\n    });\n    if (!sync) throw new Error(\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\");\n    if (err) throw err;\n    return result;\n  }\n  resolve(context, path, request, resolveContext, callback) {\n    // TODO remove in enhanced-resolve 5\n    // For backward compatiblity START\n    if (typeof callback !== \"function\") {\n      callback = deprecatedResolveContextInCallback(resolveContext);\n      // resolveContext is a function containing additional properties\n      // It's now used for resolveContext and callback\n    }\n    // END\n    const obj = {\n      context: context,\n      path: path,\n      request: request\n    };\n    const message = \"resolve '\" + request + \"' in '\" + path + \"'\";\n\n    // Try to resolve assuming there is no error\n    // We don't log stuff in this case\n    return this.doResolve(this.hooks.resolve, obj, message, {\n      missing: resolveContext.missing,\n      stack: resolveContext.stack\n    }, (err, result) => {\n      if (!err && result) {\n        return callback(null, result.path === false ? false : result.path + (result.query || \"\"), result);\n      }\n      const localMissing = new Set();\n      // TODO remove in enhanced-resolve 5\n      localMissing.push = item => deprecatedPushToMissing(localMissing, item);\n      const log = [];\n      return this.doResolve(this.hooks.resolve, obj, message, {\n        log: msg => {\n          if (resolveContext.log) {\n            resolveContext.log(msg);\n          }\n          log.push(msg);\n        },\n        missing: localMissing,\n        stack: resolveContext.stack\n      }, (err, result) => {\n        if (err) return callback(err);\n        const error = new Error(\"Can't \" + message);\n        error.details = log.join(\"\\n\");\n        error.missing = Array.from(localMissing);\n        this.hooks.noResolve.call(obj, error);\n        return callback(error);\n      });\n    });\n  }\n  doResolve(hook, request, message, resolveContext, callback) {\n    // TODO remove in enhanced-resolve 5\n    // For backward compatiblity START\n    if (typeof callback !== \"function\") {\n      callback = deprecatedResolveContextInCallback(resolveContext);\n      // resolveContext is a function containing additional properties\n      // It's now used for resolveContext and callback\n    }\n    if (typeof hook === \"string\") {\n      const name = toCamelCase(hook);\n      hook = deprecatedHookAsString(this.hooks[name]);\n      if (!hook) {\n        throw new Error(`Hook \"${name}\" doesn't exist`);\n      }\n    }\n    // END\n    if (typeof callback !== \"function\") throw new Error(\"callback is not a function \" + Array.from(arguments));\n    if (!resolveContext) throw new Error(\"resolveContext is not an object \" + Array.from(arguments));\n    const stackLine = hook.name + \": (\" + request.path + \") \" + (request.request || \"\") + (request.query || \"\") + (request.directory ? \" directory\" : \"\") + (request.module ? \" module\" : \"\");\n    let newStack;\n    if (resolveContext.stack) {\n      newStack = new Set(resolveContext.stack);\n      if (resolveContext.stack.has(stackLine)) {\n        // Prevent recursion\n        const recursionError = new Error(\"Recursion in resolving\\nStack:\\n  \" + Array.from(newStack).join(\"\\n  \"));\n        recursionError.recursion = true;\n        if (resolveContext.log) resolveContext.log(\"abort resolving because of recursion\");\n        return callback(recursionError);\n      }\n      newStack.add(stackLine);\n    } else {\n      newStack = new Set([stackLine]);\n    }\n    this.hooks.resolveStep.call(hook, request);\n    if (hook.isUsed()) {\n      const innerContext = createInnerContext({\n        log: resolveContext.log,\n        missing: resolveContext.missing,\n        stack: newStack\n      }, message);\n      return hook.callAsync(request, innerContext, (err, result) => {\n        if (err) return callback(err);\n        if (result) return callback(null, result);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  }\n  parse(identifier) {\n    if (identifier === \"\") return null;\n    const part = {\n      request: \"\",\n      query: \"\",\n      module: false,\n      directory: false,\n      file: false\n    };\n    const idxQuery = identifier.indexOf(\"?\");\n    if (idxQuery === 0) {\n      part.query = identifier;\n    } else if (idxQuery > 0) {\n      part.request = identifier.slice(0, idxQuery);\n      part.query = identifier.slice(idxQuery);\n    } else {\n      part.request = identifier;\n    }\n    if (part.request) {\n      part.module = this.isModule(part.request);\n      part.directory = this.isDirectory(part.request);\n      if (part.directory) {\n        part.request = part.request.substr(0, part.request.length - 1);\n      }\n    }\n    return part;\n  }\n  isModule(path) {\n    return !REGEXP_NOT_MODULE.test(path);\n  }\n  isDirectory(path) {\n    return REGEXP_DIRECTORY.test(path);\n  }\n  join(path, request) {\n    let cacheEntry;\n    let pathCache = memoizedJoin.get(path);\n    if (typeof pathCache === \"undefined\") {\n      memoizedJoin.set(path, pathCache = new Map());\n    } else {\n      cacheEntry = pathCache.get(request);\n      if (typeof cacheEntry !== \"undefined\") return cacheEntry;\n    }\n    cacheEntry = memoryFsJoin(path, request);\n    pathCache.set(request, cacheEntry);\n    return cacheEntry;\n  }\n  normalize(path) {\n    return memoryFsNormalize(path);\n  }\n}\nmodule.exports = Resolver;","map":{"version":3,"names":["util","require","Tapable","SyncHook","AsyncSeriesBailHook","AsyncSeriesHook","createInnerContext","REGEXP_NOT_MODULE","REGEXP_DIRECTORY","memoryFsJoin","memoizedJoin","Map","memoryFsNormalize","withName","name","hook","toCamelCase","str","replace","substr","toUpperCase","deprecatedPushToMissing","deprecate","set","item","add","deprecatedResolveContextInCallback","x","deprecatedHookAsString","Resolver","constructor","fileSystem","hooks","resolveStep","noResolve","resolve","result","_pluginCompat","tap","options","test","stage","stepHook","async","ensureHook","fn","request","resolverContext","callback","innerCallback","err","undefined","key","call","toLowerCase","withOptions","getHook","Error","resolveSync","context","path","sync","e","r","resolveContext","obj","message","doResolve","missing","stack","query","localMissing","Set","push","log","msg","error","details","join","Array","from","arguments","stackLine","directory","module","newStack","has","recursionError","recursion","isUsed","innerContext","callAsync","parse","identifier","part","file","idxQuery","indexOf","slice","isModule","isDirectory","length","cacheEntry","pathCache","get","normalize","exports"],"sources":["/home/soon/bulletin-board/node_modules/enhanced-resolve/lib/Resolver.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst Tapable = require(\"tapable/lib/Tapable\");\nconst SyncHook = require(\"tapable/lib/SyncHook\");\nconst AsyncSeriesBailHook = require(\"tapable/lib/AsyncSeriesBailHook\");\nconst AsyncSeriesHook = require(\"tapable/lib/AsyncSeriesHook\");\nconst createInnerContext = require(\"./createInnerContext\");\n\nconst REGEXP_NOT_MODULE = /^\\.$|^\\.[\\\\/]|^\\.\\.$|^\\.\\.[\\\\/]|^\\/|^[A-Z]:[\\\\/]/i;\nconst REGEXP_DIRECTORY = /[\\\\/]$/i;\n\nconst memoryFsJoin = require(\"memory-fs/lib/join\");\nconst memoizedJoin = new Map();\nconst memoryFsNormalize = require(\"memory-fs/lib/normalize\");\n\nfunction withName(name, hook) {\n\thook.name = name;\n\treturn hook;\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-([a-z])/g, str => str.substr(1).toUpperCase());\n}\n\nconst deprecatedPushToMissing = util.deprecate((set, item) => {\n\tset.add(item);\n}, \"Resolver: 'missing' is now a Set. Use add instead of push.\");\n\nconst deprecatedResolveContextInCallback = util.deprecate(x => {\n\treturn x;\n}, \"Resolver: The callback argument was splitted into resolveContext and callback.\");\n\nconst deprecatedHookAsString = util.deprecate(x => {\n\treturn x;\n}, \"Resolver#doResolve: The type arguments (string) is now a hook argument (Hook). Pass a reference to the hook instead.\");\n\nclass Resolver extends Tapable {\n\tconstructor(fileSystem) {\n\t\tsuper();\n\t\tthis.fileSystem = fileSystem;\n\t\tthis.hooks = {\n\t\t\tresolveStep: withName(\"resolveStep\", new SyncHook([\"hook\", \"request\"])),\n\t\t\tnoResolve: withName(\"noResolve\", new SyncHook([\"request\", \"error\"])),\n\t\t\tresolve: withName(\n\t\t\t\t\"resolve\",\n\t\t\t\tnew AsyncSeriesBailHook([\"request\", \"resolveContext\"])\n\t\t\t),\n\t\t\tresult: new AsyncSeriesHook([\"result\", \"resolveContext\"])\n\t\t};\n\t\tthis._pluginCompat.tap(\"Resolver: before/after\", options => {\n\t\t\tif (/^before-/.test(options.name)) {\n\t\t\t\toptions.name = options.name.substr(7);\n\t\t\t\toptions.stage = -10;\n\t\t\t} else if (/^after-/.test(options.name)) {\n\t\t\t\toptions.name = options.name.substr(6);\n\t\t\t\toptions.stage = 10;\n\t\t\t}\n\t\t});\n\t\tthis._pluginCompat.tap(\"Resolver: step hooks\", options => {\n\t\t\tconst name = options.name;\n\t\t\tconst stepHook = !/^resolve(-s|S)tep$|^no(-r|R)esolve$/.test(name);\n\t\t\tif (stepHook) {\n\t\t\t\toptions.async = true;\n\t\t\t\tthis.ensureHook(name);\n\t\t\t\tconst fn = options.fn;\n\t\t\t\toptions.fn = (request, resolverContext, callback) => {\n\t\t\t\t\tconst innerCallback = (err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (result !== undefined) return callback(null, result);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t};\n\t\t\t\t\tfor (const key in resolverContext) {\n\t\t\t\t\t\tinnerCallback[key] = resolverContext[key];\n\t\t\t\t\t}\n\t\t\t\t\tfn.call(this, request, innerCallback);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tensureHook(name) {\n\t\tif (typeof name !== \"string\") return name;\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn this.ensureHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t});\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn this.ensureHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t});\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\treturn (this.hooks[name] = withName(\n\t\t\t\tname,\n\t\t\t\tnew AsyncSeriesBailHook([\"request\", \"resolveContext\"])\n\t\t\t));\n\t\t}\n\t\treturn hook;\n\t}\n\n\tgetHook(name) {\n\t\tif (typeof name !== \"string\") return name;\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn this.getHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n\t\t\t\tstage: -10\n\t\t\t});\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn this.getHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n\t\t\t\tstage: 10\n\t\t\t});\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\tthrow new Error(`Hook ${name} doesn't exist`);\n\t\t}\n\t\treturn hook;\n\t}\n\n\tresolveSync(context, path, request) {\n\t\tlet err,\n\t\t\tresult,\n\t\t\tsync = false;\n\t\tthis.resolve(context, path, request, {}, (e, r) => {\n\t\t\terr = e;\n\t\t\tresult = r;\n\t\t\tsync = true;\n\t\t});\n\t\tif (!sync)\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\"\n\t\t\t);\n\t\tif (err) throw err;\n\t\treturn result;\n\t}\n\n\tresolve(context, path, request, resolveContext, callback) {\n\t\t// TODO remove in enhanced-resolve 5\n\t\t// For backward compatiblity START\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = deprecatedResolveContextInCallback(resolveContext);\n\t\t\t// resolveContext is a function containing additional properties\n\t\t\t// It's now used for resolveContext and callback\n\t\t}\n\t\t// END\n\t\tconst obj = {\n\t\t\tcontext: context,\n\t\t\tpath: path,\n\t\t\trequest: request\n\t\t};\n\n\t\tconst message = \"resolve '\" + request + \"' in '\" + path + \"'\";\n\n\t\t// Try to resolve assuming there is no error\n\t\t// We don't log stuff in this case\n\t\treturn this.doResolve(\n\t\t\tthis.hooks.resolve,\n\t\t\tobj,\n\t\t\tmessage,\n\t\t\t{\n\t\t\t\tmissing: resolveContext.missing,\n\t\t\t\tstack: resolveContext.stack\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (!err && result) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tresult.path === false ? false : result.path + (result.query || \"\"),\n\t\t\t\t\t\tresult\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst localMissing = new Set();\n\t\t\t\t// TODO remove in enhanced-resolve 5\n\t\t\t\tlocalMissing.push = item => deprecatedPushToMissing(localMissing, item);\n\t\t\t\tconst log = [];\n\n\t\t\t\treturn this.doResolve(\n\t\t\t\t\tthis.hooks.resolve,\n\t\t\t\t\tobj,\n\t\t\t\t\tmessage,\n\t\t\t\t\t{\n\t\t\t\t\t\tlog: msg => {\n\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\tresolveContext.log(msg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlog.push(msg);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmissing: localMissing,\n\t\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tconst error = new Error(\"Can't \" + message);\n\t\t\t\t\t\terror.details = log.join(\"\\n\");\n\t\t\t\t\t\terror.missing = Array.from(localMissing);\n\t\t\t\t\t\tthis.hooks.noResolve.call(obj, error);\n\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tdoResolve(hook, request, message, resolveContext, callback) {\n\t\t// TODO remove in enhanced-resolve 5\n\t\t// For backward compatiblity START\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = deprecatedResolveContextInCallback(resolveContext);\n\t\t\t// resolveContext is a function containing additional properties\n\t\t\t// It's now used for resolveContext and callback\n\t\t}\n\t\tif (typeof hook === \"string\") {\n\t\t\tconst name = toCamelCase(hook);\n\t\t\thook = deprecatedHookAsString(this.hooks[name]);\n\t\t\tif (!hook) {\n\t\t\t\tthrow new Error(`Hook \"${name}\" doesn't exist`);\n\t\t\t}\n\t\t}\n\t\t// END\n\t\tif (typeof callback !== \"function\")\n\t\t\tthrow new Error(\"callback is not a function \" + Array.from(arguments));\n\t\tif (!resolveContext)\n\t\t\tthrow new Error(\n\t\t\t\t\"resolveContext is not an object \" + Array.from(arguments)\n\t\t\t);\n\n\t\tconst stackLine =\n\t\t\thook.name +\n\t\t\t\": (\" +\n\t\t\trequest.path +\n\t\t\t\") \" +\n\t\t\t(request.request || \"\") +\n\t\t\t(request.query || \"\") +\n\t\t\t(request.directory ? \" directory\" : \"\") +\n\t\t\t(request.module ? \" module\" : \"\");\n\n\t\tlet newStack;\n\t\tif (resolveContext.stack) {\n\t\t\tnewStack = new Set(resolveContext.stack);\n\t\t\tif (resolveContext.stack.has(stackLine)) {\n\t\t\t\t// Prevent recursion\n\t\t\t\tconst recursionError = new Error(\n\t\t\t\t\t\"Recursion in resolving\\nStack:\\n  \" +\n\t\t\t\t\t\tArray.from(newStack).join(\"\\n  \")\n\t\t\t\t);\n\t\t\t\trecursionError.recursion = true;\n\t\t\t\tif (resolveContext.log)\n\t\t\t\t\tresolveContext.log(\"abort resolving because of recursion\");\n\t\t\t\treturn callback(recursionError);\n\t\t\t}\n\t\t\tnewStack.add(stackLine);\n\t\t} else {\n\t\t\tnewStack = new Set([stackLine]);\n\t\t}\n\t\tthis.hooks.resolveStep.call(hook, request);\n\n\t\tif (hook.isUsed()) {\n\t\t\tconst innerContext = createInnerContext(\n\t\t\t\t{\n\t\t\t\t\tlog: resolveContext.log,\n\t\t\t\t\tmissing: resolveContext.missing,\n\t\t\t\t\tstack: newStack\n\t\t\t\t},\n\t\t\t\tmessage\n\t\t\t);\n\t\t\treturn hook.callAsync(request, innerContext, (err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) return callback(null, result);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tparse(identifier) {\n\t\tif (identifier === \"\") return null;\n\t\tconst part = {\n\t\t\trequest: \"\",\n\t\t\tquery: \"\",\n\t\t\tmodule: false,\n\t\t\tdirectory: false,\n\t\t\tfile: false\n\t\t};\n\t\tconst idxQuery = identifier.indexOf(\"?\");\n\t\tif (idxQuery === 0) {\n\t\t\tpart.query = identifier;\n\t\t} else if (idxQuery > 0) {\n\t\t\tpart.request = identifier.slice(0, idxQuery);\n\t\t\tpart.query = identifier.slice(idxQuery);\n\t\t} else {\n\t\t\tpart.request = identifier;\n\t\t}\n\t\tif (part.request) {\n\t\t\tpart.module = this.isModule(part.request);\n\t\t\tpart.directory = this.isDirectory(part.request);\n\t\t\tif (part.directory) {\n\t\t\t\tpart.request = part.request.substr(0, part.request.length - 1);\n\t\t\t}\n\t\t}\n\t\treturn part;\n\t}\n\n\tisModule(path) {\n\t\treturn !REGEXP_NOT_MODULE.test(path);\n\t}\n\n\tisDirectory(path) {\n\t\treturn REGEXP_DIRECTORY.test(path);\n\t}\n\n\tjoin(path, request) {\n\t\tlet cacheEntry;\n\t\tlet pathCache = memoizedJoin.get(path);\n\t\tif (typeof pathCache === \"undefined\") {\n\t\t\tmemoizedJoin.set(path, (pathCache = new Map()));\n\t\t} else {\n\t\t\tcacheEntry = pathCache.get(request);\n\t\t\tif (typeof cacheEntry !== \"undefined\") return cacheEntry;\n\t\t}\n\t\tcacheEntry = memoryFsJoin(path, request);\n\t\tpathCache.set(request, cacheEntry);\n\t\treturn cacheEntry;\n\t}\n\n\tnormalize(path) {\n\t\treturn memoryFsNormalize(path);\n\t}\n}\n\nmodule.exports = Resolver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}