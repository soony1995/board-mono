{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst GraphHelpers = require(\"../GraphHelpers\");\nclass EnsureChunkConditionsPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EnsureChunkConditionsPlugin\", compilation => {\n      const handler = chunks => {\n        let changed = false;\n        for (const module of compilation.modules) {\n          if (!module.chunkCondition) continue;\n          const sourceChunks = new Set();\n          const chunkGroups = new Set();\n          for (const chunk of module.chunksIterable) {\n            if (!module.chunkCondition(chunk)) {\n              sourceChunks.add(chunk);\n              for (const group of chunk.groupsIterable) {\n                chunkGroups.add(group);\n              }\n            }\n          }\n          if (sourceChunks.size === 0) continue;\n          const targetChunks = new Set();\n          chunkGroupLoop: for (const chunkGroup of chunkGroups) {\n            // Can module be placed in a chunk of this group?\n            for (const chunk of chunkGroup.chunks) {\n              if (module.chunkCondition(chunk)) {\n                targetChunks.add(chunk);\n                continue chunkGroupLoop;\n              }\n            }\n            // We reached the entrypoint: fail\n            if (chunkGroup.isInitial()) {\n              throw new Error(\"Cannot fullfil chunk condition of \" + module.identifier());\n            }\n            // Try placing in all parents\n            for (const group of chunkGroup.parentsIterable) {\n              chunkGroups.add(group);\n            }\n          }\n          for (const sourceChunk of sourceChunks) {\n            GraphHelpers.disconnectChunkAndModule(sourceChunk, module);\n          }\n          for (const targetChunk of targetChunks) {\n            GraphHelpers.connectChunkAndModule(targetChunk, module);\n          }\n        }\n        if (changed) return true;\n      };\n      compilation.hooks.optimizeChunksBasic.tap(\"EnsureChunkConditionsPlugin\", handler);\n      compilation.hooks.optimizeExtractedChunksBasic.tap(\"EnsureChunkConditionsPlugin\", handler);\n    });\n  }\n}\nmodule.exports = EnsureChunkConditionsPlugin;","map":{"version":3,"names":["GraphHelpers","require","EnsureChunkConditionsPlugin","apply","compiler","hooks","compilation","tap","handler","chunks","changed","module","modules","chunkCondition","sourceChunks","Set","chunkGroups","chunk","chunksIterable","add","group","groupsIterable","size","targetChunks","chunkGroupLoop","chunkGroup","isInitial","Error","identifier","parentsIterable","sourceChunk","disconnectChunkAndModule","targetChunk","connectChunkAndModule","optimizeChunksBasic","optimizeExtractedChunksBasic","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst GraphHelpers = require(\"../GraphHelpers\");\n\nclass EnsureChunkConditionsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst handler = chunks => {\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tif (!module.chunkCondition) continue;\n\t\t\t\t\t\tconst sourceChunks = new Set();\n\t\t\t\t\t\tconst chunkGroups = new Set();\n\t\t\t\t\t\tfor (const chunk of module.chunksIterable) {\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\n\t\t\t\t\t\tconst targetChunks = new Set();\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Try placing in all parents\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\n\t\t\t\t\t\t\tGraphHelpers.disconnectChunkAndModule(sourceChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\n\t\t\t\t\t\t\tGraphHelpers.connectChunkAndModule(targetChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) return true;\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.optimizeExtractedChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EnsureChunkConditionsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE/C,MAAMC,2BAA2B,CAAC;EACjCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,6BAA6B,EAC7BD,WAAW,IAAI;MACd,MAAME,OAAO,GAAGC,MAAM,IAAI;QACzB,IAAIC,OAAO,GAAG,KAAK;QACnB,KAAK,MAAMC,MAAM,IAAIL,WAAW,CAACM,OAAO,EAAE;UACzC,IAAI,CAACD,MAAM,CAACE,cAAc,EAAE;UAC5B,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;UAC9B,MAAMC,WAAW,GAAG,IAAID,GAAG,CAAC,CAAC;UAC7B,KAAK,MAAME,KAAK,IAAIN,MAAM,CAACO,cAAc,EAAE;YAC1C,IAAI,CAACP,MAAM,CAACE,cAAc,CAACI,KAAK,CAAC,EAAE;cAClCH,YAAY,CAACK,GAAG,CAACF,KAAK,CAAC;cACvB,KAAK,MAAMG,KAAK,IAAIH,KAAK,CAACI,cAAc,EAAE;gBACzCL,WAAW,CAACG,GAAG,CAACC,KAAK,CAAC;cACvB;YACD;UACD;UACA,IAAIN,YAAY,CAACQ,IAAI,KAAK,CAAC,EAAE;UAC7B,MAAMC,YAAY,GAAG,IAAIR,GAAG,CAAC,CAAC;UAC9BS,cAAc,EAAE,KAAK,MAAMC,UAAU,IAAIT,WAAW,EAAE;YACrD;YACA,KAAK,MAAMC,KAAK,IAAIQ,UAAU,CAAChB,MAAM,EAAE;cACtC,IAAIE,MAAM,CAACE,cAAc,CAACI,KAAK,CAAC,EAAE;gBACjCM,YAAY,CAACJ,GAAG,CAACF,KAAK,CAAC;gBACvB,SAASO,cAAc;cACxB;YACD;YACA;YACA,IAAIC,UAAU,CAACC,SAAS,CAAC,CAAC,EAAE;cAC3B,MAAM,IAAIC,KAAK,CACd,oCAAoC,GAAGhB,MAAM,CAACiB,UAAU,CAAC,CAC1D,CAAC;YACF;YACA;YACA,KAAK,MAAMR,KAAK,IAAIK,UAAU,CAACI,eAAe,EAAE;cAC/Cb,WAAW,CAACG,GAAG,CAACC,KAAK,CAAC;YACvB;UACD;UACA,KAAK,MAAMU,WAAW,IAAIhB,YAAY,EAAE;YACvCd,YAAY,CAAC+B,wBAAwB,CAACD,WAAW,EAAEnB,MAAM,CAAC;UAC3D;UACA,KAAK,MAAMqB,WAAW,IAAIT,YAAY,EAAE;YACvCvB,YAAY,CAACiC,qBAAqB,CAACD,WAAW,EAAErB,MAAM,CAAC;UACxD;QACD;QACA,IAAID,OAAO,EAAE,OAAO,IAAI;MACzB,CAAC;MACDJ,WAAW,CAACD,KAAK,CAAC6B,mBAAmB,CAAC3B,GAAG,CACxC,6BAA6B,EAC7BC,OACD,CAAC;MACDF,WAAW,CAACD,KAAK,CAAC8B,4BAA4B,CAAC5B,GAAG,CACjD,6BAA6B,EAC7BC,OACD,CAAC;IACF,CACD,CAAC;EACF;AACD;AACAG,MAAM,CAACyB,OAAO,GAAGlC,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"script"}