{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst locatePath = require('locate-path');\nmodule.exports = (filename, opts = {}) => {\n  const startDir = path.resolve(opts.cwd || '');\n  const {\n    root\n  } = path.parse(startDir);\n  const filenames = [].concat(filename);\n  return new Promise(resolve => {\n    (function find(dir) {\n      locatePath(filenames, {\n        cwd: dir\n      }).then(file => {\n        if (file) {\n          resolve(path.join(dir, file));\n        } else if (dir === root) {\n          resolve(null);\n        } else {\n          find(path.dirname(dir));\n        }\n      });\n    })(startDir);\n  });\n};\nmodule.exports.sync = (filename, opts = {}) => {\n  let dir = path.resolve(opts.cwd || '');\n  const {\n    root\n  } = path.parse(dir);\n  const filenames = [].concat(filename);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const file = locatePath.sync(filenames, {\n      cwd: dir\n    });\n    if (file) {\n      return path.join(dir, file);\n    }\n    if (dir === root) {\n      return null;\n    }\n    dir = path.dirname(dir);\n  }\n};","map":{"version":3,"names":["path","require","locatePath","module","exports","filename","opts","startDir","resolve","cwd","root","parse","filenames","concat","Promise","find","dir","then","file","join","dirname","sync"],"sources":["/home/soon/bulletin-board/node_modules/find-up/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\n\nmodule.exports = (filename, opts = {}) => {\n\tconst startDir = path.resolve(opts.cwd || '');\n\tconst {root} = path.parse(startDir);\n\n\tconst filenames = [].concat(filename);\n\n\treturn new Promise(resolve => {\n\t\t(function find(dir) {\n\t\t\tlocatePath(filenames, {cwd: dir}).then(file => {\n\t\t\t\tif (file) {\n\t\t\t\t\tresolve(path.join(dir, file));\n\t\t\t\t} else if (dir === root) {\n\t\t\t\t\tresolve(null);\n\t\t\t\t} else {\n\t\t\t\t\tfind(path.dirname(dir));\n\t\t\t\t}\n\t\t\t});\n\t\t})(startDir);\n\t});\n};\n\nmodule.exports.sync = (filename, opts = {}) => {\n\tlet dir = path.resolve(opts.cwd || '');\n\tconst {root} = path.parse(dir);\n\n\tconst filenames = [].concat(filename);\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst file = locatePath.sync(filenames, {cwd: dir});\n\n\t\tif (file) {\n\t\t\treturn path.join(dir, file);\n\t\t}\n\n\t\tif (dir === root) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdir = path.dirname(dir);\n\t}\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEzCE,MAAM,CAACC,OAAO,GAAG,CAACC,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EACzC,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,OAAO,CAACF,IAAI,CAACG,GAAG,IAAI,EAAE,CAAC;EAC7C,MAAM;IAACC;EAAI,CAAC,GAAGV,IAAI,CAACW,KAAK,CAACJ,QAAQ,CAAC;EAEnC,MAAMK,SAAS,GAAG,EAAE,CAACC,MAAM,CAACR,QAAQ,CAAC;EAErC,OAAO,IAAIS,OAAO,CAACN,OAAO,IAAI;IAC7B,CAAC,SAASO,IAAIA,CAACC,GAAG,EAAE;MACnBd,UAAU,CAACU,SAAS,EAAE;QAACH,GAAG,EAAEO;MAAG,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;QAC9C,IAAIA,IAAI,EAAE;UACTV,OAAO,CAACR,IAAI,CAACmB,IAAI,CAACH,GAAG,EAAEE,IAAI,CAAC,CAAC;QAC9B,CAAC,MAAM,IAAIF,GAAG,KAAKN,IAAI,EAAE;UACxBF,OAAO,CAAC,IAAI,CAAC;QACd,CAAC,MAAM;UACNO,IAAI,CAACf,IAAI,CAACoB,OAAO,CAACJ,GAAG,CAAC,CAAC;QACxB;MACD,CAAC,CAAC;IACH,CAAC,EAAET,QAAQ,CAAC;EACb,CAAC,CAAC;AACH,CAAC;AAEDJ,MAAM,CAACC,OAAO,CAACiB,IAAI,GAAG,CAAChB,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAIU,GAAG,GAAGhB,IAAI,CAACQ,OAAO,CAACF,IAAI,CAACG,GAAG,IAAI,EAAE,CAAC;EACtC,MAAM;IAACC;EAAI,CAAC,GAAGV,IAAI,CAACW,KAAK,CAACK,GAAG,CAAC;EAE9B,MAAMJ,SAAS,GAAG,EAAE,CAACC,MAAM,CAACR,QAAQ,CAAC;;EAErC;EACA,OAAO,IAAI,EAAE;IACZ,MAAMa,IAAI,GAAGhB,UAAU,CAACmB,IAAI,CAACT,SAAS,EAAE;MAACH,GAAG,EAAEO;IAAG,CAAC,CAAC;IAEnD,IAAIE,IAAI,EAAE;MACT,OAAOlB,IAAI,CAACmB,IAAI,CAACH,GAAG,EAAEE,IAAI,CAAC;IAC5B;IAEA,IAAIF,GAAG,KAAKN,IAAI,EAAE;MACjB,OAAO,IAAI;IACZ;IAEAM,GAAG,GAAGhB,IAAI,CAACoB,OAAO,CAACJ,GAAG,CAAC;EACxB;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}