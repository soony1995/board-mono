{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\nclass JsonpExportMainTemplatePlugin {\n  /**\n   * @param {string} name jsonp function name\n   */\n  constructor(name) {\n    this.name = name;\n  }\n  apply(compilation) {\n    const {\n      mainTemplate,\n      chunkTemplate\n    } = compilation;\n    const onRenderWithEntry = (source, chunk, hash) => {\n      const name = mainTemplate.getAssetPath(this.name || \"\", {\n        hash,\n        chunk\n      });\n      return new ConcatSource(`${name}(`, source, \");\");\n    };\n    for (const template of [mainTemplate, chunkTemplate]) {\n      template.hooks.renderWithEntry.tap(\"JsonpExportMainTemplatePlugin\", onRenderWithEntry);\n    }\n    mainTemplate.hooks.globalHashPaths.tap(\"JsonpExportMainTemplatePlugin\", paths => {\n      if (this.name) paths.push(this.name);\n      return paths;\n    });\n    mainTemplate.hooks.hash.tap(\"JsonpExportMainTemplatePlugin\", hash => {\n      hash.update(\"jsonp export\");\n      hash.update(`${this.name}`);\n    });\n  }\n}\nmodule.exports = JsonpExportMainTemplatePlugin;","map":{"version":3,"names":["ConcatSource","require","JsonpExportMainTemplatePlugin","constructor","name","apply","compilation","mainTemplate","chunkTemplate","onRenderWithEntry","source","chunk","hash","getAssetPath","template","hooks","renderWithEntry","tap","globalHashPaths","paths","push","update","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/web/JsonpExportMainTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass JsonpExportMainTemplatePlugin {\n\t/**\n\t * @param {string} name jsonp function name\n\t */\n\tconstructor(name) {\n\t\tthis.name = name;\n\t}\n\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst name = mainTemplate.getAssetPath(this.name || \"\", {\n\t\t\t\thash,\n\t\t\t\tchunk\n\t\t\t});\n\t\t\treturn new ConcatSource(`${name}(`, source, \");\");\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.name) paths.push(this.name);\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.hash.tap(\"JsonpExportMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"jsonp export\");\n\t\t\thash.update(`${this.name}`);\n\t\t});\n\t}\n}\n\nmodule.exports = JsonpExportMainTemplatePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAEnD,MAAMC,6BAA6B,CAAC;EACnC;AACD;AACA;EACCC,WAAWA,CAACC,IAAI,EAAE;IACjB,IAAI,CAACA,IAAI,GAAGA,IAAI;EACjB;EAEAC,KAAKA,CAACC,WAAW,EAAE;IAClB,MAAM;MAAEC,YAAY;MAAEC;IAAc,CAAC,GAAGF,WAAW;IAEnD,MAAMG,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,KAAK;MAClD,MAAMR,IAAI,GAAGG,YAAY,CAACM,YAAY,CAAC,IAAI,CAACT,IAAI,IAAI,EAAE,EAAE;QACvDQ,IAAI;QACJD;MACD,CAAC,CAAC;MACF,OAAO,IAAIX,YAAY,CAAC,GAAGI,IAAI,GAAG,EAAEM,MAAM,EAAE,IAAI,CAAC;IAClD,CAAC;IAED,KAAK,MAAMI,QAAQ,IAAI,CAACP,YAAY,EAAEC,aAAa,CAAC,EAAE;MACrDM,QAAQ,CAACC,KAAK,CAACC,eAAe,CAACC,GAAG,CACjC,+BAA+B,EAC/BR,iBACD,CAAC;IACF;IAEAF,YAAY,CAACQ,KAAK,CAACG,eAAe,CAACD,GAAG,CACrC,+BAA+B,EAC/BE,KAAK,IAAI;MACR,IAAI,IAAI,CAACf,IAAI,EAAEe,KAAK,CAACC,IAAI,CAAC,IAAI,CAAChB,IAAI,CAAC;MACpC,OAAOe,KAAK;IACb,CACD,CAAC;IAEDZ,YAAY,CAACQ,KAAK,CAACH,IAAI,CAACK,GAAG,CAAC,+BAA+B,EAAEL,IAAI,IAAI;MACpEA,IAAI,CAACS,MAAM,CAAC,cAAc,CAAC;MAC3BT,IAAI,CAACS,MAAM,CAAC,GAAG,IAAI,CAACjB,IAAI,EAAE,CAAC;IAC5B,CAAC,CAAC;EACH;AACD;AAEAkB,MAAM,CAACC,OAAO,GAAGrB,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"script"}