{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar path = require(\"path\");\nfunction WatcherManager() {\n  this.directoryWatchers = {};\n}\nWatcherManager.prototype.getDirectoryWatcher = function (directory, options) {\n  var DirectoryWatcher = require(\"./DirectoryWatcher\");\n  options = options || {};\n  var key = directory + \" \" + JSON.stringify(options);\n  if (!this.directoryWatchers[key]) {\n    this.directoryWatchers[key] = new DirectoryWatcher(directory, options);\n    this.directoryWatchers[key].on(\"closed\", function () {\n      delete this.directoryWatchers[key];\n    }.bind(this));\n  }\n  return this.directoryWatchers[key];\n};\nWatcherManager.prototype.watchFile = function watchFile(p, options, startTime) {\n  var directory = path.dirname(p);\n  return this.getDirectoryWatcher(directory, options).watch(p, startTime);\n};\nWatcherManager.prototype.watchDirectory = function watchDirectory(directory, options, startTime) {\n  return this.getDirectoryWatcher(directory, options).watch(directory, startTime);\n};\nmodule.exports = new WatcherManager();","map":{"version":3,"names":["path","require","WatcherManager","directoryWatchers","prototype","getDirectoryWatcher","directory","options","DirectoryWatcher","key","JSON","stringify","on","bind","watchFile","p","startTime","dirname","watch","watchDirectory","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/watchpack/lib/watcherManager.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar path = require(\"path\");\n\nfunction WatcherManager() {\n\tthis.directoryWatchers = {};\n}\n\nWatcherManager.prototype.getDirectoryWatcher = function(directory, options) {\n\tvar DirectoryWatcher = require(\"./DirectoryWatcher\");\n\toptions = options || {};\n\tvar key = directory + \" \" + JSON.stringify(options);\n\tif(!this.directoryWatchers[key]) {\n\t\tthis.directoryWatchers[key] = new DirectoryWatcher(directory, options);\n\t\tthis.directoryWatchers[key].on(\"closed\", function() {\n\t\t\tdelete this.directoryWatchers[key];\n\t\t}.bind(this));\n\t}\n\treturn this.directoryWatchers[key];\n};\n\nWatcherManager.prototype.watchFile = function watchFile(p, options, startTime) {\n\tvar directory = path.dirname(p);\n\treturn this.getDirectoryWatcher(directory, options).watch(p, startTime);\n};\n\nWatcherManager.prototype.watchDirectory = function watchDirectory(directory, options, startTime) {\n\treturn this.getDirectoryWatcher(directory, options).watch(directory, startTime);\n};\n\nmodule.exports = new WatcherManager();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,SAASC,cAAcA,CAAA,EAAG;EACzB,IAAI,CAACC,iBAAiB,GAAG,CAAC,CAAC;AAC5B;AAEAD,cAAc,CAACE,SAAS,CAACC,mBAAmB,GAAG,UAASC,SAAS,EAAEC,OAAO,EAAE;EAC3E,IAAIC,gBAAgB,GAAGP,OAAO,CAAC,oBAAoB,CAAC;EACpDM,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAIE,GAAG,GAAGH,SAAS,GAAG,GAAG,GAAGI,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;EACnD,IAAG,CAAC,IAAI,CAACJ,iBAAiB,CAACM,GAAG,CAAC,EAAE;IAChC,IAAI,CAACN,iBAAiB,CAACM,GAAG,CAAC,GAAG,IAAID,gBAAgB,CAACF,SAAS,EAAEC,OAAO,CAAC;IACtE,IAAI,CAACJ,iBAAiB,CAACM,GAAG,CAAC,CAACG,EAAE,CAAC,QAAQ,EAAE,YAAW;MACnD,OAAO,IAAI,CAACT,iBAAiB,CAACM,GAAG,CAAC;IACnC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,CAAC;EACd;EACA,OAAO,IAAI,CAACV,iBAAiB,CAACM,GAAG,CAAC;AACnC,CAAC;AAEDP,cAAc,CAACE,SAAS,CAACU,SAAS,GAAG,SAASA,SAASA,CAACC,CAAC,EAAER,OAAO,EAAES,SAAS,EAAE;EAC9E,IAAIV,SAAS,GAAGN,IAAI,CAACiB,OAAO,CAACF,CAAC,CAAC;EAC/B,OAAO,IAAI,CAACV,mBAAmB,CAACC,SAAS,EAAEC,OAAO,CAAC,CAACW,KAAK,CAACH,CAAC,EAAEC,SAAS,CAAC;AACxE,CAAC;AAEDd,cAAc,CAACE,SAAS,CAACe,cAAc,GAAG,SAASA,cAAcA,CAACb,SAAS,EAAEC,OAAO,EAAES,SAAS,EAAE;EAChG,OAAO,IAAI,CAACX,mBAAmB,CAACC,SAAS,EAAEC,OAAO,CAAC,CAACW,KAAK,CAACZ,SAAS,EAAEU,SAAS,CAAC;AAChF,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAG,IAAInB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}