{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst figgyPudding = require('figgy-pudding');\nconst fs = require('fs');\nconst index = require('./lib/entry-index');\nconst memo = require('./lib/memoization');\nconst pipe = require('mississippi').pipe;\nconst pipeline = require('mississippi').pipeline;\nconst read = require('./lib/content/read');\nconst through = require('mississippi').through;\nconst GetOpts = figgyPudding({\n  integrity: {},\n  memoize: {},\n  size: {}\n});\nmodule.exports = function get(cache, key, opts) {\n  return getData(false, cache, key, opts);\n};\nmodule.exports.byDigest = function getByDigest(cache, digest, opts) {\n  return getData(true, cache, digest, opts);\n};\nfunction getData(byDigest, cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = byDigest ? memo.get.byDigest(cache, key, opts) : memo.get(cache, key, opts);\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    });\n  }\n  return (byDigest ? BB.resolve(null) : index.find(cache, key, opts)).then(entry => {\n    if (!entry && !byDigest) {\n      throw new index.NotFoundError(cache, key);\n    }\n    return read(cache, byDigest ? key : entry.integrity, {\n      integrity: opts.integrity,\n      size: opts.size\n    }).then(data => byDigest ? data : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }).then(res => {\n      if (opts.memoize && byDigest) {\n        memo.put.byDigest(cache, key, res, opts);\n      } else if (opts.memoize) {\n        memo.put(cache, entry, res.data, opts);\n      }\n      return res;\n    });\n  });\n}\nmodule.exports.sync = function get(cache, key, opts) {\n  return getDataSync(false, cache, key, opts);\n};\nmodule.exports.sync.byDigest = function getByDigest(cache, digest, opts) {\n  return getDataSync(true, cache, digest, opts);\n};\nfunction getDataSync(byDigest, cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = byDigest ? memo.get.byDigest(cache, key, opts) : memo.get(cache, key, opts);\n  if (memoized && opts.memoize !== false) {\n    return byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    };\n  }\n  const entry = !byDigest && index.find.sync(cache, key, opts);\n  if (!entry && !byDigest) {\n    throw new index.NotFoundError(cache, key);\n  }\n  const data = read.sync(cache, byDigest ? key : entry.integrity, {\n    integrity: opts.integrity,\n    size: opts.size\n  });\n  const res = byDigest ? data : {\n    metadata: entry.metadata,\n    data: data,\n    size: entry.size,\n    integrity: entry.integrity\n  };\n  if (opts.memoize && byDigest) {\n    memo.put.byDigest(cache, key, res, opts);\n  } else if (opts.memoize) {\n    memo.put(cache, entry, res.data, opts);\n  }\n  return res;\n}\nmodule.exports.stream = getStream;\nfunction getStream(cache, key, opts) {\n  opts = GetOpts(opts);\n  let stream = through();\n  const memoized = memo.get(cache, key, opts);\n  if (memoized && opts.memoize !== false) {\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(memoized.entry.metadata);\n      ev === 'integrity' && cb(memoized.entry.integrity);\n      ev === 'size' && cb(memoized.entry.size);\n    });\n    stream.write(memoized.data, () => stream.end());\n    return stream;\n  }\n  index.find(cache, key).then(entry => {\n    if (!entry) {\n      return stream.emit('error', new index.NotFoundError(cache, key));\n    }\n    let memoStream;\n    if (opts.memoize) {\n      let memoData = [];\n      let memoLength = 0;\n      memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c);\n        memoLength += c.length;\n        cb(null, c, en);\n      }, cb => {\n        memoData && memo.put(cache, entry, Buffer.concat(memoData, memoLength), opts);\n        cb();\n      });\n    } else {\n      memoStream = through();\n    }\n    stream.emit('metadata', entry.metadata);\n    stream.emit('integrity', entry.integrity);\n    stream.emit('size', entry.size);\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(entry.metadata);\n      ev === 'integrity' && cb(entry.integrity);\n      ev === 'size' && cb(entry.size);\n    });\n    pipe(read.readStream(cache, entry.integrity, opts.concat({\n      size: opts.size == null ? entry.size : opts.size\n    })), memoStream, stream);\n  }).catch(err => stream.emit('error', err));\n  return stream;\n}\nmodule.exports.stream.byDigest = getStreamDigest;\nfunction getStreamDigest(cache, integrity, opts) {\n  opts = GetOpts(opts);\n  const memoized = memo.get.byDigest(cache, integrity, opts);\n  if (memoized && opts.memoize !== false) {\n    const stream = through();\n    stream.write(memoized, () => stream.end());\n    return stream;\n  } else {\n    let stream = read.readStream(cache, integrity, opts);\n    if (opts.memoize) {\n      let memoData = [];\n      let memoLength = 0;\n      const memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c);\n        memoLength += c.length;\n        cb(null, c, en);\n      }, cb => {\n        memoData && memo.put.byDigest(cache, integrity, Buffer.concat(memoData, memoLength), opts);\n        cb();\n      });\n      stream = pipeline(stream, memoStream);\n    }\n    return stream;\n  }\n}\nmodule.exports.info = info;\nfunction info(cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = memo.get(cache, key, opts);\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(memoized.entry);\n  } else {\n    return index.find(cache, key);\n  }\n}\nmodule.exports.hasContent = read.hasContent;\nmodule.exports.copy = function cp(cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts);\n};\nmodule.exports.copy.byDigest = function cpDigest(cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts);\n};\nfunction copy(byDigest, cache, key, dest, opts) {\n  opts = GetOpts(opts);\n  if (read.copy) {\n    return (byDigest ? BB.resolve(null) : index.find(cache, key, opts)).then(entry => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key);\n      }\n      return read.copy(cache, byDigest ? key : entry.integrity, dest, opts).then(() => byDigest ? key : {\n        metadata: entry.metadata,\n        size: entry.size,\n        integrity: entry.integrity\n      });\n    });\n  } else {\n    return getData(byDigest, cache, key, opts).then(res => {\n      return fs.writeFileAsync(dest, byDigest ? res : res.data).then(() => byDigest ? key : {\n        metadata: res.metadata,\n        size: res.size,\n        integrity: res.integrity\n      });\n    });\n  }\n}","map":{"version":3,"names":["BB","require","figgyPudding","fs","index","memo","pipe","pipeline","read","through","GetOpts","integrity","memoize","size","module","exports","get","cache","key","opts","getData","byDigest","getByDigest","digest","memoized","resolve","metadata","entry","data","find","then","NotFoundError","res","put","sync","getDataSync","stream","getStream","on","ev","cb","write","end","emit","memoStream","memoData","memoLength","c","en","push","length","Buffer","concat","readStream","catch","err","getStreamDigest","info","hasContent","copy","cp","dest","cpDigest","writeFileAsync"],"sources":["/home/soon/bulletin-board/node_modules/webpack/node_modules/cacache/get.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst figgyPudding = require('figgy-pudding')\nconst fs = require('fs')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst pipe = require('mississippi').pipe\nconst pipeline = require('mississippi').pipeline\nconst read = require('./lib/content/read')\nconst through = require('mississippi').through\n\nconst GetOpts = figgyPudding({\n  integrity: {},\n  memoize: {},\n  size: {}\n})\n\nmodule.exports = function get (cache, key, opts) {\n  return getData(false, cache, key, opts)\n}\nmodule.exports.byDigest = function getByDigest (cache, digest, opts) {\n  return getData(true, cache, digest, opts)\n}\nfunction getData (byDigest, cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = (\n    byDigest\n      ? memo.get.byDigest(cache, key, opts)\n      : memo.get(cache, key, opts)\n  )\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    })\n  }\n  return (\n    byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n  ).then(entry => {\n    if (!entry && !byDigest) {\n      throw new index.NotFoundError(cache, key)\n    }\n    return read(cache, byDigest ? key : entry.integrity, {\n      integrity: opts.integrity,\n      size: opts.size\n    }).then(data => byDigest ? data : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }).then(res => {\n      if (opts.memoize && byDigest) {\n        memo.put.byDigest(cache, key, res, opts)\n      } else if (opts.memoize) {\n        memo.put(cache, entry, res.data, opts)\n      }\n      return res\n    })\n  })\n}\n\nmodule.exports.sync = function get (cache, key, opts) {\n  return getDataSync(false, cache, key, opts)\n}\nmodule.exports.sync.byDigest = function getByDigest (cache, digest, opts) {\n  return getDataSync(true, cache, digest, opts)\n}\nfunction getDataSync (byDigest, cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = (\n    byDigest\n      ? memo.get.byDigest(cache, key, opts)\n      : memo.get(cache, key, opts)\n  )\n  if (memoized && opts.memoize !== false) {\n    return byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    }\n  }\n  const entry = !byDigest && index.find.sync(cache, key, opts)\n  if (!entry && !byDigest) {\n    throw new index.NotFoundError(cache, key)\n  }\n  const data = read.sync(\n    cache,\n    byDigest ? key : entry.integrity,\n    {\n      integrity: opts.integrity,\n      size: opts.size\n    }\n  )\n  const res = byDigest\n    ? data\n    : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }\n  if (opts.memoize && byDigest) {\n    memo.put.byDigest(cache, key, res, opts)\n  } else if (opts.memoize) {\n    memo.put(cache, entry, res.data, opts)\n  }\n  return res\n}\n\nmodule.exports.stream = getStream\nfunction getStream (cache, key, opts) {\n  opts = GetOpts(opts)\n  let stream = through()\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(memoized.entry.metadata)\n      ev === 'integrity' && cb(memoized.entry.integrity)\n      ev === 'size' && cb(memoized.entry.size)\n    })\n    stream.write(memoized.data, () => stream.end())\n    return stream\n  }\n  index.find(cache, key).then(entry => {\n    if (!entry) {\n      return stream.emit(\n        'error', new index.NotFoundError(cache, key)\n      )\n    }\n    let memoStream\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put(cache, entry, Buffer.concat(memoData, memoLength), opts)\n        cb()\n      })\n    } else {\n      memoStream = through()\n    }\n    stream.emit('metadata', entry.metadata)\n    stream.emit('integrity', entry.integrity)\n    stream.emit('size', entry.size)\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(entry.metadata)\n      ev === 'integrity' && cb(entry.integrity)\n      ev === 'size' && cb(entry.size)\n    })\n    pipe(\n      read.readStream(cache, entry.integrity, opts.concat({\n        size: opts.size == null ? entry.size : opts.size\n      })),\n      memoStream,\n      stream\n    )\n  }).catch(err => stream.emit('error', err))\n  return stream\n}\n\nmodule.exports.stream.byDigest = getStreamDigest\nfunction getStreamDigest (cache, integrity, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get.byDigest(cache, integrity, opts)\n  if (memoized && opts.memoize !== false) {\n    const stream = through()\n    stream.write(memoized, () => stream.end())\n    return stream\n  } else {\n    let stream = read.readStream(cache, integrity, opts)\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      const memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put.byDigest(\n          cache,\n          integrity,\n          Buffer.concat(memoData, memoLength),\n          opts\n        )\n        cb()\n      })\n      stream = pipeline(stream, memoStream)\n    }\n    return stream\n  }\n}\n\nmodule.exports.info = info\nfunction info (cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(memoized.entry)\n  } else {\n    return index.find(cache, key)\n  }\n}\n\nmodule.exports.hasContent = read.hasContent\n\nmodule.exports.copy = function cp (cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts)\n}\nmodule.exports.copy.byDigest = function cpDigest (cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts)\n}\nfunction copy (byDigest, cache, key, dest, opts) {\n  opts = GetOpts(opts)\n  if (read.copy) {\n    return (\n      byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n    ).then(entry => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key)\n      }\n      return read.copy(\n        cache, byDigest ? key : entry.integrity, dest, opts\n      ).then(() => byDigest ? key : {\n        metadata: entry.metadata,\n        size: entry.size,\n        integrity: entry.integrity\n      })\n    })\n  } else {\n    return getData(byDigest, cache, key, opts).then(res => {\n      return fs.writeFileAsync(dest, byDigest ? res : res.data)\n        .then(() => byDigest ? key : {\n          metadata: res.metadata,\n          size: res.size,\n          integrity: res.integrity\n        })\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}