{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _sourceMap = require(\"source-map\");\nvar _webpackSources = require(\"webpack-sources\");\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\nvar _options = _interopRequireDefault(require(\"./options.json\"));\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /* eslint-disable\n  no-param-reassign\n  */\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\nconst internalCreateHash = algorithm => {\n  try {\n    // eslint-disable-next-line global-require\n    const createHash = require('webpack/lib/util/createHash');\n    return createHash(algorithm);\n  } catch (err) {\n    // Ignore\n  }\n\n  // eslint-disable-next-line global-require\n  return require('crypto').createHash(algorithm);\n};\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n        if (processedAssets.has(asset)) {\n          return;\n        }\n        try {\n          let input;\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          }\n\n          // Handling comment extraction\n          let commentsFile = false;\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: internalCreateHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          }\n\n          // Handling results\n          // Error case: add errors, and go to next file\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n          let outputSource;\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          }\n\n          // Write extracted comments to commentsFile\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          }\n\n          // Updating assets\n          processedAssets.add(compilation.assets[file] = outputSource);\n\n          // Handling warnings\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation;\n\n      // Regenerate `contenthash` for minified assets\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n}\nvar _default = exports.default = TerserPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_path","_interopRequireDefault","require","_sourceMap","_webpackSources","_RequestShortener","_ModuleFilenameHelpers","_schemaUtils","_serializeJavascript","_package","_options","_TaskRunner","e","__esModule","ownKeys","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","warningRegex","internalCreateHash","algorithm","createHash","err","TerserPlugin","constructor","options","minify","terserOptions","test","chunkFilter","warningsFilter","extractComments","sourceMap","cache","cacheKeys","defaultCacheKeys","parallel","include","exclude","output","comments","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildSourceMap","inputSourceMap","SourceMapConsumer","buildError","file","requestShortener","line","original","originalPositionFor","column","col","source","Error","message","shorten","stack","buildWarning","warning","warningMessage","locationMessage","match","exec","replace","compiler","buildModuleFn","moduleArg","useSourceMap","optimizeFn","compilation","chunks","callback","taskRunner","processedAssets","WeakSet","tasks","from","chunk","reduce","acc","concat","files","additionalChunkAssets","matchObject","bind","asset","assets","has","sourceAndMap","map","warnings","commentsFile","filename","task","terser","node_version","process","hash","update","digest","error","errors","context","run","tasksError","results","data","index","code","extractedComments","outputSource","SourceMapSource","JSON","parse","RawSource","commentsFileSource","comment","includes","banner","posix","basename","ConcatSource","commentsSource","join","add","builtWarning","exit","plugin","name","hooks","tap","buildModule","mainTemplate","chunkTemplate","template","hashForChunk","optimizeChunkAssets","tapAsync","_default"],"sources":["/home/soon/bulletin-board/node_modules/webpack/node_modules/terser-webpack-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _sourceMap = require(\"source-map\");\nvar _webpackSources = require(\"webpack-sources\");\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\nvar _options = _interopRequireDefault(require(\"./options.json\"));\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /* eslint-disable\n  no-param-reassign\n*/\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\nconst internalCreateHash = algorithm => {\n  try {\n    // eslint-disable-next-line global-require\n    const createHash = require('webpack/lib/util/createHash');\n    return createHash(algorithm);\n  } catch (err) {\n    // Ignore\n  }\n\n  // eslint-disable-next-line global-require\n  return require('crypto').createHash(algorithm);\n};\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n        if (processedAssets.has(asset)) {\n          return;\n        }\n        try {\n          let input;\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          }\n\n          // Handling comment extraction\n          let commentsFile = false;\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: internalCreateHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          }\n\n          // Handling results\n          // Error case: add errors, and go to next file\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n          let outputSource;\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          }\n\n          // Write extracted comments to commentsFile\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          }\n\n          // Updating assets\n          processedAssets.add(compilation.assets[file] = outputSource);\n\n          // Handling warnings\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation;\n\n      // Regenerate `contenthash` for minified assets\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n}\nvar _default = exports.default = TerserPlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}