{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass HookMap {\n  constructor(factory) {\n    this._map = new Map();\n    this._factory = factory;\n    this._interceptors = [];\n  }\n  get(key) {\n    return this._map.get(key);\n  }\n  for(key) {\n    const hook = this.get(key);\n    if (hook !== undefined) {\n      return hook;\n    }\n    let newHook = this._factory(key);\n    const interceptors = this._interceptors;\n    for (let i = 0; i < interceptors.length; i++) {\n      newHook = interceptors[i].factory(key, newHook);\n    }\n    this._map.set(key, newHook);\n    return newHook;\n  }\n  intercept(interceptor) {\n    this._interceptors.push(Object.assign({\n      factory: (key, hook) => hook\n    }, interceptor));\n  }\n  tap(key, options, fn) {\n    return this.for(key).tap(options, fn);\n  }\n  tapAsync(key, options, fn) {\n    return this.for(key).tapAsync(options, fn);\n  }\n  tapPromise(key, options, fn) {\n    return this.for(key).tapPromise(options, fn);\n  }\n}\nmodule.exports = HookMap;","map":{"version":3,"names":["HookMap","constructor","factory","_map","Map","_factory","_interceptors","get","key","for","hook","undefined","newHook","interceptors","i","length","set","intercept","interceptor","push","Object","assign","tap","options","fn","tapAsync","tapPromise","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/tapable/lib/HookMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass HookMap {\n\tconstructor(factory) {\n\t\tthis._map = new Map();\n\t\tthis._factory = factory;\n\t\tthis._interceptors = [];\n\t}\n\n\tget(key) {\n\t\treturn this._map.get(key);\n\t}\n\n\tfor(key) {\n\t\tconst hook = this.get(key);\n\t\tif (hook !== undefined) {\n\t\t\treturn hook;\n\t\t}\n\t\tlet newHook = this._factory(key);\n\t\tconst interceptors = this._interceptors;\n\t\tfor (let i = 0; i < interceptors.length; i++) {\n\t\t\tnewHook = interceptors[i].factory(key, newHook);\n\t\t}\n\t\tthis._map.set(key, newHook);\n\t\treturn newHook;\n\t}\n\n\tintercept(interceptor) {\n\t\tthis._interceptors.push(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tfactory: (key, hook) => hook\n\t\t\t\t},\n\t\t\t\tinterceptor\n\t\t\t)\n\t\t);\n\t}\n\n\ttap(key, options, fn) {\n\t\treturn this.for(key).tap(options, fn);\n\t}\n\n\ttapAsync(key, options, fn) {\n\t\treturn this.for(key).tapAsync(options, fn);\n\t}\n\n\ttapPromise(key, options, fn) {\n\t\treturn this.for(key).tapPromise(options, fn);\n\t}\n}\n\nmodule.exports = HookMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,OAAO,CAAC;EACbC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,IAAI,CAACC,QAAQ,GAAGH,OAAO;IACvB,IAAI,CAACI,aAAa,GAAG,EAAE;EACxB;EAEAC,GAAGA,CAACC,GAAG,EAAE;IACR,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAACC,GAAG,CAAC;EAC1B;EAEAC,GAAGA,CAACD,GAAG,EAAE;IACR,MAAME,IAAI,GAAG,IAAI,CAACH,GAAG,CAACC,GAAG,CAAC;IAC1B,IAAIE,IAAI,KAAKC,SAAS,EAAE;MACvB,OAAOD,IAAI;IACZ;IACA,IAAIE,OAAO,GAAG,IAAI,CAACP,QAAQ,CAACG,GAAG,CAAC;IAChC,MAAMK,YAAY,GAAG,IAAI,CAACP,aAAa;IACvC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,YAAY,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7CF,OAAO,GAAGC,YAAY,CAACC,CAAC,CAAC,CAACZ,OAAO,CAACM,GAAG,EAAEI,OAAO,CAAC;IAChD;IACA,IAAI,CAACT,IAAI,CAACa,GAAG,CAACR,GAAG,EAAEI,OAAO,CAAC;IAC3B,OAAOA,OAAO;EACf;EAEAK,SAASA,CAACC,WAAW,EAAE;IACtB,IAAI,CAACZ,aAAa,CAACa,IAAI,CACtBC,MAAM,CAACC,MAAM,CACZ;MACCnB,OAAO,EAAEA,CAACM,GAAG,EAAEE,IAAI,KAAKA;IACzB,CAAC,EACDQ,WACD,CACD,CAAC;EACF;EAEAI,GAAGA,CAACd,GAAG,EAAEe,OAAO,EAAEC,EAAE,EAAE;IACrB,OAAO,IAAI,CAACf,GAAG,CAACD,GAAG,CAAC,CAACc,GAAG,CAACC,OAAO,EAAEC,EAAE,CAAC;EACtC;EAEAC,QAAQA,CAACjB,GAAG,EAAEe,OAAO,EAAEC,EAAE,EAAE;IAC1B,OAAO,IAAI,CAACf,GAAG,CAACD,GAAG,CAAC,CAACiB,QAAQ,CAACF,OAAO,EAAEC,EAAE,CAAC;EAC3C;EAEAE,UAAUA,CAAClB,GAAG,EAAEe,OAAO,EAAEC,EAAE,EAAE;IAC5B,OAAO,IAAI,CAACf,GAAG,CAACD,GAAG,CAAC,CAACkB,UAAU,CAACH,OAAO,EAAEC,EAAE,CAAC;EAC7C;AACD;AAEAG,MAAM,CAACC,OAAO,GAAG5B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script"}