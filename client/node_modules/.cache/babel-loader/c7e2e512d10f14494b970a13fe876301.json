{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass SingleEntryPlugin {\n  /**\n   * An entry plugin which will handle\n   * creation of the SingleEntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {string} name entry key name\n   */\n  constructor(context, entry, name) {\n    this.context = context;\n    this.entry = entry;\n    this.name = name;\n  }\n\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"SingleEntryPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapAsync(\"SingleEntryPlugin\", (compilation, callback) => {\n      const {\n        entry,\n        name,\n        context\n      } = this;\n      const dep = SingleEntryPlugin.createDependency(entry, name);\n      compilation.addEntry(context, dep, name, callback);\n    });\n  }\n\n  /**\n   * @param {string} entry entry request\n   * @param {string} name entry name\n   * @returns {SingleEntryDependency} the dependency\n   */\n  static createDependency(entry, name) {\n    const dep = new SingleEntryDependency(entry);\n    dep.loc = {\n      name\n    };\n    return dep;\n  }\n}\nmodule.exports = SingleEntryPlugin;","map":{"version":3,"names":["SingleEntryDependency","require","SingleEntryPlugin","constructor","context","entry","name","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapAsync","callback","dep","createDependency","addEntry","loc","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/SingleEntryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass SingleEntryPlugin {\n\t/**\n\t * An entry plugin which will handle\n\t * creation of the SingleEntryDependency\n\t *\n\t * @param {string} context context path\n\t * @param {string} entry entry path\n\t * @param {string} name entry key name\n\t */\n\tconstructor(context, entry, name) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst { entry, name, context } = this;\n\n\t\t\t\tconst dep = SingleEntryPlugin.createDependency(entry, name);\n\t\t\t\tcompilation.addEntry(context, dep, name, callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} entry entry request\n\t * @param {string} name entry name\n\t * @returns {SingleEntryDependency} the dependency\n\t */\n\tstatic createDependency(entry, name) {\n\t\tconst dep = new SingleEntryDependency(entry);\n\t\tdep.loc = { name };\n\t\treturn dep;\n\t}\n}\n\nmodule.exports = SingleEntryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZ,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,sCAAsC,CAAC;;AAE7E;;AAEA,MAAMC,iBAAiB,CAAC;EACvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAACC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAE;IACjC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,mBAAmB,EACnB,CAACD,WAAW,EAAE;MAAEE;IAAoB,CAAC,KAAK;MACzCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAClCd,qBAAqB,EACrBY,mBACD,CAAC;IACF,CACD,CAAC;IAEDJ,QAAQ,CAACC,KAAK,CAACM,IAAI,CAACC,QAAQ,CAC3B,mBAAmB,EACnB,CAACN,WAAW,EAAEO,QAAQ,KAAK;MAC1B,MAAM;QAAEZ,KAAK;QAAEC,IAAI;QAAEF;MAAQ,CAAC,GAAG,IAAI;MAErC,MAAMc,GAAG,GAAGhB,iBAAiB,CAACiB,gBAAgB,CAACd,KAAK,EAAEC,IAAI,CAAC;MAC3DI,WAAW,CAACU,QAAQ,CAAChB,OAAO,EAAEc,GAAG,EAAEZ,IAAI,EAAEW,QAAQ,CAAC;IACnD,CACD,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;EACC,OAAOE,gBAAgBA,CAACd,KAAK,EAAEC,IAAI,EAAE;IACpC,MAAMY,GAAG,GAAG,IAAIlB,qBAAqB,CAACK,KAAK,CAAC;IAC5Ca,GAAG,CAACG,GAAG,GAAG;MAAEf;IAAK,CAAC;IAClB,OAAOY,GAAG;EACX;AACD;AAEAI,MAAM,CAACC,OAAO,GAAGrB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script"}