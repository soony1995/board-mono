{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\nvar SPLIT_REGEX = /(?!$)[^\\n\\r;{}]*[\\n\\r;{}]*/g;\nfunction _splitCode(code) {\n  return code.match(SPLIT_REGEX) || [];\n}\nclass OriginalSource extends Source {\n  constructor(value, name) {\n    super();\n    this._value = value;\n    this._name = name;\n  }\n  source() {\n    return this._value;\n  }\n  node(options) {\n    options = options || {};\n    var sourceMap = this._sourceMap;\n    var value = this._value;\n    var name = this._name;\n    var lines = value.split(\"\\n\");\n    var node = new SourceNode(null, null, null, lines.map(function (line, idx) {\n      var pos = 0;\n      if (options.columns === false) {\n        var content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\n        return new SourceNode(idx + 1, 0, name, content);\n      }\n      return new SourceNode(null, null, null, _splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function (item) {\n        if (/^\\s*$/.test(item)) {\n          pos += item.length;\n          return item;\n        }\n        var res = new SourceNode(idx + 1, pos, name, item);\n        pos += item.length;\n        return res;\n      }));\n    }));\n    node.setSourceContent(name, value);\n    return node;\n  }\n  listMap(options) {\n    return new SourceListMap(this._value, this._name, this._value);\n  }\n  updateHash(hash) {\n    hash.update(this._value);\n  }\n}\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\nmodule.exports = OriginalSource;","map":{"version":3,"names":["SourceNode","require","SourceMapConsumer","SourceListMap","Source","SPLIT_REGEX","_splitCode","code","match","OriginalSource","constructor","value","name","_value","_name","source","node","options","sourceMap","_sourceMap","lines","split","map","line","idx","pos","columns","content","length","item","test","res","setSourceContent","listMap","updateHash","hash","update","prototype","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack-sources/lib/OriginalSource.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nvar SPLIT_REGEX = /(?!$)[^\\n\\r;{}]*[\\n\\r;{}]*/g;\n\nfunction _splitCode(code) {\n\treturn code.match(SPLIT_REGEX) || [];\n}\n\nclass OriginalSource extends Source {\n\tconstructor(value, name) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\toptions = options || {};\n\t\tvar sourceMap = this._sourceMap;\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\tvar pos = 0;\n\t\t\t\tif(options.columns === false) {\n\t\t\t\t\tvar content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\n\t\t\t\t\treturn new SourceNode(idx + 1, 0, name, content);\n\t\t\t\t}\n\t\t\t\treturn new SourceNode(null, null, null,\n\t\t\t\t\t_splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function(item) {\n\t\t\t\t\t\tif(/^\\s*$/.test(item)) {\n\t\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = new SourceNode(idx + 1, pos, name, item);\n\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, value);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._value)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\n\nmodule.exports = OriginalSource;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}