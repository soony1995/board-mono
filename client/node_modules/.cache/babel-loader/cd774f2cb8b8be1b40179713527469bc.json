{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\nclass LibManifestPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"LibManifestPlugin\", (compilation, callback) => {\n      asyncLib.forEach(compilation.chunks, (chunk, callback) => {\n        if (!chunk.isOnlyInitial()) {\n          callback();\n          return;\n        }\n        const targetPath = compilation.getPath(this.options.path, {\n          hash: compilation.hash,\n          chunk\n        });\n        const name = this.options.name && compilation.getPath(this.options.name, {\n          hash: compilation.hash,\n          chunk\n        });\n        const manifest = {\n          name,\n          type: this.options.type,\n          content: Array.from(chunk.modulesIterable, module => {\n            if (this.options.entryOnly && !module.reasons.some(r => r.dependency instanceof SingleEntryDependency)) {\n              return;\n            }\n            if (module.libIdent) {\n              const ident = module.libIdent({\n                context: this.options.context || compiler.options.context\n              });\n              if (ident) {\n                return {\n                  ident,\n                  data: {\n                    id: module.id,\n                    buildMeta: module.buildMeta\n                  }\n                };\n              }\n            }\n          }).filter(Boolean).reduce((obj, item) => {\n            obj[item.ident] = item.data;\n            return obj;\n          }, Object.create(null))\n        };\n        // Apply formatting to content if format flag is true;\n        const manifestContent = this.options.format ? JSON.stringify(manifest, null, 2) : JSON.stringify(manifest);\n        const content = Buffer.from(manifestContent, \"utf8\");\n        compiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n          if (err) return callback(err);\n          compiler.outputFileSystem.writeFile(targetPath, content, callback);\n        });\n      }, callback);\n    });\n  }\n}\nmodule.exports = LibManifestPlugin;","map":{"version":3,"names":["path","require","asyncLib","SingleEntryDependency","LibManifestPlugin","constructor","options","apply","compiler","hooks","emit","tapAsync","compilation","callback","forEach","chunks","chunk","isOnlyInitial","targetPath","getPath","hash","name","manifest","type","content","Array","from","modulesIterable","module","entryOnly","reasons","some","r","dependency","libIdent","ident","context","data","id","buildMeta","filter","Boolean","reduce","obj","item","Object","create","manifestContent","format","JSON","stringify","Buffer","outputFileSystem","mkdirp","dirname","err","writeFile","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/LibManifestPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompilation.chunks,\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.isOnlyInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent: Array.from(chunk.modulesIterable, module => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t\t!module.reasons.some(\n\t\t\t\t\t\t\t\t\t\tr => r.dependency instanceof SingleEntryDependency\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t.reduce((obj, item) => {\n\t\t\t\t\t\t\t\t\tobj[item.ident] = item.data;\n\t\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\t}, Object.create(null))\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst content = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tcompiler.outputFileSystem.writeFile(\n\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}