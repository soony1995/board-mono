{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\nconst addToSet = (a, b) => {\n  for (const item of b) {\n    if (!a.includes(item)) a.push(item);\n  }\n  return a;\n};\nconst isSubset = (biggerSet, subset) => {\n  if (biggerSet === true) return true;\n  if (subset === true) return false;\n  return subset.every(item => biggerSet.indexOf(item) >= 0);\n};\nclass FlagDependencyUsagePlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", compilation => {\n      compilation.hooks.optimizeDependencies.tap(\"FlagDependencyUsagePlugin\", modules => {\n        const processModule = (module, usedExports) => {\n          module.used = true;\n          if (module.usedExports === true) return;\n          if (usedExports === true) {\n            module.usedExports = true;\n          } else if (Array.isArray(usedExports)) {\n            const old = module.usedExports ? module.usedExports.length : -1;\n            module.usedExports = addToSet(module.usedExports || [], usedExports);\n            if (module.usedExports.length === old) {\n              return;\n            }\n          } else if (Array.isArray(module.usedExports)) {\n            return;\n          } else {\n            module.usedExports = false;\n          }\n\n          // for a module without side effects we stop tracking usage here when no export is used\n          // This module won't be evaluated in this case\n          if (module.factoryMeta.sideEffectFree) {\n            if (module.usedExports === false) return;\n            if (Array.isArray(module.usedExports) && module.usedExports.length === 0) return;\n          }\n          queue.push([module, module, module.usedExports]);\n        };\n        const processDependenciesBlock = (module, depBlock, usedExports) => {\n          for (const dep of depBlock.dependencies) {\n            processDependency(module, dep);\n          }\n          for (const variable of depBlock.variables) {\n            for (const dep of variable.dependencies) {\n              processDependency(module, dep);\n            }\n          }\n          for (const block of depBlock.blocks) {\n            queue.push([module, block, usedExports]);\n          }\n        };\n        const processDependency = (module, dep) => {\n          const reference = compilation.getDependencyReference(module, dep);\n          if (!reference) return;\n          const referenceModule = reference.module;\n          const importedNames = reference.importedNames;\n          const oldUsed = referenceModule.used;\n          const oldUsedExports = referenceModule.usedExports;\n          if (!oldUsed || importedNames && (!oldUsedExports || !isSubset(oldUsedExports, importedNames))) {\n            processModule(referenceModule, importedNames);\n          }\n        };\n        for (const module of modules) {\n          if (!module.used) module.used = false;\n        }\n\n        /** @type {[Module, DependenciesBlock, UsedExports][]} */\n        const queue = [];\n        for (const preparedEntrypoint of compilation._preparedEntrypoints) {\n          if (preparedEntrypoint.module) {\n            processModule(preparedEntrypoint.module, true);\n          }\n        }\n        while (queue.length) {\n          const queueItem = queue.pop();\n          processDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n        }\n      });\n    });\n  }\n}\nmodule.exports = FlagDependencyUsagePlugin;","map":{"version":3,"names":["addToSet","a","b","item","includes","push","isSubset","biggerSet","subset","every","indexOf","FlagDependencyUsagePlugin","apply","compiler","hooks","compilation","tap","optimizeDependencies","modules","processModule","module","usedExports","used","Array","isArray","old","length","factoryMeta","sideEffectFree","queue","processDependenciesBlock","depBlock","dep","dependencies","processDependency","variable","variables","block","blocks","reference","getDependencyReference","referenceModule","importedNames","oldUsed","oldUsedExports","preparedEntrypoint","_preparedEntrypoints","queueItem","pop","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/FlagDependencyUsagePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\n\nconst addToSet = (a, b) => {\n\tfor (const item of b) {\n\t\tif (!a.includes(item)) a.push(item);\n\t}\n\treturn a;\n};\n\nconst isSubset = (biggerSet, subset) => {\n\tif (biggerSet === true) return true;\n\tif (subset === true) return false;\n\treturn subset.every(item => biggerSet.indexOf(item) >= 0);\n};\n\nclass FlagDependencyUsagePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\"FlagDependencyUsagePlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tconst processModule = (module, usedExports) => {\n\t\t\t\t\t\tmodule.used = true;\n\t\t\t\t\t\tif (module.usedExports === true) return;\n\t\t\t\t\t\tif (usedExports === true) {\n\t\t\t\t\t\t\tmodule.usedExports = true;\n\t\t\t\t\t\t} else if (Array.isArray(usedExports)) {\n\t\t\t\t\t\t\tconst old = module.usedExports ? module.usedExports.length : -1;\n\t\t\t\t\t\t\tmodule.usedExports = addToSet(\n\t\t\t\t\t\t\t\tmodule.usedExports || [],\n\t\t\t\t\t\t\t\tusedExports\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (module.usedExports.length === old) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmodule.usedExports = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// for a module without side effects we stop tracking usage here when no export is used\n\t\t\t\t\t\t// This module won't be evaluated in this case\n\t\t\t\t\t\tif (module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\tif (module.usedExports === false) return;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqueue.push([module, module, module.usedExports]);\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependenciesBlock = (module, depBlock, usedExports) => {\n\t\t\t\t\t\tfor (const dep of depBlock.dependencies) {\n\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const variable of depBlock.variables) {\n\t\t\t\t\t\t\tfor (const dep of variable.dependencies) {\n\t\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const block of depBlock.blocks) {\n\t\t\t\t\t\t\tqueue.push([module, block, usedExports]);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependency = (module, dep) => {\n\t\t\t\t\t\tconst reference = compilation.getDependencyReference(module, dep);\n\t\t\t\t\t\tif (!reference) return;\n\t\t\t\t\t\tconst referenceModule = reference.module;\n\t\t\t\t\t\tconst importedNames = reference.importedNames;\n\t\t\t\t\t\tconst oldUsed = referenceModule.used;\n\t\t\t\t\t\tconst oldUsedExports = referenceModule.usedExports;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!oldUsed ||\n\t\t\t\t\t\t\t(importedNames &&\n\t\t\t\t\t\t\t\t(!oldUsedExports || !isSubset(oldUsedExports, importedNames)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tprocessModule(referenceModule, importedNames);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (!module.used) module.used = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {[Module, DependenciesBlock, UsedExports][]} */\n\t\t\t\t\tconst queue = [];\n\t\t\t\t\tfor (const preparedEntrypoint of compilation._preparedEntrypoints) {\n\t\t\t\t\t\tif (preparedEntrypoint.module) {\n\t\t\t\t\t\t\tprocessModule(preparedEntrypoint.module, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\tconst queueItem = queue.pop();\n\t\t\t\t\t\tprocessDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = FlagDependencyUsagePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}