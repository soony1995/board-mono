{"ast":null,"code":"'use strict';\n\nconst figgyPudding = require('figgy-pudding');\nconst index = require('./lib/entry-index');\nconst memo = require('./lib/memoization');\nconst write = require('./lib/content/write');\nconst to = require('mississippi').to;\nconst PutOpts = figgyPudding({\n  algorithms: {\n    default: ['sha512']\n  },\n  integrity: {},\n  memoize: {},\n  metadata: {},\n  pickAlgorithm: {},\n  size: {},\n  tmpPrefix: {},\n  single: {},\n  sep: {},\n  error: {},\n  strict: {}\n});\nmodule.exports = putData;\nfunction putData(cache, key, data, opts) {\n  opts = PutOpts(opts);\n  return write(cache, data, opts).then(res => {\n    return index.insert(cache, key, res.integrity, opts.concat({\n      size: res.size\n    })).then(entry => {\n      if (opts.memoize) {\n        memo.put(cache, entry, data, opts);\n      }\n      return res.integrity;\n    });\n  });\n}\nmodule.exports.stream = putStream;\nfunction putStream(cache, key, opts) {\n  opts = PutOpts(opts);\n  let integrity;\n  let size;\n  const contentStream = write.stream(cache, opts).on('integrity', int => {\n    integrity = int;\n  }).on('size', s => {\n    size = s;\n  });\n  let memoData;\n  let memoTotal = 0;\n  const stream = to((chunk, enc, cb) => {\n    contentStream.write(chunk, enc, () => {\n      if (opts.memoize) {\n        if (!memoData) {\n          memoData = [];\n        }\n        memoData.push(chunk);\n        memoTotal += chunk.length;\n      }\n      cb();\n    });\n  }, cb => {\n    contentStream.end(() => {\n      index.insert(cache, key, integrity, opts.concat({\n        size\n      })).then(entry => {\n        if (opts.memoize) {\n          memo.put(cache, entry, Buffer.concat(memoData, memoTotal), opts);\n        }\n        stream.emit('integrity', integrity);\n        cb();\n      });\n    });\n  });\n  let erred = false;\n  stream.once('error', err => {\n    if (erred) {\n      return;\n    }\n    erred = true;\n    contentStream.emit('error', err);\n  });\n  contentStream.once('error', err => {\n    if (erred) {\n      return;\n    }\n    erred = true;\n    stream.emit('error', err);\n  });\n  return stream;\n}","map":{"version":3,"names":["figgyPudding","require","index","memo","write","to","PutOpts","algorithms","default","integrity","memoize","metadata","pickAlgorithm","size","tmpPrefix","single","sep","error","strict","module","exports","putData","cache","key","data","opts","then","res","insert","concat","entry","put","stream","putStream","contentStream","on","int","s","memoData","memoTotal","chunk","enc","cb","push","length","end","Buffer","emit","erred","once","err"],"sources":["/home/soon/bulletin-board/node_modules/webpack/node_modules/cacache/put.js"],"sourcesContent":["'use strict'\n\nconst figgyPudding = require('figgy-pudding')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst write = require('./lib/content/write')\nconst to = require('mississippi').to\n\nconst PutOpts = figgyPudding({\n  algorithms: {\n    default: ['sha512']\n  },\n  integrity: {},\n  memoize: {},\n  metadata: {},\n  pickAlgorithm: {},\n  size: {},\n  tmpPrefix: {},\n  single: {},\n  sep: {},\n  error: {},\n  strict: {}\n})\n\nmodule.exports = putData\nfunction putData (cache, key, data, opts) {\n  opts = PutOpts(opts)\n  return write(cache, data, opts).then(res => {\n    return index.insert(\n      cache, key, res.integrity, opts.concat({ size: res.size })\n    ).then(entry => {\n      if (opts.memoize) {\n        memo.put(cache, entry, data, opts)\n      }\n      return res.integrity\n    })\n  })\n}\n\nmodule.exports.stream = putStream\nfunction putStream (cache, key, opts) {\n  opts = PutOpts(opts)\n  let integrity\n  let size\n  const contentStream = write.stream(\n    cache, opts\n  ).on('integrity', int => {\n    integrity = int\n  }).on('size', s => {\n    size = s\n  })\n  let memoData\n  let memoTotal = 0\n  const stream = to((chunk, enc, cb) => {\n    contentStream.write(chunk, enc, () => {\n      if (opts.memoize) {\n        if (!memoData) { memoData = [] }\n        memoData.push(chunk)\n        memoTotal += chunk.length\n      }\n      cb()\n    })\n  }, cb => {\n    contentStream.end(() => {\n      index.insert(cache, key, integrity, opts.concat({ size })).then(entry => {\n        if (opts.memoize) {\n          memo.put(cache, entry, Buffer.concat(memoData, memoTotal), opts)\n        }\n        stream.emit('integrity', integrity)\n        cb()\n      })\n    })\n  })\n  let erred = false\n  stream.once('error', err => {\n    if (erred) { return }\n    erred = true\n    contentStream.emit('error', err)\n  })\n  contentStream.once('error', err => {\n    if (erred) { return }\n    erred = true\n    stream.emit('error', err)\n  })\n  return stream\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}