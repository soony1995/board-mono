{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nconst createConsoleLogger = require(\"../logging/createConsoleLogger\");\nconst nodeConsole = require(\"./nodeConsole\");\nclass NodeEnvironmentPlugin {\n  constructor(options) {\n    this.options = options || {};\n  }\n  apply(compiler) {\n    compiler.infrastructureLogger = createConsoleLogger(Object.assign({\n      level: \"info\",\n      debug: false,\n      console: nodeConsole\n    }, this.options.infrastructureLogging));\n    compiler.inputFileSystem = new CachedInputFileSystem(new NodeJsInputFileSystem(), 60000);\n    const inputFileSystem = compiler.inputFileSystem;\n    compiler.outputFileSystem = new NodeOutputFileSystem();\n    compiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);\n    compiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", compiler => {\n      if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n    });\n  }\n}\nmodule.exports = NodeEnvironmentPlugin;","map":{"version":3,"names":["NodeWatchFileSystem","require","NodeOutputFileSystem","NodeJsInputFileSystem","CachedInputFileSystem","createConsoleLogger","nodeConsole","NodeEnvironmentPlugin","constructor","options","apply","compiler","infrastructureLogger","Object","assign","level","debug","console","infrastructureLogging","inputFileSystem","outputFileSystem","watchFileSystem","hooks","beforeRun","tap","purge","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/node/NodeEnvironmentPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nconst createConsoleLogger = require(\"../logging/createConsoleLogger\");\nconst nodeConsole = require(\"./nodeConsole\");\n\nclass NodeEnvironmentPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.infrastructureLogger = createConsoleLogger(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tlevel: \"info\",\n\t\t\t\t\tdebug: false,\n\t\t\t\t\tconsole: nodeConsole\n\t\t\t\t},\n\t\t\t\tthis.options.infrastructureLogging\n\t\t\t)\n\t\t);\n\t\tcompiler.inputFileSystem = new CachedInputFileSystem(\n\t\t\tnew NodeJsInputFileSystem(),\n\t\t\t60000\n\t\t);\n\t\tconst inputFileSystem = compiler.inputFileSystem;\n\t\tcompiler.outputFileSystem = new NodeOutputFileSystem();\n\t\tcompiler.watchFileSystem = new NodeWatchFileSystem(\n\t\t\tcompiler.inputFileSystem\n\t\t);\n\t\tcompiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", compiler => {\n\t\t\tif (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n\t\t});\n\t}\n}\nmodule.exports = NodeEnvironmentPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC5D,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAME,qBAAqB,GAAGF,OAAO,CAAC,4CAA4C,CAAC;AACnF,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,4CAA4C,CAAC;AACnF,MAAMI,mBAAmB,GAAGJ,OAAO,CAAC,gCAAgC,CAAC;AACrE,MAAMK,WAAW,GAAGL,OAAO,CAAC,eAAe,CAAC;AAE5C,MAAMM,qBAAqB,CAAC;EAC3BC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC7B;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,oBAAoB,GAAGP,mBAAmB,CAClDQ,MAAM,CAACC,MAAM,CACZ;MACCC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE,KAAK;MACZC,OAAO,EAAEX;IACV,CAAC,EACD,IAAI,CAACG,OAAO,CAACS,qBACd,CACD,CAAC;IACDP,QAAQ,CAACQ,eAAe,GAAG,IAAIf,qBAAqB,CACnD,IAAID,qBAAqB,CAAC,CAAC,EAC3B,KACD,CAAC;IACD,MAAMgB,eAAe,GAAGR,QAAQ,CAACQ,eAAe;IAChDR,QAAQ,CAACS,gBAAgB,GAAG,IAAIlB,oBAAoB,CAAC,CAAC;IACtDS,QAAQ,CAACU,eAAe,GAAG,IAAIrB,mBAAmB,CACjDW,QAAQ,CAACQ,eACV,CAAC;IACDR,QAAQ,CAACW,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,uBAAuB,EAAEb,QAAQ,IAAI;MACjE,IAAIA,QAAQ,CAACQ,eAAe,KAAKA,eAAe,EAAEA,eAAe,CAACM,KAAK,CAAC,CAAC;IAC1E,CAAC,CAAC;EACH;AACD;AACAC,MAAM,CAACC,OAAO,GAAGpB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script"}