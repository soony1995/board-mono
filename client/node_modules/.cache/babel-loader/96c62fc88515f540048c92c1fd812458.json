{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\nconst formatLocation = require(\"./formatLocation\");\nconst identifierUtils = require(\"./util/identifier\");\nconst compareLocations = require(\"./compareLocations\");\nconst {\n  LogType\n} = require(\"./logging/Logger\");\nconst optionsOrFallback = (...args) => {\n  let optionValues = [];\n  optionValues.push(...args);\n  return optionValues.find(optionValue => optionValue !== undefined);\n};\nconst compareId = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nclass Stats {\n  constructor(compilation) {\n    this.compilation = compilation;\n    this.hash = compilation.hash;\n    this.startTime = undefined;\n    this.endTime = undefined;\n  }\n  static filterWarnings(warnings, warningsFilter) {\n    // we dont have anything to filter so all warnings can be shown\n    if (!warningsFilter) {\n      return warnings;\n    }\n\n    // create a chain of filters\n    // if they return \"true\" a warning should be suppressed\n    const normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\n      if (typeof filter === \"string\") {\n        return warning => warning.includes(filter);\n      }\n      if (filter instanceof RegExp) {\n        return warning => filter.test(warning);\n      }\n      if (typeof filter === \"function\") {\n        return filter;\n      }\n      throw new Error(`Can only filter warnings with Strings or RegExps. (Given: ${filter})`);\n    });\n    return warnings.filter(warning => {\n      return !normalizedWarningsFilters.some(check => check(warning));\n    });\n  }\n  formatFilePath(filePath) {\n    const OPTIONS_REGEXP = /^(\\s|\\S)*!/;\n    return filePath.includes(\"!\") ? `${filePath.replace(OPTIONS_REGEXP, \"\")} (${filePath})` : `${filePath}`;\n  }\n  hasWarnings() {\n    return this.compilation.warnings.length > 0 || this.compilation.children.some(child => child.getStats().hasWarnings());\n  }\n  hasErrors() {\n    return this.compilation.errors.length > 0 || this.compilation.children.some(child => child.getStats().hasErrors());\n  }\n\n  // remove a prefixed \"!\" that can be specified to reverse sort order\n  normalizeFieldKey(field) {\n    if (field[0] === \"!\") {\n      return field.substr(1);\n    }\n    return field;\n  }\n\n  // if a field is prefixed by a \"!\" reverse sort order\n  sortOrderRegular(field) {\n    if (field[0] === \"!\") {\n      return false;\n    }\n    return true;\n  }\n  toJson(options, forToString) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n    const optionOrLocalFallback = (v, def) => v !== undefined ? v : options.all !== undefined ? options.all : def;\n    const testAgainstGivenOption = item => {\n      if (typeof item === \"string\") {\n        const regExp = new RegExp(`[\\\\\\\\/]${item.replace(\n        // eslint-disable-next-line no-useless-escape\n        /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\")}([\\\\\\\\/]|$|!|\\\\?)`);\n        return ident => regExp.test(ident);\n      }\n      if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n        return ident => item.test(ident);\n      }\n      if (typeof item === \"function\") {\n        return item;\n      }\n      if (typeof item === \"boolean\") {\n        return () => item;\n      }\n    };\n    const compilation = this.compilation;\n    const context = optionsOrFallback(options.context, compilation.compiler.context);\n    const requestShortener = compilation.compiler.context === context ? compilation.requestShortener : new RequestShortener(context);\n    const showPerformance = optionOrLocalFallback(options.performance, true);\n    const showHash = optionOrLocalFallback(options.hash, true);\n    const showEnv = optionOrLocalFallback(options.env, false);\n    const showVersion = optionOrLocalFallback(options.version, true);\n    const showTimings = optionOrLocalFallback(options.timings, true);\n    const showBuiltAt = optionOrLocalFallback(options.builtAt, true);\n    const showAssets = optionOrLocalFallback(options.assets, true);\n    const showEntrypoints = optionOrLocalFallback(options.entrypoints, true);\n    const showChunkGroups = optionOrLocalFallback(options.chunkGroups, !forToString);\n    const showChunks = optionOrLocalFallback(options.chunks, !forToString);\n    const showChunkModules = optionOrLocalFallback(options.chunkModules, true);\n    const showChunkOrigins = optionOrLocalFallback(options.chunkOrigins, !forToString);\n    const showModules = optionOrLocalFallback(options.modules, true);\n    const showNestedModules = optionOrLocalFallback(options.nestedModules, true);\n    const showModuleAssets = optionOrLocalFallback(options.moduleAssets, !forToString);\n    const showDepth = optionOrLocalFallback(options.depth, !forToString);\n    const showCachedModules = optionOrLocalFallback(options.cached, true);\n    const showCachedAssets = optionOrLocalFallback(options.cachedAssets, true);\n    const showReasons = optionOrLocalFallback(options.reasons, !forToString);\n    const showUsedExports = optionOrLocalFallback(options.usedExports, !forToString);\n    const showProvidedExports = optionOrLocalFallback(options.providedExports, !forToString);\n    const showOptimizationBailout = optionOrLocalFallback(options.optimizationBailout, !forToString);\n    const showChildren = optionOrLocalFallback(options.children, true);\n    const showSource = optionOrLocalFallback(options.source, !forToString);\n    const showModuleTrace = optionOrLocalFallback(options.moduleTrace, true);\n    const showErrors = optionOrLocalFallback(options.errors, true);\n    const showErrorDetails = optionOrLocalFallback(options.errorDetails, !forToString);\n    const showWarnings = optionOrLocalFallback(options.warnings, true);\n    const warningsFilter = optionsOrFallback(options.warningsFilter, null);\n    const showPublicPath = optionOrLocalFallback(options.publicPath, !forToString);\n    const showLogging = optionOrLocalFallback(options.logging, forToString ? \"info\" : true);\n    const showLoggingTrace = optionOrLocalFallback(options.loggingTrace, !forToString);\n    const loggingDebug = [].concat(optionsOrFallback(options.loggingDebug, [])).map(testAgainstGivenOption);\n    const excludeModules = [].concat(optionsOrFallback(options.excludeModules, options.exclude, [])).map(testAgainstGivenOption);\n    const excludeAssets = [].concat(optionsOrFallback(options.excludeAssets, [])).map(testAgainstGivenOption);\n    const maxModules = optionsOrFallback(options.maxModules, forToString ? 15 : Infinity);\n    const sortModules = optionsOrFallback(options.modulesSort, \"id\");\n    const sortChunks = optionsOrFallback(options.chunksSort, \"id\");\n    const sortAssets = optionsOrFallback(options.assetsSort, \"\");\n    const showOutputPath = optionOrLocalFallback(options.outputPath, !forToString);\n    if (!showCachedModules) {\n      excludeModules.push((ident, module) => !module.built);\n    }\n    const createModuleFilter = () => {\n      let i = 0;\n      return module => {\n        if (excludeModules.length > 0) {\n          const ident = requestShortener.shorten(module.resource);\n          const excluded = excludeModules.some(fn => fn(ident, module));\n          if (excluded) return false;\n        }\n        const result = i < maxModules;\n        i++;\n        return result;\n      };\n    };\n    const createAssetFilter = () => {\n      return asset => {\n        if (excludeAssets.length > 0) {\n          const ident = asset.name;\n          const excluded = excludeAssets.some(fn => fn(ident, asset));\n          if (excluded) return false;\n        }\n        return showCachedAssets || asset.emitted;\n      };\n    };\n    const sortByFieldAndOrder = (fieldKey, a, b) => {\n      if (a[fieldKey] === null && b[fieldKey] === null) return 0;\n      if (a[fieldKey] === null) return 1;\n      if (b[fieldKey] === null) return -1;\n      if (a[fieldKey] === b[fieldKey]) return 0;\n      if (typeof a[fieldKey] !== typeof b[fieldKey]) return typeof a[fieldKey] < typeof b[fieldKey] ? -1 : 1;\n      return a[fieldKey] < b[fieldKey] ? -1 : 1;\n    };\n    const sortByField = (field, originalArray) => {\n      const originalMap = originalArray.reduce((map, v, i) => {\n        map.set(v, i);\n        return map;\n      }, new Map());\n      return (a, b) => {\n        if (field) {\n          const fieldKey = this.normalizeFieldKey(field);\n\n          // if a field is prefixed with a \"!\" the sort is reversed!\n          const sortIsRegular = this.sortOrderRegular(field);\n          const cmp = sortByFieldAndOrder(fieldKey, sortIsRegular ? a : b, sortIsRegular ? b : a);\n          if (cmp) return cmp;\n        }\n        return originalMap.get(a) - originalMap.get(b);\n      };\n    };\n    const formatError = e => {\n      let text = \"\";\n      if (typeof e === \"string\") {\n        e = {\n          message: e\n        };\n      }\n      if (e.chunk) {\n        text += `chunk ${e.chunk.name || e.chunk.id}${e.chunk.hasRuntime() ? \" [entry]\" : e.chunk.canBeInitial() ? \" [initial]\" : \"\"}\\n`;\n      }\n      if (e.file) {\n        text += `${e.file}\\n`;\n      }\n      if (e.module && e.module.readableIdentifier && typeof e.module.readableIdentifier === \"function\") {\n        text += this.formatFilePath(e.module.readableIdentifier(requestShortener));\n        if (typeof e.loc === \"object\") {\n          const locInfo = formatLocation(e.loc);\n          if (locInfo) text += ` ${locInfo}`;\n        }\n        text += \"\\n\";\n      }\n      text += e.message;\n      if (showErrorDetails && e.details) {\n        text += `\\n${e.details}`;\n      }\n      if (showErrorDetails && e.missing) {\n        text += e.missing.map(item => `\\n[${item}]`).join(\"\");\n      }\n      if (showModuleTrace && e.origin) {\n        text += `\\n @ ${this.formatFilePath(e.origin.readableIdentifier(requestShortener))}`;\n        if (typeof e.originLoc === \"object\") {\n          const locInfo = formatLocation(e.originLoc);\n          if (locInfo) text += ` ${locInfo}`;\n        }\n        if (e.dependencies) {\n          for (const dep of e.dependencies) {\n            if (!dep.loc) continue;\n            if (typeof dep.loc === \"string\") continue;\n            const locInfo = formatLocation(dep.loc);\n            if (!locInfo) continue;\n            text += ` ${locInfo}`;\n          }\n        }\n        let current = e.origin;\n        while (current.issuer) {\n          current = current.issuer;\n          text += `\\n @ ${current.readableIdentifier(requestShortener)}`;\n        }\n      }\n      return text;\n    };\n    const obj = {\n      errors: compilation.errors.map(formatError),\n      warnings: Stats.filterWarnings(compilation.warnings.map(formatError), warningsFilter)\n    };\n\n    //We just hint other renderers since actually omitting\n    //errors/warnings from the JSON would be kind of weird.\n    Object.defineProperty(obj, \"_showWarnings\", {\n      value: showWarnings,\n      enumerable: false\n    });\n    Object.defineProperty(obj, \"_showErrors\", {\n      value: showErrors,\n      enumerable: false\n    });\n    if (showVersion) {\n      obj.version = require(\"../package.json\").version;\n    }\n    if (showHash) obj.hash = this.hash;\n    if (showTimings && this.startTime && this.endTime) {\n      obj.time = this.endTime - this.startTime;\n    }\n    if (showBuiltAt && this.endTime) {\n      obj.builtAt = this.endTime;\n    }\n    if (showEnv && options._env) {\n      obj.env = options._env;\n    }\n    if (compilation.needAdditionalPass) {\n      obj.needAdditionalPass = true;\n    }\n    if (showPublicPath) {\n      obj.publicPath = this.compilation.mainTemplate.getPublicPath({\n        hash: this.compilation.hash\n      });\n    }\n    if (showOutputPath) {\n      obj.outputPath = this.compilation.mainTemplate.outputOptions.path;\n    }\n    if (showAssets) {\n      const assetsByFile = {};\n      const compilationAssets = compilation.getAssets().sort((a, b) => a.name < b.name ? -1 : 1);\n      obj.assetsByChunkName = {};\n      obj.assets = compilationAssets.map(({\n        name,\n        source,\n        info\n      }) => {\n        const obj = {\n          name,\n          size: source.size(),\n          chunks: [],\n          chunkNames: [],\n          info,\n          // TODO webpack 5: remove .emitted\n          emitted: source.emitted || compilation.emittedAssets.has(name)\n        };\n        if (showPerformance) {\n          obj.isOverSizeLimit = source.isOverSizeLimit;\n        }\n        assetsByFile[name] = obj;\n        return obj;\n      }).filter(createAssetFilter());\n      obj.filteredAssets = compilationAssets.length - obj.assets.length;\n      for (const chunk of compilation.chunks) {\n        for (const asset of chunk.files) {\n          if (assetsByFile[asset]) {\n            for (const id of chunk.ids) {\n              assetsByFile[asset].chunks.push(id);\n            }\n            if (chunk.name) {\n              assetsByFile[asset].chunkNames.push(chunk.name);\n              if (obj.assetsByChunkName[chunk.name]) {\n                obj.assetsByChunkName[chunk.name] = [].concat(obj.assetsByChunkName[chunk.name]).concat([asset]);\n              } else {\n                obj.assetsByChunkName[chunk.name] = asset;\n              }\n            }\n          }\n        }\n      }\n      obj.assets.sort(sortByField(sortAssets, obj.assets));\n    }\n    const fnChunkGroup = groupMap => {\n      const obj = {};\n      for (const keyValuePair of groupMap) {\n        const name = keyValuePair[0];\n        const cg = keyValuePair[1];\n        const children = cg.getChildrenByOrders();\n        obj[name] = {\n          chunks: cg.chunks.map(c => c.id),\n          assets: cg.chunks.reduce((array, c) => array.concat(c.files || []), []),\n          children: Object.keys(children).reduce((obj, key) => {\n            const groups = children[key];\n            obj[key] = groups.map(group => ({\n              name: group.name,\n              chunks: group.chunks.map(c => c.id),\n              assets: group.chunks.reduce((array, c) => array.concat(c.files || []), [])\n            }));\n            return obj;\n          }, Object.create(null)),\n          childAssets: Object.keys(children).reduce((obj, key) => {\n            const groups = children[key];\n            obj[key] = Array.from(groups.reduce((set, group) => {\n              for (const chunk of group.chunks) {\n                for (const asset of chunk.files) {\n                  set.add(asset);\n                }\n              }\n              return set;\n            }, new Set()));\n            return obj;\n          }, Object.create(null))\n        };\n        if (showPerformance) {\n          obj[name].isOverSizeLimit = cg.isOverSizeLimit;\n        }\n      }\n      return obj;\n    };\n    if (showEntrypoints) {\n      obj.entrypoints = fnChunkGroup(compilation.entrypoints);\n    }\n    if (showChunkGroups) {\n      obj.namedChunkGroups = fnChunkGroup(compilation.namedChunkGroups);\n    }\n    const fnModule = module => {\n      const path = [];\n      let current = module;\n      while (current.issuer) {\n        path.push(current = current.issuer);\n      }\n      path.reverse();\n      const obj = {\n        id: module.id,\n        identifier: module.identifier(),\n        name: module.readableIdentifier(requestShortener),\n        index: module.index,\n        index2: module.index2,\n        size: module.size(),\n        cacheable: module.buildInfo.cacheable,\n        built: !!module.built,\n        optional: module.optional,\n        prefetched: module.prefetched,\n        chunks: Array.from(module.chunksIterable, chunk => chunk.id),\n        issuer: module.issuer && module.issuer.identifier(),\n        issuerId: module.issuer && module.issuer.id,\n        issuerName: module.issuer && module.issuer.readableIdentifier(requestShortener),\n        issuerPath: module.issuer && path.map(module => ({\n          id: module.id,\n          identifier: module.identifier(),\n          name: module.readableIdentifier(requestShortener),\n          profile: module.profile\n        })),\n        profile: module.profile,\n        failed: !!module.error,\n        errors: module.errors ? module.errors.length : 0,\n        warnings: module.warnings ? module.warnings.length : 0\n      };\n      if (showModuleAssets) {\n        obj.assets = Object.keys(module.buildInfo.assets || {});\n      }\n      if (showReasons) {\n        obj.reasons = module.reasons.sort((a, b) => {\n          if (a.module && !b.module) return -1;\n          if (!a.module && b.module) return 1;\n          if (a.module && b.module) {\n            const cmp = compareId(a.module.id, b.module.id);\n            if (cmp) return cmp;\n          }\n          if (a.dependency && !b.dependency) return -1;\n          if (!a.dependency && b.dependency) return 1;\n          if (a.dependency && b.dependency) {\n            const cmp = compareLocations(a.dependency.loc, b.dependency.loc);\n            if (cmp) return cmp;\n            if (a.dependency.type < b.dependency.type) return -1;\n            if (a.dependency.type > b.dependency.type) return 1;\n          }\n          return 0;\n        }).map(reason => {\n          const obj = {\n            moduleId: reason.module ? reason.module.id : null,\n            moduleIdentifier: reason.module ? reason.module.identifier() : null,\n            module: reason.module ? reason.module.readableIdentifier(requestShortener) : null,\n            moduleName: reason.module ? reason.module.readableIdentifier(requestShortener) : null,\n            type: reason.dependency ? reason.dependency.type : null,\n            explanation: reason.explanation,\n            userRequest: reason.dependency ? reason.dependency.userRequest : null\n          };\n          if (reason.dependency) {\n            const locInfo = formatLocation(reason.dependency.loc);\n            if (locInfo) {\n              obj.loc = locInfo;\n            }\n          }\n          return obj;\n        });\n      }\n      if (showUsedExports) {\n        if (module.used === true) {\n          obj.usedExports = module.usedExports;\n        } else if (module.used === false) {\n          obj.usedExports = false;\n        }\n      }\n      if (showProvidedExports) {\n        obj.providedExports = Array.isArray(module.buildMeta.providedExports) ? module.buildMeta.providedExports : null;\n      }\n      if (showOptimizationBailout) {\n        obj.optimizationBailout = module.optimizationBailout.map(item => {\n          if (typeof item === \"function\") return item(requestShortener);\n          return item;\n        });\n      }\n      if (showDepth) {\n        obj.depth = module.depth;\n      }\n      if (showNestedModules) {\n        if (module.modules) {\n          const modules = module.modules;\n          obj.modules = modules.sort(sortByField(\"depth\", modules)).filter(createModuleFilter()).map(fnModule);\n          obj.filteredModules = modules.length - obj.modules.length;\n          obj.modules.sort(sortByField(sortModules, obj.modules));\n        }\n      }\n      if (showSource && module._source) {\n        obj.source = module._source.source();\n      }\n      return obj;\n    };\n    if (showChunks) {\n      obj.chunks = compilation.chunks.map(chunk => {\n        const parents = new Set();\n        const children = new Set();\n        const siblings = new Set();\n        const childIdByOrder = chunk.getChildIdsByOrders();\n        for (const chunkGroup of chunk.groupsIterable) {\n          for (const parentGroup of chunkGroup.parentsIterable) {\n            for (const chunk of parentGroup.chunks) {\n              parents.add(chunk.id);\n            }\n          }\n          for (const childGroup of chunkGroup.childrenIterable) {\n            for (const chunk of childGroup.chunks) {\n              children.add(chunk.id);\n            }\n          }\n          for (const sibling of chunkGroup.chunks) {\n            if (sibling !== chunk) siblings.add(sibling.id);\n          }\n        }\n        const obj = {\n          id: chunk.id,\n          rendered: chunk.rendered,\n          initial: chunk.canBeInitial(),\n          entry: chunk.hasRuntime(),\n          recorded: chunk.recorded,\n          reason: chunk.chunkReason,\n          size: chunk.modulesSize(),\n          names: chunk.name ? [chunk.name] : [],\n          files: chunk.files.slice(),\n          hash: chunk.renderedHash,\n          siblings: Array.from(siblings).sort(compareId),\n          parents: Array.from(parents).sort(compareId),\n          children: Array.from(children).sort(compareId),\n          childrenByOrder: childIdByOrder\n        };\n        if (showChunkModules) {\n          const modules = chunk.getModules();\n          obj.modules = modules.slice().sort(sortByField(\"depth\", modules)).filter(createModuleFilter()).map(fnModule);\n          obj.filteredModules = chunk.getNumberOfModules() - obj.modules.length;\n          obj.modules.sort(sortByField(sortModules, obj.modules));\n        }\n        if (showChunkOrigins) {\n          obj.origins = Array.from(chunk.groupsIterable, g => g.origins).reduce((a, b) => a.concat(b), []).map(origin => ({\n            moduleId: origin.module ? origin.module.id : undefined,\n            module: origin.module ? origin.module.identifier() : \"\",\n            moduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n            moduleName: origin.module ? origin.module.readableIdentifier(requestShortener) : \"\",\n            loc: formatLocation(origin.loc),\n            request: origin.request,\n            reasons: origin.reasons || []\n          })).sort((a, b) => {\n            const cmp1 = compareId(a.moduleId, b.moduleId);\n            if (cmp1) return cmp1;\n            const cmp2 = compareId(a.loc, b.loc);\n            if (cmp2) return cmp2;\n            const cmp3 = compareId(a.request, b.request);\n            if (cmp3) return cmp3;\n            return 0;\n          });\n        }\n        return obj;\n      });\n      obj.chunks.sort(sortByField(sortChunks, obj.chunks));\n    }\n    if (showModules) {\n      obj.modules = compilation.modules.slice().sort(sortByField(\"depth\", compilation.modules)).filter(createModuleFilter()).map(fnModule);\n      obj.filteredModules = compilation.modules.length - obj.modules.length;\n      obj.modules.sort(sortByField(sortModules, obj.modules));\n    }\n    if (showLogging) {\n      const util = require(\"util\");\n      obj.logging = {};\n      let acceptedTypes;\n      let collapsedGroups = false;\n      switch (showLogging) {\n        case \"none\":\n          acceptedTypes = new Set([]);\n          break;\n        case \"error\":\n          acceptedTypes = new Set([LogType.error]);\n          break;\n        case \"warn\":\n          acceptedTypes = new Set([LogType.error, LogType.warn]);\n          break;\n        case \"info\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n          break;\n        case true:\n        case \"log\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.clear]);\n          break;\n        case \"verbose\":\n          acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.profile, LogType.profileEnd, LogType.time, LogType.status, LogType.clear]);\n          collapsedGroups = true;\n          break;\n      }\n      for (const [origin, logEntries] of compilation.logging) {\n        const debugMode = loggingDebug.some(fn => fn(origin));\n        let collapseCounter = 0;\n        let processedLogEntries = logEntries;\n        if (!debugMode) {\n          processedLogEntries = processedLogEntries.filter(entry => {\n            if (!acceptedTypes.has(entry.type)) return false;\n            if (!collapsedGroups) {\n              switch (entry.type) {\n                case LogType.groupCollapsed:\n                  collapseCounter++;\n                  return collapseCounter === 1;\n                case LogType.group:\n                  if (collapseCounter > 0) collapseCounter++;\n                  return collapseCounter === 0;\n                case LogType.groupEnd:\n                  if (collapseCounter > 0) {\n                    collapseCounter--;\n                    return false;\n                  }\n                  return true;\n                default:\n                  return collapseCounter === 0;\n              }\n            }\n            return true;\n          });\n        }\n        processedLogEntries = processedLogEntries.map(entry => {\n          let message = undefined;\n          if (entry.type === LogType.time) {\n            message = `${entry.args[0]}: ${entry.args[1] * 1000 + entry.args[2] / 1000000}ms`;\n          } else if (entry.args && entry.args.length > 0) {\n            message = util.format(entry.args[0], ...entry.args.slice(1));\n          }\n          return {\n            type: (debugMode || collapsedGroups) && entry.type === LogType.groupCollapsed ? LogType.group : entry.type,\n            message,\n            trace: showLoggingTrace && entry.trace ? entry.trace : undefined\n          };\n        });\n        let name = identifierUtils.makePathsRelative(context, origin, compilation.cache).replace(/\\|/g, \" \");\n        if (name in obj.logging) {\n          let i = 1;\n          while (`${name}#${i}` in obj.logging) {\n            i++;\n          }\n          name = `${name}#${i}`;\n        }\n        obj.logging[name] = {\n          entries: processedLogEntries,\n          filteredEntries: logEntries.length - processedLogEntries.length,\n          debug: debugMode\n        };\n      }\n    }\n    if (showChildren) {\n      obj.children = compilation.children.map((child, idx) => {\n        const childOptions = Stats.getChildOptions(options, idx);\n        const obj = new Stats(child).toJson(childOptions, forToString);\n        delete obj.hash;\n        delete obj.version;\n        if (child.name) {\n          obj.name = identifierUtils.makePathsRelative(context, child.name, compilation.cache);\n        }\n        return obj;\n      });\n    }\n    return obj;\n  }\n  toString(options) {\n    if (typeof options === \"boolean\" || typeof options === \"string\") {\n      options = Stats.presetToOptions(options);\n    } else if (!options) {\n      options = {};\n    }\n    const useColors = optionsOrFallback(options.colors, false);\n    const obj = this.toJson(options, true);\n    return Stats.jsonToString(obj, useColors);\n  }\n  static jsonToString(obj, useColors) {\n    const buf = [];\n    const defaultColors = {\n      bold: \"\\u001b[1m\",\n      yellow: \"\\u001b[1m\\u001b[33m\",\n      red: \"\\u001b[1m\\u001b[31m\",\n      green: \"\\u001b[1m\\u001b[32m\",\n      cyan: \"\\u001b[1m\\u001b[36m\",\n      magenta: \"\\u001b[1m\\u001b[35m\"\n    };\n    const colors = Object.keys(defaultColors).reduce((obj, color) => {\n      obj[color] = str => {\n        if (useColors) {\n          buf.push(useColors === true || useColors[color] === undefined ? defaultColors[color] : useColors[color]);\n        }\n        buf.push(str);\n        if (useColors) {\n          buf.push(\"\\u001b[39m\\u001b[22m\");\n        }\n      };\n      return obj;\n    }, {\n      normal: str => buf.push(str)\n    });\n    const coloredTime = time => {\n      let times = [800, 400, 200, 100];\n      if (obj.time) {\n        times = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\n      }\n      if (time < times[3]) colors.normal(`${time}ms`);else if (time < times[2]) colors.bold(`${time}ms`);else if (time < times[1]) colors.green(`${time}ms`);else if (time < times[0]) colors.yellow(`${time}ms`);else colors.red(`${time}ms`);\n    };\n    const newline = () => buf.push(\"\\n\");\n    const getText = (arr, row, col) => {\n      return arr[row][col].value;\n    };\n    const table = (array, align, splitter) => {\n      const rows = array.length;\n      const cols = array[0].length;\n      const colSizes = new Array(cols);\n      for (let col = 0; col < cols; col++) {\n        colSizes[col] = 0;\n      }\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          const value = `${getText(array, row, col)}`;\n          if (value.length > colSizes[col]) {\n            colSizes[col] = value.length;\n          }\n        }\n      }\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          const format = array[row][col].color;\n          const value = `${getText(array, row, col)}`;\n          let l = value.length;\n          if (align[col] === \"l\") {\n            format(value);\n          }\n          for (; l < colSizes[col] && col !== cols - 1; l++) {\n            colors.normal(\" \");\n          }\n          if (align[col] === \"r\") {\n            format(value);\n          }\n          if (col + 1 < cols && colSizes[col] !== 0) {\n            colors.normal(splitter || \"  \");\n          }\n        }\n        newline();\n      }\n    };\n    const getAssetColor = (asset, defaultColor) => {\n      if (asset.isOverSizeLimit) {\n        return colors.yellow;\n      }\n      return defaultColor;\n    };\n    if (obj.hash) {\n      colors.normal(\"Hash: \");\n      colors.bold(obj.hash);\n      newline();\n    }\n    if (obj.version) {\n      colors.normal(\"Version: webpack \");\n      colors.bold(obj.version);\n      newline();\n    }\n    if (typeof obj.time === \"number\") {\n      colors.normal(\"Time: \");\n      colors.bold(obj.time);\n      colors.normal(\"ms\");\n      newline();\n    }\n    if (typeof obj.builtAt === \"number\") {\n      const builtAtDate = new Date(obj.builtAt);\n      let timeZone = undefined;\n      try {\n        builtAtDate.toLocaleTimeString();\n      } catch (err) {\n        // Force UTC if runtime timezone is unsupported\n        timeZone = \"UTC\";\n      }\n      colors.normal(\"Built at: \");\n      colors.normal(builtAtDate.toLocaleDateString(undefined, {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        timeZone\n      }));\n      colors.normal(\" \");\n      colors.bold(builtAtDate.toLocaleTimeString(undefined, {\n        timeZone\n      }));\n      newline();\n    }\n    if (obj.env) {\n      colors.normal(\"Environment (--env): \");\n      colors.bold(JSON.stringify(obj.env, null, 2));\n      newline();\n    }\n    if (obj.publicPath) {\n      colors.normal(\"PublicPath: \");\n      colors.bold(obj.publicPath);\n      newline();\n    }\n    if (obj.assets && obj.assets.length > 0) {\n      const t = [[{\n        value: \"Asset\",\n        color: colors.bold\n      }, {\n        value: \"Size\",\n        color: colors.bold\n      }, {\n        value: \"Chunks\",\n        color: colors.bold\n      }, {\n        value: \"\",\n        color: colors.bold\n      }, {\n        value: \"\",\n        color: colors.bold\n      }, {\n        value: \"Chunk Names\",\n        color: colors.bold\n      }]];\n      for (const asset of obj.assets) {\n        t.push([{\n          value: asset.name,\n          color: getAssetColor(asset, colors.green)\n        }, {\n          value: SizeFormatHelpers.formatSize(asset.size),\n          color: getAssetColor(asset, colors.normal)\n        }, {\n          value: asset.chunks.join(\", \"),\n          color: colors.bold\n        }, {\n          value: [asset.emitted && \"[emitted]\", asset.info.immutable && \"[immutable]\", asset.info.development && \"[dev]\", asset.info.hotModuleReplacement && \"[hmr]\"].filter(Boolean).join(\" \"),\n          color: colors.green\n        }, {\n          value: asset.isOverSizeLimit ? \"[big]\" : \"\",\n          color: getAssetColor(asset, colors.normal)\n        }, {\n          value: asset.chunkNames.join(\", \"),\n          color: colors.normal\n        }]);\n      }\n      table(t, \"rrrlll\");\n    }\n    if (obj.filteredAssets > 0) {\n      colors.normal(\" \");\n      if (obj.assets.length > 0) colors.normal(\"+ \");\n      colors.normal(obj.filteredAssets);\n      if (obj.assets.length > 0) colors.normal(\" hidden\");\n      colors.normal(obj.filteredAssets !== 1 ? \" assets\" : \" asset\");\n      newline();\n    }\n    const processChunkGroups = (namedGroups, prefix) => {\n      for (const name of Object.keys(namedGroups)) {\n        const cg = namedGroups[name];\n        colors.normal(`${prefix} `);\n        colors.bold(name);\n        if (cg.isOverSizeLimit) {\n          colors.normal(\" \");\n          colors.yellow(\"[big]\");\n        }\n        colors.normal(\" =\");\n        for (const asset of cg.assets) {\n          colors.normal(\" \");\n          colors.green(asset);\n        }\n        for (const name of Object.keys(cg.childAssets)) {\n          const assets = cg.childAssets[name];\n          if (assets && assets.length > 0) {\n            colors.normal(\" \");\n            colors.magenta(`(${name}:`);\n            for (const asset of assets) {\n              colors.normal(\" \");\n              colors.green(asset);\n            }\n            colors.magenta(\")\");\n          }\n        }\n        newline();\n      }\n    };\n    if (obj.entrypoints) {\n      processChunkGroups(obj.entrypoints, \"Entrypoint\");\n    }\n    if (obj.namedChunkGroups) {\n      let outputChunkGroups = obj.namedChunkGroups;\n      if (obj.entrypoints) {\n        outputChunkGroups = Object.keys(outputChunkGroups).filter(name => !obj.entrypoints[name]).reduce((result, name) => {\n          result[name] = obj.namedChunkGroups[name];\n          return result;\n        }, {});\n      }\n      processChunkGroups(outputChunkGroups, \"Chunk Group\");\n    }\n    const modulesByIdentifier = {};\n    if (obj.modules) {\n      for (const module of obj.modules) {\n        modulesByIdentifier[`$${module.identifier}`] = module;\n      }\n    } else if (obj.chunks) {\n      for (const chunk of obj.chunks) {\n        if (chunk.modules) {\n          for (const module of chunk.modules) {\n            modulesByIdentifier[`$${module.identifier}`] = module;\n          }\n        }\n      }\n    }\n    const processModuleAttributes = module => {\n      colors.normal(\" \");\n      colors.normal(SizeFormatHelpers.formatSize(module.size));\n      if (module.chunks) {\n        for (const chunk of module.chunks) {\n          colors.normal(\" {\");\n          colors.yellow(chunk);\n          colors.normal(\"}\");\n        }\n      }\n      if (typeof module.depth === \"number\") {\n        colors.normal(` [depth ${module.depth}]`);\n      }\n      if (module.cacheable === false) {\n        colors.red(\" [not cacheable]\");\n      }\n      if (module.optional) {\n        colors.yellow(\" [optional]\");\n      }\n      if (module.built) {\n        colors.green(\" [built]\");\n      }\n      if (module.assets && module.assets.length) {\n        colors.magenta(` [${module.assets.length} asset${module.assets.length === 1 ? \"\" : \"s\"}]`);\n      }\n      if (module.prefetched) {\n        colors.magenta(\" [prefetched]\");\n      }\n      if (module.failed) colors.red(\" [failed]\");\n      if (module.warnings) {\n        colors.yellow(` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`);\n      }\n      if (module.errors) {\n        colors.red(` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`);\n      }\n    };\n    const processModuleContent = (module, prefix) => {\n      if (Array.isArray(module.providedExports)) {\n        colors.normal(prefix);\n        if (module.providedExports.length === 0) {\n          colors.cyan(\"[no exports]\");\n        } else {\n          colors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\n        }\n        newline();\n      }\n      if (module.usedExports !== undefined) {\n        if (module.usedExports !== true) {\n          colors.normal(prefix);\n          if (module.usedExports === null) {\n            colors.cyan(\"[used exports unknown]\");\n          } else if (module.usedExports === false) {\n            colors.cyan(\"[no exports used]\");\n          } else if (Array.isArray(module.usedExports) && module.usedExports.length === 0) {\n            colors.cyan(\"[no exports used]\");\n          } else if (Array.isArray(module.usedExports)) {\n            const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n            if (providedExportsCount !== null && providedExportsCount === module.usedExports.length) {\n              colors.cyan(\"[all exports used]\");\n            } else {\n              colors.cyan(`[only some exports used: ${module.usedExports.join(\", \")}]`);\n            }\n          }\n          newline();\n        }\n      }\n      if (Array.isArray(module.optimizationBailout)) {\n        for (const item of module.optimizationBailout) {\n          colors.normal(prefix);\n          colors.yellow(item);\n          newline();\n        }\n      }\n      if (module.reasons) {\n        for (const reason of module.reasons) {\n          colors.normal(prefix);\n          if (reason.type) {\n            colors.normal(reason.type);\n            colors.normal(\" \");\n          }\n          if (reason.userRequest) {\n            colors.cyan(reason.userRequest);\n            colors.normal(\" \");\n          }\n          if (reason.moduleId !== null) {\n            colors.normal(\"[\");\n            colors.normal(reason.moduleId);\n            colors.normal(\"]\");\n          }\n          if (reason.module && reason.module !== reason.moduleId) {\n            colors.normal(\" \");\n            colors.magenta(reason.module);\n          }\n          if (reason.loc) {\n            colors.normal(\" \");\n            colors.normal(reason.loc);\n          }\n          if (reason.explanation) {\n            colors.normal(\" \");\n            colors.cyan(reason.explanation);\n          }\n          newline();\n        }\n      }\n      if (module.profile) {\n        colors.normal(prefix);\n        let sum = 0;\n        if (module.issuerPath) {\n          for (const m of module.issuerPath) {\n            colors.normal(\"[\");\n            colors.normal(m.id);\n            colors.normal(\"] \");\n            if (m.profile) {\n              const time = (m.profile.factory || 0) + (m.profile.building || 0);\n              coloredTime(time);\n              sum += time;\n              colors.normal(\" \");\n            }\n            colors.normal(\"-> \");\n          }\n        }\n        for (const key of Object.keys(module.profile)) {\n          colors.normal(`${key}:`);\n          const time = module.profile[key];\n          coloredTime(time);\n          colors.normal(\" \");\n          sum += time;\n        }\n        colors.normal(\"= \");\n        coloredTime(sum);\n        newline();\n      }\n      if (module.modules) {\n        processModulesList(module, prefix + \"| \");\n      }\n    };\n    const processModulesList = (obj, prefix) => {\n      if (obj.modules) {\n        let maxModuleId = 0;\n        for (const module of obj.modules) {\n          if (typeof module.id === \"number\") {\n            if (maxModuleId < module.id) maxModuleId = module.id;\n          }\n        }\n        let contentPrefix = prefix + \"    \";\n        if (maxModuleId >= 10) contentPrefix += \" \";\n        if (maxModuleId >= 100) contentPrefix += \" \";\n        if (maxModuleId >= 1000) contentPrefix += \" \";\n        for (const module of obj.modules) {\n          colors.normal(prefix);\n          const name = module.name || module.identifier;\n          if (typeof module.id === \"string\" || typeof module.id === \"number\") {\n            if (typeof module.id === \"number\") {\n              if (module.id < 1000 && maxModuleId >= 1000) colors.normal(\" \");\n              if (module.id < 100 && maxModuleId >= 100) colors.normal(\" \");\n              if (module.id < 10 && maxModuleId >= 10) colors.normal(\" \");\n            } else {\n              if (maxModuleId >= 1000) colors.normal(\" \");\n              if (maxModuleId >= 100) colors.normal(\" \");\n              if (maxModuleId >= 10) colors.normal(\" \");\n            }\n            if (name !== module.id) {\n              colors.normal(\"[\");\n              colors.normal(module.id);\n              colors.normal(\"]\");\n              colors.normal(\" \");\n            } else {\n              colors.normal(\"[\");\n              colors.bold(module.id);\n              colors.normal(\"]\");\n            }\n          }\n          if (name !== module.id) {\n            colors.bold(name);\n          }\n          processModuleAttributes(module);\n          newline();\n          processModuleContent(module, contentPrefix);\n        }\n        if (obj.filteredModules > 0) {\n          colors.normal(prefix);\n          colors.normal(\"   \");\n          if (obj.modules.length > 0) colors.normal(\" + \");\n          colors.normal(obj.filteredModules);\n          if (obj.modules.length > 0) colors.normal(\" hidden\");\n          colors.normal(obj.filteredModules !== 1 ? \" modules\" : \" module\");\n          newline();\n        }\n      }\n    };\n    if (obj.chunks) {\n      for (const chunk of obj.chunks) {\n        colors.normal(\"chunk \");\n        if (chunk.id < 1000) colors.normal(\" \");\n        if (chunk.id < 100) colors.normal(\" \");\n        if (chunk.id < 10) colors.normal(\" \");\n        colors.normal(\"{\");\n        colors.yellow(chunk.id);\n        colors.normal(\"} \");\n        colors.green(chunk.files.join(\", \"));\n        if (chunk.names && chunk.names.length > 0) {\n          colors.normal(\" (\");\n          colors.normal(chunk.names.join(\", \"));\n          colors.normal(\")\");\n        }\n        colors.normal(\" \");\n        colors.normal(SizeFormatHelpers.formatSize(chunk.size));\n        for (const id of chunk.parents) {\n          colors.normal(\" <{\");\n          colors.yellow(id);\n          colors.normal(\"}>\");\n        }\n        for (const id of chunk.siblings) {\n          colors.normal(\" ={\");\n          colors.yellow(id);\n          colors.normal(\"}=\");\n        }\n        for (const id of chunk.children) {\n          colors.normal(\" >{\");\n          colors.yellow(id);\n          colors.normal(\"}<\");\n        }\n        if (chunk.childrenByOrder) {\n          for (const name of Object.keys(chunk.childrenByOrder)) {\n            const children = chunk.childrenByOrder[name];\n            colors.normal(\" \");\n            colors.magenta(`(${name}:`);\n            for (const id of children) {\n              colors.normal(\" {\");\n              colors.yellow(id);\n              colors.normal(\"}\");\n            }\n            colors.magenta(\")\");\n          }\n        }\n        if (chunk.entry) {\n          colors.yellow(\" [entry]\");\n        } else if (chunk.initial) {\n          colors.yellow(\" [initial]\");\n        }\n        if (chunk.rendered) {\n          colors.green(\" [rendered]\");\n        }\n        if (chunk.recorded) {\n          colors.green(\" [recorded]\");\n        }\n        if (chunk.reason) {\n          colors.yellow(` ${chunk.reason}`);\n        }\n        newline();\n        if (chunk.origins) {\n          for (const origin of chunk.origins) {\n            colors.normal(\"    > \");\n            if (origin.reasons && origin.reasons.length) {\n              colors.yellow(origin.reasons.join(\" \"));\n              colors.normal(\" \");\n            }\n            if (origin.request) {\n              colors.normal(origin.request);\n              colors.normal(\" \");\n            }\n            if (origin.module) {\n              colors.normal(\"[\");\n              colors.normal(origin.moduleId);\n              colors.normal(\"] \");\n              const module = modulesByIdentifier[`$${origin.module}`];\n              if (module) {\n                colors.bold(module.name);\n                colors.normal(\" \");\n              }\n            }\n            if (origin.loc) {\n              colors.normal(origin.loc);\n            }\n            newline();\n          }\n        }\n        processModulesList(chunk, \" \");\n      }\n    }\n    processModulesList(obj, \"\");\n    if (obj.logging) {\n      for (const origin of Object.keys(obj.logging)) {\n        const logData = obj.logging[origin];\n        if (logData.entries.length > 0) {\n          newline();\n          if (logData.debug) {\n            colors.red(\"DEBUG \");\n          }\n          colors.bold(\"LOG from \" + origin);\n          newline();\n          let indent = \"\";\n          for (const entry of logData.entries) {\n            let color = colors.normal;\n            let prefix = \"    \";\n            switch (entry.type) {\n              case LogType.clear:\n                colors.normal(`${indent}-------`);\n                newline();\n                continue;\n              case LogType.error:\n                color = colors.red;\n                prefix = \"<e> \";\n                break;\n              case LogType.warn:\n                color = colors.yellow;\n                prefix = \"<w> \";\n                break;\n              case LogType.info:\n                color = colors.green;\n                prefix = \"<i> \";\n                break;\n              case LogType.log:\n                color = colors.bold;\n                break;\n              case LogType.trace:\n              case LogType.debug:\n                color = colors.normal;\n                break;\n              case LogType.status:\n                color = colors.magenta;\n                prefix = \"<s> \";\n                break;\n              case LogType.profile:\n                color = colors.magenta;\n                prefix = \"<p> \";\n                break;\n              case LogType.profileEnd:\n                color = colors.magenta;\n                prefix = \"</p> \";\n                break;\n              case LogType.time:\n                color = colors.magenta;\n                prefix = \"<t> \";\n                break;\n              case LogType.group:\n                color = colors.cyan;\n                prefix = \"<-> \";\n                break;\n              case LogType.groupCollapsed:\n                color = colors.cyan;\n                prefix = \"<+> \";\n                break;\n              case LogType.groupEnd:\n                if (indent.length >= 2) indent = indent.slice(0, indent.length - 2);\n                continue;\n            }\n            if (entry.message) {\n              for (const line of entry.message.split(\"\\n\")) {\n                colors.normal(`${indent}${prefix}`);\n                color(line);\n                newline();\n              }\n            }\n            if (entry.trace) {\n              for (const line of entry.trace) {\n                colors.normal(`${indent}| ${line}`);\n                newline();\n              }\n            }\n            switch (entry.type) {\n              case LogType.group:\n                indent += \"  \";\n                break;\n            }\n          }\n          if (logData.filteredEntries) {\n            colors.normal(`+ ${logData.filteredEntries} hidden lines`);\n            newline();\n          }\n        }\n      }\n    }\n    if (obj._showWarnings && obj.warnings) {\n      for (const warning of obj.warnings) {\n        newline();\n        colors.yellow(`WARNING in ${warning}`);\n        newline();\n      }\n    }\n    if (obj._showErrors && obj.errors) {\n      for (const error of obj.errors) {\n        newline();\n        colors.red(`ERROR in ${error}`);\n        newline();\n      }\n    }\n    if (obj.children) {\n      for (const child of obj.children) {\n        const childString = Stats.jsonToString(child, useColors);\n        if (childString) {\n          if (child.name) {\n            colors.normal(\"Child \");\n            colors.bold(child.name);\n            colors.normal(\":\");\n          } else {\n            colors.normal(\"Child\");\n          }\n          newline();\n          buf.push(\"    \");\n          buf.push(childString.replace(/\\n/g, \"\\n    \"));\n          newline();\n        }\n      }\n    }\n    if (obj.needAdditionalPass) {\n      colors.yellow(\"Compilation needs an additional pass and will compile again.\");\n    }\n    while (buf[buf.length - 1] === \"\\n\") {\n      buf.pop();\n    }\n    return buf.join(\"\");\n  }\n  static presetToOptions(name) {\n    // Accepted values: none, errors-only, minimal, normal, detailed, verbose\n    // Any other falsy value will behave as 'none', truthy values as 'normal'\n    const pn = typeof name === \"string\" && name.toLowerCase() || name || \"none\";\n    switch (pn) {\n      case \"none\":\n        return {\n          all: false\n        };\n      case \"verbose\":\n        return {\n          entrypoints: true,\n          chunkGroups: true,\n          modules: false,\n          chunks: true,\n          chunkModules: true,\n          chunkOrigins: true,\n          depth: true,\n          env: true,\n          reasons: true,\n          usedExports: true,\n          providedExports: true,\n          optimizationBailout: true,\n          errorDetails: true,\n          publicPath: true,\n          logging: \"verbose\",\n          exclude: false,\n          maxModules: Infinity\n        };\n      case \"detailed\":\n        return {\n          entrypoints: true,\n          chunkGroups: true,\n          chunks: true,\n          chunkModules: false,\n          chunkOrigins: true,\n          depth: true,\n          usedExports: true,\n          providedExports: true,\n          optimizationBailout: true,\n          errorDetails: true,\n          publicPath: true,\n          logging: true,\n          exclude: false,\n          maxModules: Infinity\n        };\n      case \"minimal\":\n        return {\n          all: false,\n          modules: true,\n          maxModules: 0,\n          errors: true,\n          warnings: true,\n          logging: \"warn\"\n        };\n      case \"errors-only\":\n        return {\n          all: false,\n          errors: true,\n          moduleTrace: true,\n          logging: \"error\"\n        };\n      case \"errors-warnings\":\n        return {\n          all: false,\n          errors: true,\n          warnings: true,\n          logging: \"warn\"\n        };\n      default:\n        return {};\n    }\n  }\n  static getChildOptions(options, idx) {\n    let innerOptions;\n    if (Array.isArray(options.children)) {\n      if (idx < options.children.length) {\n        innerOptions = options.children[idx];\n      }\n    } else if (typeof options.children === \"object\" && options.children) {\n      innerOptions = options.children;\n    }\n    if (typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\") {\n      innerOptions = Stats.presetToOptions(innerOptions);\n    }\n    if (!innerOptions) {\n      return options;\n    }\n    const childOptions = Object.assign({}, options);\n    delete childOptions.children; // do not inherit children\n    return Object.assign(childOptions, innerOptions);\n  }\n}\nmodule.exports = Stats;","map":{"version":3,"names":["RequestShortener","require","SizeFormatHelpers","formatLocation","identifierUtils","compareLocations","LogType","optionsOrFallback","args","optionValues","push","find","optionValue","undefined","compareId","a","b","Stats","constructor","compilation","hash","startTime","endTime","filterWarnings","warnings","warningsFilter","normalizedWarningsFilters","concat","map","filter","warning","includes","RegExp","test","Error","some","check","formatFilePath","filePath","OPTIONS_REGEXP","replace","hasWarnings","length","children","child","getStats","hasErrors","errors","normalizeFieldKey","field","substr","sortOrderRegular","toJson","options","forToString","presetToOptions","optionOrLocalFallback","v","def","all","testAgainstGivenOption","item","regExp","ident","context","compiler","requestShortener","showPerformance","performance","showHash","showEnv","env","showVersion","version","showTimings","timings","showBuiltAt","builtAt","showAssets","assets","showEntrypoints","entrypoints","showChunkGroups","chunkGroups","showChunks","chunks","showChunkModules","chunkModules","showChunkOrigins","chunkOrigins","showModules","modules","showNestedModules","nestedModules","showModuleAssets","moduleAssets","showDepth","depth","showCachedModules","cached","showCachedAssets","cachedAssets","showReasons","reasons","showUsedExports","usedExports","showProvidedExports","providedExports","showOptimizationBailout","optimizationBailout","showChildren","showSource","source","showModuleTrace","moduleTrace","showErrors","showErrorDetails","errorDetails","showWarnings","showPublicPath","publicPath","showLogging","logging","showLoggingTrace","loggingTrace","loggingDebug","excludeModules","exclude","excludeAssets","maxModules","Infinity","sortModules","modulesSort","sortChunks","chunksSort","sortAssets","assetsSort","showOutputPath","outputPath","module","built","createModuleFilter","i","shorten","resource","excluded","fn","result","createAssetFilter","asset","name","emitted","sortByFieldAndOrder","fieldKey","sortByField","originalArray","originalMap","reduce","set","Map","sortIsRegular","cmp","get","formatError","e","text","message","chunk","id","hasRuntime","canBeInitial","file","readableIdentifier","loc","locInfo","details","missing","join","origin","originLoc","dependencies","dep","current","issuer","obj","Object","defineProperty","value","enumerable","time","_env","needAdditionalPass","mainTemplate","getPublicPath","outputOptions","path","assetsByFile","compilationAssets","getAssets","sort","assetsByChunkName","info","size","chunkNames","emittedAssets","has","isOverSizeLimit","filteredAssets","files","ids","fnChunkGroup","groupMap","keyValuePair","cg","getChildrenByOrders","c","array","keys","key","groups","group","create","childAssets","Array","from","add","Set","namedChunkGroups","fnModule","reverse","identifier","index","index2","cacheable","buildInfo","optional","prefetched","chunksIterable","issuerId","issuerName","issuerPath","profile","failed","error","dependency","type","reason","moduleId","moduleIdentifier","moduleName","explanation","userRequest","used","isArray","buildMeta","filteredModules","_source","parents","siblings","childIdByOrder","getChildIdsByOrders","chunkGroup","groupsIterable","parentGroup","parentsIterable","childGroup","childrenIterable","sibling","rendered","initial","entry","recorded","chunkReason","modulesSize","names","slice","renderedHash","childrenByOrder","getModules","getNumberOfModules","origins","g","request","cmp1","cmp2","cmp3","util","acceptedTypes","collapsedGroups","warn","log","groupEnd","groupCollapsed","clear","profileEnd","status","logEntries","debugMode","collapseCounter","processedLogEntries","format","trace","makePathsRelative","cache","entries","filteredEntries","debug","idx","childOptions","getChildOptions","toString","useColors","colors","jsonToString","buf","defaultColors","bold","yellow","red","green","cyan","magenta","color","str","normal","coloredTime","times","newline","getText","arr","row","col","table","align","splitter","rows","cols","colSizes","l","getAssetColor","defaultColor","builtAtDate","Date","timeZone","toLocaleTimeString","err","toLocaleDateString","day","month","year","JSON","stringify","t","formatSize","immutable","development","hotModuleReplacement","Boolean","processChunkGroups","namedGroups","prefix","outputChunkGroups","modulesByIdentifier","processModuleAttributes","processModuleContent","providedExportsCount","sum","m","factory","building","processModulesList","maxModuleId","contentPrefix","logData","indent","line","split","_showWarnings","_showErrors","childString","pop","pn","toLowerCase","innerOptions","assign","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/Stats.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\nconst formatLocation = require(\"./formatLocation\");\nconst identifierUtils = require(\"./util/identifier\");\nconst compareLocations = require(\"./compareLocations\");\nconst { LogType } = require(\"./logging/Logger\");\n\nconst optionsOrFallback = (...args) => {\n\tlet optionValues = [];\n\toptionValues.push(...args);\n\treturn optionValues.find(optionValue => optionValue !== undefined);\n};\n\nconst compareId = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nclass Stats {\n\tconstructor(compilation) {\n\t\tthis.compilation = compilation;\n\t\tthis.hash = compilation.hash;\n\t\tthis.startTime = undefined;\n\t\tthis.endTime = undefined;\n\t}\n\n\tstatic filterWarnings(warnings, warningsFilter) {\n\t\t// we dont have anything to filter so all warnings can be shown\n\t\tif (!warningsFilter) {\n\t\t\treturn warnings;\n\t\t}\n\n\t\t// create a chain of filters\n\t\t// if they return \"true\" a warning should be suppressed\n\t\tconst normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\n\t\t\tif (typeof filter === \"string\") {\n\t\t\t\treturn warning => warning.includes(filter);\n\t\t\t}\n\n\t\t\tif (filter instanceof RegExp) {\n\t\t\t\treturn warning => filter.test(warning);\n\t\t\t}\n\n\t\t\tif (typeof filter === \"function\") {\n\t\t\t\treturn filter;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`Can only filter warnings with Strings or RegExps. (Given: ${filter})`\n\t\t\t);\n\t\t});\n\t\treturn warnings.filter(warning => {\n\t\t\treturn !normalizedWarningsFilters.some(check => check(warning));\n\t\t});\n\t}\n\n\tformatFilePath(filePath) {\n\t\tconst OPTIONS_REGEXP = /^(\\s|\\S)*!/;\n\t\treturn filePath.includes(\"!\")\n\t\t\t? `${filePath.replace(OPTIONS_REGEXP, \"\")} (${filePath})`\n\t\t\t: `${filePath}`;\n\t}\n\n\thasWarnings() {\n\t\treturn (\n\t\t\tthis.compilation.warnings.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasWarnings())\n\t\t);\n\t}\n\n\thasErrors() {\n\t\treturn (\n\t\t\tthis.compilation.errors.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasErrors())\n\t\t);\n\t}\n\n\t// remove a prefixed \"!\" that can be specified to reverse sort order\n\tnormalizeFieldKey(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn field.substr(1);\n\t\t}\n\t\treturn field;\n\t}\n\n\t// if a field is prefixed by a \"!\" reverse sort order\n\tsortOrderRegular(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst optionOrLocalFallback = (v, def) =>\n\t\t\tv !== undefined ? v : options.all !== undefined ? options.all : def;\n\n\t\tconst testAgainstGivenOption = item => {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tconst regExp = new RegExp(\n\t\t\t\t\t`[\\\\\\\\/]${item.replace(\n\t\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t\t/[-[\\]{}()*+?.\\\\^$|]/g,\n\t\t\t\t\t\t\"\\\\$&\"\n\t\t\t\t\t)}([\\\\\\\\/]|$|!|\\\\?)`\n\t\t\t\t);\n\t\t\t\treturn ident => regExp.test(ident);\n\t\t\t}\n\t\t\tif (item && typeof item === \"object\" && typeof item.test === \"function\") {\n\t\t\t\treturn ident => item.test(ident);\n\t\t\t}\n\t\t\tif (typeof item === \"function\") {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\tif (typeof item === \"boolean\") {\n\t\t\t\treturn () => item;\n\t\t\t}\n\t\t};\n\n\t\tconst compilation = this.compilation;\n\t\tconst context = optionsOrFallback(\n\t\t\toptions.context,\n\t\t\tcompilation.compiler.context\n\t\t);\n\t\tconst requestShortener =\n\t\t\tcompilation.compiler.context === context\n\t\t\t\t? compilation.requestShortener\n\t\t\t\t: new RequestShortener(context);\n\t\tconst showPerformance = optionOrLocalFallback(options.performance, true);\n\t\tconst showHash = optionOrLocalFallback(options.hash, true);\n\t\tconst showEnv = optionOrLocalFallback(options.env, false);\n\t\tconst showVersion = optionOrLocalFallback(options.version, true);\n\t\tconst showTimings = optionOrLocalFallback(options.timings, true);\n\t\tconst showBuiltAt = optionOrLocalFallback(options.builtAt, true);\n\t\tconst showAssets = optionOrLocalFallback(options.assets, true);\n\t\tconst showEntrypoints = optionOrLocalFallback(options.entrypoints, true);\n\t\tconst showChunkGroups = optionOrLocalFallback(\n\t\t\toptions.chunkGroups,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChunks = optionOrLocalFallback(options.chunks, !forToString);\n\t\tconst showChunkModules = optionOrLocalFallback(options.chunkModules, true);\n\t\tconst showChunkOrigins = optionOrLocalFallback(\n\t\t\toptions.chunkOrigins,\n\t\t\t!forToString\n\t\t);\n\t\tconst showModules = optionOrLocalFallback(options.modules, true);\n\t\tconst showNestedModules = optionOrLocalFallback(\n\t\t\toptions.nestedModules,\n\t\t\ttrue\n\t\t);\n\t\tconst showModuleAssets = optionOrLocalFallback(\n\t\t\toptions.moduleAssets,\n\t\t\t!forToString\n\t\t);\n\t\tconst showDepth = optionOrLocalFallback(options.depth, !forToString);\n\t\tconst showCachedModules = optionOrLocalFallback(options.cached, true);\n\t\tconst showCachedAssets = optionOrLocalFallback(options.cachedAssets, true);\n\t\tconst showReasons = optionOrLocalFallback(options.reasons, !forToString);\n\t\tconst showUsedExports = optionOrLocalFallback(\n\t\t\toptions.usedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showProvidedExports = optionOrLocalFallback(\n\t\t\toptions.providedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showOptimizationBailout = optionOrLocalFallback(\n\t\t\toptions.optimizationBailout,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChildren = optionOrLocalFallback(options.children, true);\n\t\tconst showSource = optionOrLocalFallback(options.source, !forToString);\n\t\tconst showModuleTrace = optionOrLocalFallback(options.moduleTrace, true);\n\t\tconst showErrors = optionOrLocalFallback(options.errors, true);\n\t\tconst showErrorDetails = optionOrLocalFallback(\n\t\t\toptions.errorDetails,\n\t\t\t!forToString\n\t\t);\n\t\tconst showWarnings = optionOrLocalFallback(options.warnings, true);\n\t\tconst warningsFilter = optionsOrFallback(options.warningsFilter, null);\n\t\tconst showPublicPath = optionOrLocalFallback(\n\t\t\toptions.publicPath,\n\t\t\t!forToString\n\t\t);\n\t\tconst showLogging = optionOrLocalFallback(\n\t\t\toptions.logging,\n\t\t\tforToString ? \"info\" : true\n\t\t);\n\t\tconst showLoggingTrace = optionOrLocalFallback(\n\t\t\toptions.loggingTrace,\n\t\t\t!forToString\n\t\t);\n\t\tconst loggingDebug = []\n\t\t\t.concat(optionsOrFallback(options.loggingDebug, []))\n\t\t\t.map(testAgainstGivenOption);\n\n\t\tconst excludeModules = []\n\t\t\t.concat(optionsOrFallback(options.excludeModules, options.exclude, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst excludeAssets = []\n\t\t\t.concat(optionsOrFallback(options.excludeAssets, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst maxModules = optionsOrFallback(\n\t\t\toptions.maxModules,\n\t\t\tforToString ? 15 : Infinity\n\t\t);\n\t\tconst sortModules = optionsOrFallback(options.modulesSort, \"id\");\n\t\tconst sortChunks = optionsOrFallback(options.chunksSort, \"id\");\n\t\tconst sortAssets = optionsOrFallback(options.assetsSort, \"\");\n\t\tconst showOutputPath = optionOrLocalFallback(\n\t\t\toptions.outputPath,\n\t\t\t!forToString\n\t\t);\n\n\t\tif (!showCachedModules) {\n\t\t\texcludeModules.push((ident, module) => !module.built);\n\t\t}\n\n\t\tconst createModuleFilter = () => {\n\t\t\tlet i = 0;\n\t\t\treturn module => {\n\t\t\t\tif (excludeModules.length > 0) {\n\t\t\t\t\tconst ident = requestShortener.shorten(module.resource);\n\t\t\t\t\tconst excluded = excludeModules.some(fn => fn(ident, module));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\tconst result = i < maxModules;\n\t\t\t\ti++;\n\t\t\t\treturn result;\n\t\t\t};\n\t\t};\n\n\t\tconst createAssetFilter = () => {\n\t\t\treturn asset => {\n\t\t\t\tif (excludeAssets.length > 0) {\n\t\t\t\t\tconst ident = asset.name;\n\t\t\t\t\tconst excluded = excludeAssets.some(fn => fn(ident, asset));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\treturn showCachedAssets || asset.emitted;\n\t\t\t};\n\t\t};\n\n\t\tconst sortByFieldAndOrder = (fieldKey, a, b) => {\n\t\t\tif (a[fieldKey] === null && b[fieldKey] === null) return 0;\n\t\t\tif (a[fieldKey] === null) return 1;\n\t\t\tif (b[fieldKey] === null) return -1;\n\t\t\tif (a[fieldKey] === b[fieldKey]) return 0;\n\t\t\tif (typeof a[fieldKey] !== typeof b[fieldKey])\n\t\t\t\treturn typeof a[fieldKey] < typeof b[fieldKey] ? -1 : 1;\n\t\t\treturn a[fieldKey] < b[fieldKey] ? -1 : 1;\n\t\t};\n\n\t\tconst sortByField = (field, originalArray) => {\n\t\t\tconst originalMap = originalArray.reduce((map, v, i) => {\n\t\t\t\tmap.set(v, i);\n\t\t\t\treturn map;\n\t\t\t}, new Map());\n\t\t\treturn (a, b) => {\n\t\t\t\tif (field) {\n\t\t\t\t\tconst fieldKey = this.normalizeFieldKey(field);\n\n\t\t\t\t\t// if a field is prefixed with a \"!\" the sort is reversed!\n\t\t\t\t\tconst sortIsRegular = this.sortOrderRegular(field);\n\n\t\t\t\t\tconst cmp = sortByFieldAndOrder(\n\t\t\t\t\t\tfieldKey,\n\t\t\t\t\t\tsortIsRegular ? a : b,\n\t\t\t\t\t\tsortIsRegular ? b : a\n\t\t\t\t\t);\n\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t}\n\t\t\t\treturn originalMap.get(a) - originalMap.get(b);\n\t\t\t};\n\t\t};\n\n\t\tconst formatError = e => {\n\t\t\tlet text = \"\";\n\t\t\tif (typeof e === \"string\") {\n\t\t\t\te = { message: e };\n\t\t\t}\n\t\t\tif (e.chunk) {\n\t\t\t\ttext += `chunk ${e.chunk.name || e.chunk.id}${\n\t\t\t\t\te.chunk.hasRuntime()\n\t\t\t\t\t\t? \" [entry]\"\n\t\t\t\t\t\t: e.chunk.canBeInitial()\n\t\t\t\t\t\t? \" [initial]\"\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\\n`;\n\t\t\t}\n\t\t\tif (e.file) {\n\t\t\t\ttext += `${e.file}\\n`;\n\t\t\t}\n\t\t\tif (\n\t\t\t\te.module &&\n\t\t\t\te.module.readableIdentifier &&\n\t\t\t\ttypeof e.module.readableIdentifier === \"function\"\n\t\t\t) {\n\t\t\t\ttext += this.formatFilePath(\n\t\t\t\t\te.module.readableIdentifier(requestShortener)\n\t\t\t\t);\n\t\t\t\tif (typeof e.loc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.loc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\ttext += \"\\n\";\n\t\t\t}\n\t\t\ttext += e.message;\n\t\t\tif (showErrorDetails && e.details) {\n\t\t\t\ttext += `\\n${e.details}`;\n\t\t\t}\n\t\t\tif (showErrorDetails && e.missing) {\n\t\t\t\ttext += e.missing.map(item => `\\n[${item}]`).join(\"\");\n\t\t\t}\n\t\t\tif (showModuleTrace && e.origin) {\n\t\t\t\ttext += `\\n @ ${this.formatFilePath(\n\t\t\t\t\te.origin.readableIdentifier(requestShortener)\n\t\t\t\t)}`;\n\t\t\t\tif (typeof e.originLoc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.originLoc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\tif (e.dependencies) {\n\t\t\t\t\tfor (const dep of e.dependencies) {\n\t\t\t\t\t\tif (!dep.loc) continue;\n\t\t\t\t\t\tif (typeof dep.loc === \"string\") continue;\n\t\t\t\t\t\tconst locInfo = formatLocation(dep.loc);\n\t\t\t\t\t\tif (!locInfo) continue;\n\t\t\t\t\t\ttext += ` ${locInfo}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet current = e.origin;\n\t\t\t\twhile (current.issuer) {\n\t\t\t\t\tcurrent = current.issuer;\n\t\t\t\t\ttext += `\\n @ ${current.readableIdentifier(requestShortener)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\tconst obj = {\n\t\t\terrors: compilation.errors.map(formatError),\n\t\t\twarnings: Stats.filterWarnings(\n\t\t\t\tcompilation.warnings.map(formatError),\n\t\t\t\twarningsFilter\n\t\t\t)\n\t\t};\n\n\t\t//We just hint other renderers since actually omitting\n\t\t//errors/warnings from the JSON would be kind of weird.\n\t\tObject.defineProperty(obj, \"_showWarnings\", {\n\t\t\tvalue: showWarnings,\n\t\t\tenumerable: false\n\t\t});\n\t\tObject.defineProperty(obj, \"_showErrors\", {\n\t\t\tvalue: showErrors,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tif (showVersion) {\n\t\t\tobj.version = require(\"../package.json\").version;\n\t\t}\n\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (showTimings && this.startTime && this.endTime) {\n\t\t\tobj.time = this.endTime - this.startTime;\n\t\t}\n\n\t\tif (showBuiltAt && this.endTime) {\n\t\t\tobj.builtAt = this.endTime;\n\t\t}\n\n\t\tif (showEnv && options._env) {\n\t\t\tobj.env = options._env;\n\t\t}\n\n\t\tif (compilation.needAdditionalPass) {\n\t\t\tobj.needAdditionalPass = true;\n\t\t}\n\t\tif (showPublicPath) {\n\t\t\tobj.publicPath = this.compilation.mainTemplate.getPublicPath({\n\t\t\t\thash: this.compilation.hash\n\t\t\t});\n\t\t}\n\t\tif (showOutputPath) {\n\t\t\tobj.outputPath = this.compilation.mainTemplate.outputOptions.path;\n\t\t}\n\t\tif (showAssets) {\n\t\t\tconst assetsByFile = {};\n\t\t\tconst compilationAssets = compilation\n\t\t\t\t.getAssets()\n\t\t\t\t.sort((a, b) => (a.name < b.name ? -1 : 1));\n\t\t\tobj.assetsByChunkName = {};\n\t\t\tobj.assets = compilationAssets\n\t\t\t\t.map(({ name, source, info }) => {\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tsize: source.size(),\n\t\t\t\t\t\tchunks: [],\n\t\t\t\t\t\tchunkNames: [],\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\t// TODO webpack 5: remove .emitted\n\t\t\t\t\t\temitted: source.emitted || compilation.emittedAssets.has(name)\n\t\t\t\t\t};\n\n\t\t\t\t\tif (showPerformance) {\n\t\t\t\t\t\tobj.isOverSizeLimit = source.isOverSizeLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tassetsByFile[name] = obj;\n\t\t\t\t\treturn obj;\n\t\t\t\t})\n\t\t\t\t.filter(createAssetFilter());\n\t\t\tobj.filteredAssets = compilationAssets.length - obj.assets.length;\n\n\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\tif (assetsByFile[asset]) {\n\t\t\t\t\t\tfor (const id of chunk.ids) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunks.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (chunk.name) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunkNames.push(chunk.name);\n\t\t\t\t\t\t\tif (obj.assetsByChunkName[chunk.name]) {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = []\n\t\t\t\t\t\t\t\t\t.concat(obj.assetsByChunkName[chunk.name])\n\t\t\t\t\t\t\t\t\t.concat([asset]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = asset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.assets.sort(sortByField(sortAssets, obj.assets));\n\t\t}\n\n\t\tconst fnChunkGroup = groupMap => {\n\t\t\tconst obj = {};\n\t\t\tfor (const keyValuePair of groupMap) {\n\t\t\t\tconst name = keyValuePair[0];\n\t\t\t\tconst cg = keyValuePair[1];\n\t\t\t\tconst children = cg.getChildrenByOrders();\n\t\t\t\tobj[name] = {\n\t\t\t\t\tchunks: cg.chunks.map(c => c.id),\n\t\t\t\t\tassets: cg.chunks.reduce(\n\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t[]\n\t\t\t\t\t),\n\t\t\t\t\tchildren: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = groups.map(group => ({\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tchunks: group.chunks.map(c => c.id),\n\t\t\t\t\t\t\tassets: group.chunks.reduce(\n\t\t\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}));\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null)),\n\t\t\t\t\tchildAssets: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = Array.from(\n\t\t\t\t\t\t\tgroups.reduce((set, group) => {\n\t\t\t\t\t\t\t\tfor (const chunk of group.chunks) {\n\t\t\t\t\t\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\t\t\t\t\t\tset.add(asset);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn set;\n\t\t\t\t\t\t\t}, new Set())\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null))\n\t\t\t\t};\n\t\t\t\tif (showPerformance) {\n\t\t\t\t\tobj[name].isOverSizeLimit = cg.isOverSizeLimit;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\n\t\tif (showEntrypoints) {\n\t\t\tobj.entrypoints = fnChunkGroup(compilation.entrypoints);\n\t\t}\n\n\t\tif (showChunkGroups) {\n\t\t\tobj.namedChunkGroups = fnChunkGroup(compilation.namedChunkGroups);\n\t\t}\n\n\t\tconst fnModule = module => {\n\t\t\tconst path = [];\n\t\t\tlet current = module;\n\t\t\twhile (current.issuer) {\n\t\t\t\tpath.push((current = current.issuer));\n\t\t\t}\n\t\t\tpath.reverse();\n\t\t\tconst obj = {\n\t\t\t\tid: module.id,\n\t\t\t\tidentifier: module.identifier(),\n\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\tindex: module.index,\n\t\t\t\tindex2: module.index2,\n\t\t\t\tsize: module.size(),\n\t\t\t\tcacheable: module.buildInfo.cacheable,\n\t\t\t\tbuilt: !!module.built,\n\t\t\t\toptional: module.optional,\n\t\t\t\tprefetched: module.prefetched,\n\t\t\t\tchunks: Array.from(module.chunksIterable, chunk => chunk.id),\n\t\t\t\tissuer: module.issuer && module.issuer.identifier(),\n\t\t\t\tissuerId: module.issuer && module.issuer.id,\n\t\t\t\tissuerName:\n\t\t\t\t\tmodule.issuer && module.issuer.readableIdentifier(requestShortener),\n\t\t\t\tissuerPath:\n\t\t\t\t\tmodule.issuer &&\n\t\t\t\t\tpath.map(module => ({\n\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\tidentifier: module.identifier(),\n\t\t\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\t\t\tprofile: module.profile\n\t\t\t\t\t})),\n\t\t\t\tprofile: module.profile,\n\t\t\t\tfailed: !!module.error,\n\t\t\t\terrors: module.errors ? module.errors.length : 0,\n\t\t\t\twarnings: module.warnings ? module.warnings.length : 0\n\t\t\t};\n\t\t\tif (showModuleAssets) {\n\t\t\t\tobj.assets = Object.keys(module.buildInfo.assets || {});\n\t\t\t}\n\t\t\tif (showReasons) {\n\t\t\t\tobj.reasons = module.reasons\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.module && !b.module) return -1;\n\t\t\t\t\t\tif (!a.module && b.module) return 1;\n\t\t\t\t\t\tif (a.module && b.module) {\n\t\t\t\t\t\t\tconst cmp = compareId(a.module.id, b.module.id);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.dependency && !b.dependency) return -1;\n\t\t\t\t\t\tif (!a.dependency && b.dependency) return 1;\n\t\t\t\t\t\tif (a.dependency && b.dependency) {\n\t\t\t\t\t\t\tconst cmp = compareLocations(a.dependency.loc, b.dependency.loc);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t\tif (a.dependency.type < b.dependency.type) return -1;\n\t\t\t\t\t\t\tif (a.dependency.type > b.dependency.type) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t})\n\t\t\t\t\t.map(reason => {\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tmoduleId: reason.module ? reason.module.id : null,\n\t\t\t\t\t\t\tmoduleIdentifier: reason.module\n\t\t\t\t\t\t\t\t? reason.module.identifier()\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmodule: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmoduleName: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\ttype: reason.dependency ? reason.dependency.type : null,\n\t\t\t\t\t\t\texplanation: reason.explanation,\n\t\t\t\t\t\t\tuserRequest: reason.dependency\n\t\t\t\t\t\t\t\t? reason.dependency.userRequest\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (reason.dependency) {\n\t\t\t\t\t\t\tconst locInfo = formatLocation(reason.dependency.loc);\n\t\t\t\t\t\t\tif (locInfo) {\n\t\t\t\t\t\t\t\tobj.loc = locInfo;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tif (showUsedExports) {\n\t\t\t\tif (module.used === true) {\n\t\t\t\t\tobj.usedExports = module.usedExports;\n\t\t\t\t} else if (module.used === false) {\n\t\t\t\t\tobj.usedExports = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showProvidedExports) {\n\t\t\t\tobj.providedExports = Array.isArray(module.buildMeta.providedExports)\n\t\t\t\t\t? module.buildMeta.providedExports\n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\tif (showOptimizationBailout) {\n\t\t\t\tobj.optimizationBailout = module.optimizationBailout.map(item => {\n\t\t\t\t\tif (typeof item === \"function\") return item(requestShortener);\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (showDepth) {\n\t\t\t\tobj.depth = module.depth;\n\t\t\t}\n\t\t\tif (showNestedModules) {\n\t\t\t\tif (module.modules) {\n\t\t\t\t\tconst modules = module.modules;\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = modules.length - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showSource && module._source) {\n\t\t\t\tobj.source = module._source.source();\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\tif (showChunks) {\n\t\t\tobj.chunks = compilation.chunks.map(chunk => {\n\t\t\t\tconst parents = new Set();\n\t\t\t\tconst children = new Set();\n\t\t\t\tconst siblings = new Set();\n\t\t\t\tconst childIdByOrder = chunk.getChildIdsByOrders();\n\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\tfor (const parentGroup of chunkGroup.parentsIterable) {\n\t\t\t\t\t\tfor (const chunk of parentGroup.chunks) {\n\t\t\t\t\t\t\tparents.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const childGroup of chunkGroup.childrenIterable) {\n\t\t\t\t\t\tfor (const chunk of childGroup.chunks) {\n\t\t\t\t\t\t\tchildren.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const sibling of chunkGroup.chunks) {\n\t\t\t\t\t\tif (sibling !== chunk) siblings.add(sibling.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\tid: chunk.id,\n\t\t\t\t\trendered: chunk.rendered,\n\t\t\t\t\tinitial: chunk.canBeInitial(),\n\t\t\t\t\tentry: chunk.hasRuntime(),\n\t\t\t\t\trecorded: chunk.recorded,\n\t\t\t\t\treason: chunk.chunkReason,\n\t\t\t\t\tsize: chunk.modulesSize(),\n\t\t\t\t\tnames: chunk.name ? [chunk.name] : [],\n\t\t\t\t\tfiles: chunk.files.slice(),\n\t\t\t\t\thash: chunk.renderedHash,\n\t\t\t\t\tsiblings: Array.from(siblings).sort(compareId),\n\t\t\t\t\tparents: Array.from(parents).sort(compareId),\n\t\t\t\t\tchildren: Array.from(children).sort(compareId),\n\t\t\t\t\tchildrenByOrder: childIdByOrder\n\t\t\t\t};\n\t\t\t\tif (showChunkModules) {\n\t\t\t\t\tconst modules = chunk.getModules();\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.slice()\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = chunk.getNumberOfModules() - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t\tif (showChunkOrigins) {\n\t\t\t\t\tobj.origins = Array.from(chunk.groupsIterable, g => g.origins)\n\t\t\t\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t\t\t\t.map(origin => ({\n\t\t\t\t\t\t\tmoduleId: origin.module ? origin.module.id : undefined,\n\t\t\t\t\t\t\tmodule: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleName: origin.module\n\t\t\t\t\t\t\t\t? origin.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\tloc: formatLocation(origin.loc),\n\t\t\t\t\t\t\trequest: origin.request,\n\t\t\t\t\t\t\treasons: origin.reasons || []\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\tconst cmp1 = compareId(a.moduleId, b.moduleId);\n\t\t\t\t\t\t\tif (cmp1) return cmp1;\n\t\t\t\t\t\t\tconst cmp2 = compareId(a.loc, b.loc);\n\t\t\t\t\t\t\tif (cmp2) return cmp2;\n\t\t\t\t\t\t\tconst cmp3 = compareId(a.request, b.request);\n\t\t\t\t\t\t\tif (cmp3) return cmp3;\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t\tobj.chunks.sort(sortByField(sortChunks, obj.chunks));\n\t\t}\n\t\tif (showModules) {\n\t\t\tobj.modules = compilation.modules\n\t\t\t\t.slice()\n\t\t\t\t.sort(sortByField(\"depth\", compilation.modules))\n\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t.map(fnModule);\n\t\t\tobj.filteredModules = compilation.modules.length - obj.modules.length;\n\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t}\n\t\tif (showLogging) {\n\t\t\tconst util = require(\"util\");\n\t\t\tobj.logging = {};\n\t\t\tlet acceptedTypes;\n\t\t\tlet collapsedGroups = false;\n\t\t\tswitch (showLogging) {\n\t\t\t\tcase \"none\":\n\t\t\t\t\tacceptedTypes = new Set([]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"warn\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"info\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase true:\n\t\t\t\tcase \"log\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"verbose\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.profile,\n\t\t\t\t\t\tLogType.profileEnd,\n\t\t\t\t\t\tLogType.time,\n\t\t\t\t\t\tLogType.status,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tcollapsedGroups = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (const [origin, logEntries] of compilation.logging) {\n\t\t\t\tconst debugMode = loggingDebug.some(fn => fn(origin));\n\t\t\t\tlet collapseCounter = 0;\n\t\t\t\tlet processedLogEntries = logEntries;\n\t\t\t\tif (!debugMode) {\n\t\t\t\t\tprocessedLogEntries = processedLogEntries.filter(entry => {\n\t\t\t\t\t\tif (!acceptedTypes.has(entry.type)) return false;\n\t\t\t\t\t\tif (!collapsedGroups) {\n\t\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\t\tcollapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 1;\n\t\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) collapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) {\n\t\t\t\t\t\t\t\t\t\tcollapseCounter--;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tprocessedLogEntries = processedLogEntries.map(entry => {\n\t\t\t\t\tlet message = undefined;\n\t\t\t\t\tif (entry.type === LogType.time) {\n\t\t\t\t\t\tmessage = `${entry.args[0]}: ${entry.args[1] * 1000 +\n\t\t\t\t\t\t\tentry.args[2] / 1000000}ms`;\n\t\t\t\t\t} else if (entry.args && entry.args.length > 0) {\n\t\t\t\t\t\tmessage = util.format(entry.args[0], ...entry.args.slice(1));\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t(debugMode || collapsedGroups) &&\n\t\t\t\t\t\t\tentry.type === LogType.groupCollapsed\n\t\t\t\t\t\t\t\t? LogType.group\n\t\t\t\t\t\t\t\t: entry.type,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\ttrace: showLoggingTrace && entry.trace ? entry.trace : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet name = identifierUtils\n\t\t\t\t\t.makePathsRelative(context, origin, compilation.cache)\n\t\t\t\t\t.replace(/\\|/g, \" \");\n\t\t\t\tif (name in obj.logging) {\n\t\t\t\t\tlet i = 1;\n\t\t\t\t\twhile (`${name}#${i}` in obj.logging) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tname = `${name}#${i}`;\n\t\t\t\t}\n\t\t\t\tobj.logging[name] = {\n\t\t\t\t\tentries: processedLogEntries,\n\t\t\t\t\tfilteredEntries: logEntries.length - processedLogEntries.length,\n\t\t\t\t\tdebug: debugMode\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tif (showChildren) {\n\t\t\tobj.children = compilation.children.map((child, idx) => {\n\t\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\t\tconst obj = new Stats(child).toJson(childOptions, forToString);\n\t\t\t\tdelete obj.hash;\n\t\t\t\tdelete obj.version;\n\t\t\t\tif (child.name) {\n\t\t\t\t\tobj.name = identifierUtils.makePathsRelative(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tchild.name,\n\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionsOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n\n\tstatic jsonToString(obj, useColors) {\n\t\tconst buf = [];\n\n\t\tconst defaultColors = {\n\t\t\tbold: \"\\u001b[1m\",\n\t\t\tyellow: \"\\u001b[1m\\u001b[33m\",\n\t\t\tred: \"\\u001b[1m\\u001b[31m\",\n\t\t\tgreen: \"\\u001b[1m\\u001b[32m\",\n\t\t\tcyan: \"\\u001b[1m\\u001b[36m\",\n\t\t\tmagenta: \"\\u001b[1m\\u001b[35m\"\n\t\t};\n\n\t\tconst colors = Object.keys(defaultColors).reduce(\n\t\t\t(obj, color) => {\n\t\t\t\tobj[color] = str => {\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tuseColors === true || useColors[color] === undefined\n\t\t\t\t\t\t\t\t? defaultColors[color]\n\t\t\t\t\t\t\t\t: useColors[color]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.push(str);\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\"\\u001b[39m\\u001b[22m\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t{\n\t\t\t\tnormal: str => buf.push(str)\n\t\t\t}\n\t\t);\n\n\t\tconst coloredTime = time => {\n\t\t\tlet times = [800, 400, 200, 100];\n\t\t\tif (obj.time) {\n\t\t\t\ttimes = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\n\t\t\t}\n\t\t\tif (time < times[3]) colors.normal(`${time}ms`);\n\t\t\telse if (time < times[2]) colors.bold(`${time}ms`);\n\t\t\telse if (time < times[1]) colors.green(`${time}ms`);\n\t\t\telse if (time < times[0]) colors.yellow(`${time}ms`);\n\t\t\telse colors.red(`${time}ms`);\n\t\t};\n\n\t\tconst newline = () => buf.push(\"\\n\");\n\n\t\tconst getText = (arr, row, col) => {\n\t\t\treturn arr[row][col].value;\n\t\t};\n\n\t\tconst table = (array, align, splitter) => {\n\t\t\tconst rows = array.length;\n\t\t\tconst cols = array[0].length;\n\t\t\tconst colSizes = new Array(cols);\n\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\tcolSizes[col] = 0;\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tif (value.length > colSizes[col]) {\n\t\t\t\t\t\tcolSizes[col] = value.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst format = array[row][col].color;\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tlet l = value.length;\n\t\t\t\t\tif (align[col] === \"l\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tfor (; l < colSizes[col] && col !== cols - 1; l++) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (align[col] === \"r\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (col + 1 < cols && colSizes[col] !== 0) {\n\t\t\t\t\t\tcolors.normal(splitter || \"  \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tconst getAssetColor = (asset, defaultColor) => {\n\t\t\tif (asset.isOverSizeLimit) {\n\t\t\t\treturn colors.yellow;\n\t\t\t}\n\n\t\t\treturn defaultColor;\n\t\t};\n\n\t\tif (obj.hash) {\n\t\t\tcolors.normal(\"Hash: \");\n\t\t\tcolors.bold(obj.hash);\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.version) {\n\t\t\tcolors.normal(\"Version: webpack \");\n\t\t\tcolors.bold(obj.version);\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.time === \"number\") {\n\t\t\tcolors.normal(\"Time: \");\n\t\t\tcolors.bold(obj.time);\n\t\t\tcolors.normal(\"ms\");\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.builtAt === \"number\") {\n\t\t\tconst builtAtDate = new Date(obj.builtAt);\n\t\t\tlet timeZone = undefined;\n\n\t\t\ttry {\n\t\t\t\tbuiltAtDate.toLocaleTimeString();\n\t\t\t} catch (err) {\n\t\t\t\t// Force UTC if runtime timezone is unsupported\n\t\t\t\ttimeZone = \"UTC\";\n\t\t\t}\n\n\t\t\tcolors.normal(\"Built at: \");\n\t\t\tcolors.normal(\n\t\t\t\tbuiltAtDate.toLocaleDateString(undefined, {\n\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\tmonth: \"2-digit\",\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\ttimeZone\n\t\t\t\t})\n\t\t\t);\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.bold(builtAtDate.toLocaleTimeString(undefined, { timeZone }));\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.env) {\n\t\t\tcolors.normal(\"Environment (--env): \");\n\t\t\tcolors.bold(JSON.stringify(obj.env, null, 2));\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.publicPath) {\n\t\t\tcolors.normal(\"PublicPath: \");\n\t\t\tcolors.bold(obj.publicPath);\n\t\t\tnewline();\n\t\t}\n\n\t\tif (obj.assets && obj.assets.length > 0) {\n\t\t\tconst t = [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Asset\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Size\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunks\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunk Names\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t];\n\t\t\tfor (const asset of obj.assets) {\n\t\t\t\tt.push([\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.name,\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.green)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: SizeFormatHelpers.formatSize(asset.size),\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunks.join(\", \"),\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: [\n\t\t\t\t\t\t\tasset.emitted && \"[emitted]\",\n\t\t\t\t\t\t\tasset.info.immutable && \"[immutable]\",\n\t\t\t\t\t\t\tasset.info.development && \"[dev]\",\n\t\t\t\t\t\t\tasset.info.hotModuleReplacement && \"[hmr]\"\n\t\t\t\t\t\t]\n\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t.join(\" \"),\n\t\t\t\t\t\tcolor: colors.green\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.isOverSizeLimit ? \"[big]\" : \"\",\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunkNames.join(\", \"),\n\t\t\t\t\t\tcolor: colors.normal\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}\n\t\t\ttable(t, \"rrrlll\");\n\t\t}\n\t\tif (obj.filteredAssets > 0) {\n\t\t\tcolors.normal(\" \");\n\t\t\tif (obj.assets.length > 0) colors.normal(\"+ \");\n\t\t\tcolors.normal(obj.filteredAssets);\n\t\t\tif (obj.assets.length > 0) colors.normal(\" hidden\");\n\t\t\tcolors.normal(obj.filteredAssets !== 1 ? \" assets\" : \" asset\");\n\t\t\tnewline();\n\t\t}\n\n\t\tconst processChunkGroups = (namedGroups, prefix) => {\n\t\t\tfor (const name of Object.keys(namedGroups)) {\n\t\t\t\tconst cg = namedGroups[name];\n\t\t\t\tcolors.normal(`${prefix} `);\n\t\t\t\tcolors.bold(name);\n\t\t\t\tif (cg.isOverSizeLimit) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.yellow(\"[big]\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" =\");\n\t\t\t\tfor (const asset of cg.assets) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.green(asset);\n\t\t\t\t}\n\t\t\t\tfor (const name of Object.keys(cg.childAssets)) {\n\t\t\t\t\tconst assets = cg.childAssets[name];\n\t\t\t\t\tif (assets && assets.length > 0) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\tcolors.green(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tif (obj.entrypoints) {\n\t\t\tprocessChunkGroups(obj.entrypoints, \"Entrypoint\");\n\t\t}\n\n\t\tif (obj.namedChunkGroups) {\n\t\t\tlet outputChunkGroups = obj.namedChunkGroups;\n\t\t\tif (obj.entrypoints) {\n\t\t\t\toutputChunkGroups = Object.keys(outputChunkGroups)\n\t\t\t\t\t.filter(name => !obj.entrypoints[name])\n\t\t\t\t\t.reduce((result, name) => {\n\t\t\t\t\t\tresult[name] = obj.namedChunkGroups[name];\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, {});\n\t\t\t}\n\t\t\tprocessChunkGroups(outputChunkGroups, \"Chunk Group\");\n\t\t}\n\n\t\tconst modulesByIdentifier = {};\n\t\tif (obj.modules) {\n\t\t\tfor (const module of obj.modules) {\n\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t}\n\t\t} else if (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tif (chunk.modules) {\n\t\t\t\t\tfor (const module of chunk.modules) {\n\t\t\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst processModuleAttributes = module => {\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.normal(SizeFormatHelpers.formatSize(module.size));\n\t\t\tif (module.chunks) {\n\t\t\t\tfor (const chunk of module.chunks) {\n\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\tcolors.yellow(chunk);\n\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof module.depth === \"number\") {\n\t\t\t\tcolors.normal(` [depth ${module.depth}]`);\n\t\t\t}\n\t\t\tif (module.cacheable === false) {\n\t\t\t\tcolors.red(\" [not cacheable]\");\n\t\t\t}\n\t\t\tif (module.optional) {\n\t\t\t\tcolors.yellow(\" [optional]\");\n\t\t\t}\n\t\t\tif (module.built) {\n\t\t\t\tcolors.green(\" [built]\");\n\t\t\t}\n\t\t\tif (module.assets && module.assets.length) {\n\t\t\t\tcolors.magenta(\n\t\t\t\t\t` [${module.assets.length} asset${\n\t\t\t\t\t\tmodule.assets.length === 1 ? \"\" : \"s\"\n\t\t\t\t\t}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.prefetched) {\n\t\t\t\tcolors.magenta(\" [prefetched]\");\n\t\t\t}\n\t\t\tif (module.failed) colors.red(\" [failed]\");\n\t\t\tif (module.warnings) {\n\t\t\t\tcolors.yellow(\n\t\t\t\t\t` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.errors) {\n\t\t\t\tcolors.red(\n\t\t\t\t\t` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tconst processModuleContent = (module, prefix) => {\n\t\t\tif (Array.isArray(module.providedExports)) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tif (module.providedExports.length === 0) {\n\t\t\t\t\tcolors.cyan(\"[no exports]\");\n\t\t\t\t} else {\n\t\t\t\t\tcolors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.usedExports !== undefined) {\n\t\t\t\tif (module.usedExports !== true) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (module.usedExports === null) {\n\t\t\t\t\t\tcolors.cyan(\"[used exports unknown]\");\n\t\t\t\t\t} else if (module.usedExports === false) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\t\t\tprovidedExportsCount === module.usedExports.length\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcolors.cyan(\"[all exports used]\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.cyan(\n\t\t\t\t\t\t\t\t`[only some exports used: ${module.usedExports.join(\", \")}]`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(module.optimizationBailout)) {\n\t\t\t\tfor (const item of module.optimizationBailout) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.yellow(item);\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.reasons) {\n\t\t\t\tfor (const reason of module.reasons) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (reason.type) {\n\t\t\t\t\t\tcolors.normal(reason.type);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.userRequest) {\n\t\t\t\t\t\tcolors.cyan(reason.userRequest);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.moduleId !== null) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(reason.moduleId);\n\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.module && reason.module !== reason.moduleId) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(reason.module);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.loc) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.normal(reason.loc);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.explanation) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.cyan(reason.explanation);\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.profile) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tlet sum = 0;\n\t\t\t\tif (module.issuerPath) {\n\t\t\t\t\tfor (const m of module.issuerPath) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(m.id);\n\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\tif (m.profile) {\n\t\t\t\t\t\t\tconst time = (m.profile.factory || 0) + (m.profile.building || 0);\n\t\t\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\t\t\tsum += time;\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.normal(\"-> \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const key of Object.keys(module.profile)) {\n\t\t\t\t\tcolors.normal(`${key}:`);\n\t\t\t\t\tconst time = module.profile[key];\n\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tsum += time;\n\t\t\t\t}\n\t\t\t\tcolors.normal(\"= \");\n\t\t\t\tcoloredTime(sum);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.modules) {\n\t\t\t\tprocessModulesList(module, prefix + \"| \");\n\t\t\t}\n\t\t};\n\n\t\tconst processModulesList = (obj, prefix) => {\n\t\t\tif (obj.modules) {\n\t\t\t\tlet maxModuleId = 0;\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\tif (maxModuleId < module.id) maxModuleId = module.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet contentPrefix = prefix + \"    \";\n\t\t\t\tif (maxModuleId >= 10) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 100) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 1000) contentPrefix += \" \";\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tconst name = module.name || module.identifier;\n\t\t\t\t\tif (typeof module.id === \"string\" || typeof module.id === \"number\") {\n\t\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\t\tif (module.id < 1000 && maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 100 && maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 10 && maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.bold(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\tcolors.bold(name);\n\t\t\t\t\t}\n\t\t\t\t\tprocessModuleAttributes(module);\n\t\t\t\t\tnewline();\n\t\t\t\t\tprocessModuleContent(module, contentPrefix);\n\t\t\t\t}\n\t\t\t\tif (obj.filteredModules > 0) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.normal(\"   \");\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" + \");\n\t\t\t\t\tcolors.normal(obj.filteredModules);\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" hidden\");\n\t\t\t\t\tcolors.normal(obj.filteredModules !== 1 ? \" modules\" : \" module\");\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tcolors.normal(\"chunk \");\n\t\t\t\tif (chunk.id < 1000) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 100) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 10) colors.normal(\" \");\n\t\t\t\tcolors.normal(\"{\");\n\t\t\t\tcolors.yellow(chunk.id);\n\t\t\t\tcolors.normal(\"} \");\n\t\t\t\tcolors.green(chunk.files.join(\", \"));\n\t\t\t\tif (chunk.names && chunk.names.length > 0) {\n\t\t\t\t\tcolors.normal(\" (\");\n\t\t\t\t\tcolors.normal(chunk.names.join(\", \"));\n\t\t\t\t\tcolors.normal(\")\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" \");\n\t\t\t\tcolors.normal(SizeFormatHelpers.formatSize(chunk.size));\n\t\t\t\tfor (const id of chunk.parents) {\n\t\t\t\t\tcolors.normal(\" <{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}>\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.siblings) {\n\t\t\t\t\tcolors.normal(\" ={\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}=\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.children) {\n\t\t\t\t\tcolors.normal(\" >{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}<\");\n\t\t\t\t}\n\t\t\t\tif (chunk.childrenByOrder) {\n\t\t\t\t\tfor (const name of Object.keys(chunk.childrenByOrder)) {\n\t\t\t\t\t\tconst children = chunk.childrenByOrder[name];\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const id of children) {\n\t\t\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (chunk.entry) {\n\t\t\t\t\tcolors.yellow(\" [entry]\");\n\t\t\t\t} else if (chunk.initial) {\n\t\t\t\t\tcolors.yellow(\" [initial]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.rendered) {\n\t\t\t\t\tcolors.green(\" [rendered]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.recorded) {\n\t\t\t\t\tcolors.green(\" [recorded]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.reason) {\n\t\t\t\t\tcolors.yellow(` ${chunk.reason}`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t\tif (chunk.origins) {\n\t\t\t\t\tfor (const origin of chunk.origins) {\n\t\t\t\t\t\tcolors.normal(\"    > \");\n\t\t\t\t\t\tif (origin.reasons && origin.reasons.length) {\n\t\t\t\t\t\t\tcolors.yellow(origin.reasons.join(\" \"));\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.request) {\n\t\t\t\t\t\t\tcolors.normal(origin.request);\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.module) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(origin.moduleId);\n\t\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\t\tconst module = modulesByIdentifier[`$${origin.module}`];\n\t\t\t\t\t\t\tif (module) {\n\t\t\t\t\t\t\t\tcolors.bold(module.name);\n\t\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.loc) {\n\t\t\t\t\t\t\tcolors.normal(origin.loc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprocessModulesList(chunk, \" \");\n\t\t\t}\n\t\t}\n\n\t\tprocessModulesList(obj, \"\");\n\n\t\tif (obj.logging) {\n\t\t\tfor (const origin of Object.keys(obj.logging)) {\n\t\t\t\tconst logData = obj.logging[origin];\n\t\t\t\tif (logData.entries.length > 0) {\n\t\t\t\t\tnewline();\n\t\t\t\t\tif (logData.debug) {\n\t\t\t\t\t\tcolors.red(\"DEBUG \");\n\t\t\t\t\t}\n\t\t\t\t\tcolors.bold(\"LOG from \" + origin);\n\t\t\t\t\tnewline();\n\t\t\t\t\tlet indent = \"\";\n\t\t\t\t\tfor (const entry of logData.entries) {\n\t\t\t\t\t\tlet color = colors.normal;\n\t\t\t\t\t\tlet prefix = \"    \";\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.clear:\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}-------`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tcase LogType.error:\n\t\t\t\t\t\t\t\tcolor = colors.red;\n\t\t\t\t\t\t\t\tprefix = \"<e> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.warn:\n\t\t\t\t\t\t\t\tcolor = colors.yellow;\n\t\t\t\t\t\t\t\tprefix = \"<w> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.info:\n\t\t\t\t\t\t\t\tcolor = colors.green;\n\t\t\t\t\t\t\t\tprefix = \"<i> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.log:\n\t\t\t\t\t\t\t\tcolor = colors.bold;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.trace:\n\t\t\t\t\t\t\tcase LogType.debug:\n\t\t\t\t\t\t\t\tcolor = colors.normal;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.status:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<s> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profile:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profileEnd:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"</p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.time:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<t> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tprefix = \"<-> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tprefix = \"<+> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\tif (indent.length >= 2)\n\t\t\t\t\t\t\t\t\tindent = indent.slice(0, indent.length - 2);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.message) {\n\t\t\t\t\t\t\tfor (const line of entry.message.split(\"\\n\")) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}${prefix}`);\n\t\t\t\t\t\t\t\tcolor(line);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.trace) {\n\t\t\t\t\t\t\tfor (const line of entry.trace) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}| ${line}`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tindent += \"  \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (logData.filteredEntries) {\n\t\t\t\t\t\tcolors.normal(`+ ${logData.filteredEntries} hidden lines`);\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj._showWarnings && obj.warnings) {\n\t\t\tfor (const warning of obj.warnings) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.yellow(`WARNING in ${warning}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj._showErrors && obj.errors) {\n\t\t\tfor (const error of obj.errors) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.red(`ERROR in ${error}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj.children) {\n\t\t\tfor (const child of obj.children) {\n\t\t\t\tconst childString = Stats.jsonToString(child, useColors);\n\t\t\t\tif (childString) {\n\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\tcolors.normal(\"Child \");\n\t\t\t\t\t\tcolors.bold(child.name);\n\t\t\t\t\t\tcolors.normal(\":\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors.normal(\"Child\");\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t\tbuf.push(\"    \");\n\t\t\t\t\tbuf.push(childString.replace(/\\n/g, \"\\n    \"));\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (obj.needAdditionalPass) {\n\t\t\tcolors.yellow(\n\t\t\t\t\"Compilation needs an additional pass and will compile again.\"\n\t\t\t);\n\t\t}\n\n\t\twhile (buf[buf.length - 1] === \"\\n\") {\n\t\t\tbuf.pop();\n\t\t}\n\t\treturn buf.join(\"\");\n\t}\n\n\tstatic presetToOptions(name) {\n\t\t// Accepted values: none, errors-only, minimal, normal, detailed, verbose\n\t\t// Any other falsy value will behave as 'none', truthy values as 'normal'\n\t\tconst pn =\n\t\t\t(typeof name === \"string\" && name.toLowerCase()) || name || \"none\";\n\t\tswitch (pn) {\n\t\t\tcase \"none\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false\n\t\t\t\t};\n\t\t\tcase \"verbose\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tmodules: false,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: true,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tenv: true,\n\t\t\t\t\treasons: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: \"verbose\",\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"detailed\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: false,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: true,\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"minimal\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\tmodules: true,\n\t\t\t\t\tmaxModules: 0,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tcase \"errors-only\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\tmoduleTrace: true,\n\t\t\t\t\tlogging: \"error\"\n\t\t\t\t};\n\t\t\tcase \"errors-warnings\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {};\n\t\t}\n\t}\n\n\tstatic getChildOptions(options, idx) {\n\t\tlet innerOptions;\n\t\tif (Array.isArray(options.children)) {\n\t\t\tif (idx < options.children.length) {\n\t\t\t\tinnerOptions = options.children[idx];\n\t\t\t}\n\t\t} else if (typeof options.children === \"object\" && options.children) {\n\t\t\tinnerOptions = options.children;\n\t\t}\n\t\tif (typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\") {\n\t\t\tinnerOptions = Stats.presetToOptions(innerOptions);\n\t\t}\n\t\tif (!innerOptions) {\n\t\t\treturn options;\n\t\t}\n\t\tconst childOptions = Object.assign({}, options);\n\t\tdelete childOptions.children; // do not inherit children\n\t\treturn Object.assign(childOptions, innerOptions);\n\t}\n}\n\nmodule.exports = Stats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}