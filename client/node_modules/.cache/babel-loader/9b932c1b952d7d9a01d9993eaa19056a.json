{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst mergeCache = new WeakMap();\n\n/**\n * Merges two given objects and caches the result to avoid computation if same objects passed as arguments again.\n * @example\n * // performs cleverMerge(first, second), stores the result in WeakMap and returns result\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n *  // when same arguments passed, gets the result from WeakMap and returns it.\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cachedCleverMerge = (first, second) => {\n  let innerCache = mergeCache.get(first);\n  if (innerCache === undefined) {\n    innerCache = new WeakMap();\n    mergeCache.set(first, innerCache);\n  }\n  const prevMerge = innerCache.get(second);\n  if (prevMerge !== undefined) return prevMerge;\n  const newMerge = cleverMerge(first, second);\n  innerCache.set(second, newMerge);\n  return newMerge;\n};\n\n/**\n * Merges two objects. Objects are not deeply merged.\n * TODO webpack 5: merge objects deeply clever.\n * Arrays might reference the old value with \"...\"\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cleverMerge = (first, second) => {\n  const newObject = Object.assign({}, first);\n  for (const key of Object.keys(second)) {\n    if (!(key in newObject)) {\n      newObject[key] = second[key];\n      continue;\n    }\n    const secondValue = second[key];\n    if (!Array.isArray(secondValue)) {\n      newObject[key] = secondValue;\n      continue;\n    }\n    const firstValue = newObject[key];\n    if (Array.isArray(firstValue)) {\n      const newArray = [];\n      for (const item of secondValue) {\n        if (item === \"...\") {\n          for (const item of firstValue) {\n            newArray.push(item);\n          }\n        } else {\n          newArray.push(item);\n        }\n      }\n      newObject[key] = newArray;\n    } else {\n      newObject[key] = secondValue;\n    }\n  }\n  return newObject;\n};\nexports.cachedCleverMerge = cachedCleverMerge;\nexports.cleverMerge = cleverMerge;","map":{"version":3,"names":["mergeCache","WeakMap","cachedCleverMerge","first","second","innerCache","get","undefined","set","prevMerge","newMerge","cleverMerge","newObject","Object","assign","key","keys","secondValue","Array","isArray","firstValue","newArray","item","push","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/util/cleverMerge.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst mergeCache = new WeakMap();\n\n/**\n * Merges two given objects and caches the result to avoid computation if same objects passed as arguments again.\n * @example\n * // performs cleverMerge(first, second), stores the result in WeakMap and returns result\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n *  // when same arguments passed, gets the result from WeakMap and returns it.\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cachedCleverMerge = (first, second) => {\n\tlet innerCache = mergeCache.get(first);\n\tif (innerCache === undefined) {\n\t\tinnerCache = new WeakMap();\n\t\tmergeCache.set(first, innerCache);\n\t}\n\tconst prevMerge = innerCache.get(second);\n\tif (prevMerge !== undefined) return prevMerge;\n\tconst newMerge = cleverMerge(first, second);\n\tinnerCache.set(second, newMerge);\n\treturn newMerge;\n};\n\n/**\n * Merges two objects. Objects are not deeply merged.\n * TODO webpack 5: merge objects deeply clever.\n * Arrays might reference the old value with \"...\"\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cleverMerge = (first, second) => {\n\tconst newObject = Object.assign({}, first);\n\tfor (const key of Object.keys(second)) {\n\t\tif (!(key in newObject)) {\n\t\t\tnewObject[key] = second[key];\n\t\t\tcontinue;\n\t\t}\n\t\tconst secondValue = second[key];\n\t\tif (!Array.isArray(secondValue)) {\n\t\t\tnewObject[key] = secondValue;\n\t\t\tcontinue;\n\t\t}\n\t\tconst firstValue = newObject[key];\n\t\tif (Array.isArray(firstValue)) {\n\t\t\tconst newArray = [];\n\t\t\tfor (const item of secondValue) {\n\t\t\t\tif (item === \"...\") {\n\t\t\t\t\tfor (const item of firstValue) {\n\t\t\t\t\t\tnewArray.push(item);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewArray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewObject[key] = newArray;\n\t\t} else {\n\t\t\tnewObject[key] = secondValue;\n\t\t}\n\t}\n\treturn newObject;\n};\n\nexports.cachedCleverMerge = cachedCleverMerge;\nexports.cleverMerge = cleverMerge;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,IAAIC,UAAU,GAAGL,UAAU,CAACM,GAAG,CAACH,KAAK,CAAC;EACtC,IAAIE,UAAU,KAAKE,SAAS,EAAE;IAC7BF,UAAU,GAAG,IAAIJ,OAAO,CAAC,CAAC;IAC1BD,UAAU,CAACQ,GAAG,CAACL,KAAK,EAAEE,UAAU,CAAC;EAClC;EACA,MAAMI,SAAS,GAAGJ,UAAU,CAACC,GAAG,CAACF,MAAM,CAAC;EACxC,IAAIK,SAAS,KAAKF,SAAS,EAAE,OAAOE,SAAS;EAC7C,MAAMC,QAAQ,GAAGC,WAAW,CAACR,KAAK,EAAEC,MAAM,CAAC;EAC3CC,UAAU,CAACG,GAAG,CAACJ,MAAM,EAAEM,QAAQ,CAAC;EAChC,OAAOA,QAAQ;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGA,CAACR,KAAK,EAAEC,MAAM,KAAK;EACtC,MAAMQ,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,KAAK,CAAC;EAC1C,KAAK,MAAMY,GAAG,IAAIF,MAAM,CAACG,IAAI,CAACZ,MAAM,CAAC,EAAE;IACtC,IAAI,EAAEW,GAAG,IAAIH,SAAS,CAAC,EAAE;MACxBA,SAAS,CAACG,GAAG,CAAC,GAAGX,MAAM,CAACW,GAAG,CAAC;MAC5B;IACD;IACA,MAAME,WAAW,GAAGb,MAAM,CAACW,GAAG,CAAC;IAC/B,IAAI,CAACG,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;MAChCL,SAAS,CAACG,GAAG,CAAC,GAAGE,WAAW;MAC5B;IACD;IACA,MAAMG,UAAU,GAAGR,SAAS,CAACG,GAAG,CAAC;IACjC,IAAIG,KAAK,CAACC,OAAO,CAACC,UAAU,CAAC,EAAE;MAC9B,MAAMC,QAAQ,GAAG,EAAE;MACnB,KAAK,MAAMC,IAAI,IAAIL,WAAW,EAAE;QAC/B,IAAIK,IAAI,KAAK,KAAK,EAAE;UACnB,KAAK,MAAMA,IAAI,IAAIF,UAAU,EAAE;YAC9BC,QAAQ,CAACE,IAAI,CAACD,IAAI,CAAC;UACpB;QACD,CAAC,MAAM;UACND,QAAQ,CAACE,IAAI,CAACD,IAAI,CAAC;QACpB;MACD;MACAV,SAAS,CAACG,GAAG,CAAC,GAAGM,QAAQ;IAC1B,CAAC,MAAM;MACNT,SAAS,CAACG,GAAG,CAAC,GAAGE,WAAW;IAC7B;EACD;EACA,OAAOL,SAAS;AACjB,CAAC;AAEDY,OAAO,CAACtB,iBAAiB,GAAGA,iBAAiB;AAC7CsB,OAAO,CAACb,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script"}