{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\nconst contentPath = require('./path');\nconst fixOwner = require('../util/fix-owner');\nconst fs = require('graceful-fs');\nconst moveFile = require('../util/move-file');\nconst PassThrough = require('stream').PassThrough;\nconst path = require('path');\nconst pipe = BB.promisify(require('mississippi').pipe);\nconst rimraf = BB.promisify(require('rimraf'));\nconst ssri = require('ssri');\nconst to = require('mississippi').to;\nconst uniqueFilename = require('unique-filename');\nconst Y = require('../util/y.js');\nconst writeFileAsync = BB.promisify(fs.writeFile);\nmodule.exports = write;\nfunction write(cache, data, opts) {\n  opts = opts || {};\n  if (opts.algorithms && opts.algorithms.length > 1) {\n    throw new Error(Y`opts.algorithms only supports a single algorithm for now`);\n  }\n  if (typeof opts.size === 'number' && data.length !== opts.size) {\n    return BB.reject(sizeError(opts.size, data.length));\n  }\n  const sri = ssri.fromData(data, {\n    algorithms: opts.algorithms\n  });\n  if (opts.integrity && !ssri.checkData(data, opts.integrity, opts)) {\n    return BB.reject(checksumError(opts.integrity, sri));\n  }\n  return BB.using(makeTmp(cache, opts), tmp => writeFileAsync(tmp.target, data, {\n    flag: 'wx'\n  }).then(() => moveToDestination(tmp, cache, sri, opts))).then(() => ({\n    integrity: sri,\n    size: data.length\n  }));\n}\nmodule.exports.stream = writeStream;\nfunction writeStream(cache, opts) {\n  opts = opts || {};\n  const inputStream = new PassThrough();\n  let inputErr = false;\n  function errCheck() {\n    if (inputErr) {\n      throw inputErr;\n    }\n  }\n  let allDone;\n  const ret = to((c, n, cb) => {\n    if (!allDone) {\n      allDone = handleContent(inputStream, cache, opts, errCheck);\n    }\n    inputStream.write(c, n, cb);\n  }, cb => {\n    inputStream.end(() => {\n      if (!allDone) {\n        const e = new Error(Y`Cache input stream was empty`);\n        e.code = 'ENODATA';\n        return ret.emit('error', e);\n      }\n      allDone.then(res => {\n        res.integrity && ret.emit('integrity', res.integrity);\n        res.size !== null && ret.emit('size', res.size);\n        cb();\n      }, e => {\n        ret.emit('error', e);\n      });\n    });\n  });\n  ret.once('error', e => {\n    inputErr = e;\n  });\n  return ret;\n}\nfunction handleContent(inputStream, cache, opts, errCheck) {\n  return BB.using(makeTmp(cache, opts), tmp => {\n    errCheck();\n    return pipeToTmp(inputStream, cache, tmp.target, opts, errCheck).then(res => {\n      return moveToDestination(tmp, cache, res.integrity, opts, errCheck).then(() => res);\n    });\n  });\n}\nfunction pipeToTmp(inputStream, cache, tmpTarget, opts, errCheck) {\n  return BB.resolve().then(() => {\n    let integrity;\n    let size;\n    const hashStream = ssri.integrityStream({\n      integrity: opts.integrity,\n      algorithms: opts.algorithms,\n      size: opts.size\n    }).on('integrity', s => {\n      integrity = s;\n    }).on('size', s => {\n      size = s;\n    });\n    const outStream = fs.createWriteStream(tmpTarget, {\n      flags: 'wx'\n    });\n    errCheck();\n    return pipe(inputStream, hashStream, outStream).then(() => {\n      return {\n        integrity,\n        size\n      };\n    }).catch(err => {\n      return rimraf(tmpTarget).then(() => {\n        throw err;\n      });\n    });\n  });\n}\nfunction makeTmp(cache, opts) {\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix);\n  return fixOwner.mkdirfix(cache, path.dirname(tmpTarget)).then(() => ({\n    target: tmpTarget,\n    moved: false\n  })).disposer(tmp => !tmp.moved && rimraf(tmp.target));\n}\nfunction moveToDestination(tmp, cache, sri, opts, errCheck) {\n  errCheck && errCheck();\n  const destination = contentPath(cache, sri);\n  const destDir = path.dirname(destination);\n  return fixOwner.mkdirfix(cache, destDir).then(() => {\n    errCheck && errCheck();\n    return moveFile(tmp.target, destination);\n  }).then(() => {\n    errCheck && errCheck();\n    tmp.moved = true;\n    return fixOwner.chownr(cache, destination);\n  });\n}\nfunction sizeError(expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`);\n  err.expected = expected;\n  err.found = found;\n  err.code = 'EBADSIZE';\n  return err;\n}\nfunction checksumError(expected, found) {\n  var err = new Error(Y`Integrity check failed:\n  Wanted: ${expected}\n   Found: ${found}`);\n  err.code = 'EINTEGRITY';\n  err.expected = expected;\n  err.found = found;\n  return err;\n}","map":{"version":3,"names":["BB","require","contentPath","fixOwner","fs","moveFile","PassThrough","path","pipe","promisify","rimraf","ssri","to","uniqueFilename","Y","writeFileAsync","writeFile","module","exports","write","cache","data","opts","algorithms","length","Error","size","reject","sizeError","sri","fromData","integrity","checkData","checksumError","using","makeTmp","tmp","target","flag","then","moveToDestination","stream","writeStream","inputStream","inputErr","errCheck","allDone","ret","c","n","cb","handleContent","end","e","code","emit","res","once","pipeToTmp","tmpTarget","resolve","hashStream","integrityStream","on","s","outStream","createWriteStream","flags","catch","err","join","tmpPrefix","mkdirfix","dirname","moved","disposer","destination","destDir","chownr","expected","found"],"sources":["/home/soon/bulletin-board/node_modules/webpack/node_modules/cacache/lib/content/write.js"],"sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst contentPath = require('./path')\nconst fixOwner = require('../util/fix-owner')\nconst fs = require('graceful-fs')\nconst moveFile = require('../util/move-file')\nconst PassThrough = require('stream').PassThrough\nconst path = require('path')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst rimraf = BB.promisify(require('rimraf'))\nconst ssri = require('ssri')\nconst to = require('mississippi').to\nconst uniqueFilename = require('unique-filename')\nconst Y = require('../util/y.js')\n\nconst writeFileAsync = BB.promisify(fs.writeFile)\n\nmodule.exports = write\nfunction write (cache, data, opts) {\n  opts = opts || {}\n  if (opts.algorithms && opts.algorithms.length > 1) {\n    throw new Error(\n      Y`opts.algorithms only supports a single algorithm for now`\n    )\n  }\n  if (typeof opts.size === 'number' && data.length !== opts.size) {\n    return BB.reject(sizeError(opts.size, data.length))\n  }\n  const sri = ssri.fromData(data, {\n    algorithms: opts.algorithms\n  })\n  if (opts.integrity && !ssri.checkData(data, opts.integrity, opts)) {\n    return BB.reject(checksumError(opts.integrity, sri))\n  }\n  return BB.using(makeTmp(cache, opts), tmp => (\n    writeFileAsync(\n      tmp.target, data, { flag: 'wx' }\n    ).then(() => (\n      moveToDestination(tmp, cache, sri, opts)\n    ))\n  )).then(() => ({ integrity: sri, size: data.length }))\n}\n\nmodule.exports.stream = writeStream\nfunction writeStream (cache, opts) {\n  opts = opts || {}\n  const inputStream = new PassThrough()\n  let inputErr = false\n  function errCheck () {\n    if (inputErr) { throw inputErr }\n  }\n\n  let allDone\n  const ret = to((c, n, cb) => {\n    if (!allDone) {\n      allDone = handleContent(inputStream, cache, opts, errCheck)\n    }\n    inputStream.write(c, n, cb)\n  }, cb => {\n    inputStream.end(() => {\n      if (!allDone) {\n        const e = new Error(Y`Cache input stream was empty`)\n        e.code = 'ENODATA'\n        return ret.emit('error', e)\n      }\n      allDone.then(res => {\n        res.integrity && ret.emit('integrity', res.integrity)\n        res.size !== null && ret.emit('size', res.size)\n        cb()\n      }, e => {\n        ret.emit('error', e)\n      })\n    })\n  })\n  ret.once('error', e => {\n    inputErr = e\n  })\n  return ret\n}\n\nfunction handleContent (inputStream, cache, opts, errCheck) {\n  return BB.using(makeTmp(cache, opts), tmp => {\n    errCheck()\n    return pipeToTmp(\n      inputStream, cache, tmp.target, opts, errCheck\n    ).then(res => {\n      return moveToDestination(\n        tmp, cache, res.integrity, opts, errCheck\n      ).then(() => res)\n    })\n  })\n}\n\nfunction pipeToTmp (inputStream, cache, tmpTarget, opts, errCheck) {\n  return BB.resolve().then(() => {\n    let integrity\n    let size\n    const hashStream = ssri.integrityStream({\n      integrity: opts.integrity,\n      algorithms: opts.algorithms,\n      size: opts.size\n    }).on('integrity', s => {\n      integrity = s\n    }).on('size', s => {\n      size = s\n    })\n    const outStream = fs.createWriteStream(tmpTarget, {\n      flags: 'wx'\n    })\n    errCheck()\n    return pipe(inputStream, hashStream, outStream).then(() => {\n      return { integrity, size }\n    }).catch(err => {\n      return rimraf(tmpTarget).then(() => { throw err })\n    })\n  })\n}\n\nfunction makeTmp (cache, opts) {\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)\n  return fixOwner.mkdirfix(\n    cache, path.dirname(tmpTarget)\n  ).then(() => ({\n    target: tmpTarget,\n    moved: false\n  })).disposer(tmp => (!tmp.moved && rimraf(tmp.target)))\n}\n\nfunction moveToDestination (tmp, cache, sri, opts, errCheck) {\n  errCheck && errCheck()\n  const destination = contentPath(cache, sri)\n  const destDir = path.dirname(destination)\n\n  return fixOwner.mkdirfix(\n    cache, destDir\n  ).then(() => {\n    errCheck && errCheck()\n    return moveFile(tmp.target, destination)\n  }).then(() => {\n    errCheck && errCheck()\n    tmp.moved = true\n    return fixOwner.chownr(cache, destination)\n  })\n}\n\nfunction sizeError (expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)\n  err.expected = expected\n  err.found = found\n  err.code = 'EBADSIZE'\n  return err\n}\n\nfunction checksumError (expected, found) {\n  var err = new Error(Y`Integrity check failed:\n  Wanted: ${expected}\n   Found: ${found}`)\n  err.code = 'EINTEGRITY'\n  err.expected = expected\n  err.found = found\n  return err\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}