{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n  constructor(moduleOptions) {\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n  }\n  apply(parser) {\n    parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", statement => {\n      const dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(\"\", statement.range);\n      clearDep.loc = Object.create(statement.loc);\n      clearDep.loc.index = -1;\n      parser.state.current.addDependency(clearDep);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n      sideEffectDep.loc = Object.create(statement.loc);\n      sideEffectDep.loc.index = -1;\n      parser.state.current.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", (statement, expr) => {\n      const comments = parser.getComments([statement.range[0], expr.range[0]]);\n      const dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range, comments.map(c => {\n        switch (c.type) {\n          case \"Block\":\n            return `/*${c.value}*/`;\n          case \"Line\":\n            return `//${c.value}\\n`;\n        }\n        return \"\";\n      }).join(\"\"));\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportDeclaration.tap(\"HarmonyExportDependencyParserPlugin\", statement => {});\n    parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, id, name, idx) => {\n      const rename = parser.scope.renames.get(id);\n      let dep;\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      harmonyNamedExports.add(name);\n      if (rename === \"imported var\") {\n        const settings = parser.state.harmonySpecifier.get(id);\n        dep = new HarmonyExportImportedSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, harmonyNamedExports, null, this.strictExportPresence);\n      } else {\n        dep = new HarmonyExportSpecifierDependency(parser.state.module, id, name);\n      }\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source, id, name, idx) => {\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      let harmonyStarExports = null;\n      if (name) {\n        harmonyNamedExports.add(name);\n      } else {\n        harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || [];\n      }\n      const dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope, id, name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), this.strictExportPresence);\n      if (harmonyStarExports) {\n        harmonyStarExports.push(dep);\n      }\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n  }\n};","map":{"version":3,"names":["HarmonyExportExpressionDependency","require","HarmonyImportSideEffectDependency","HarmonyExportHeaderDependency","HarmonyExportSpecifierDependency","HarmonyExportImportedSpecifierDependency","ConstDependency","module","exports","HarmonyExportDependencyParserPlugin","constructor","moduleOptions","strictExportPresence","apply","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","current","addDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","harmonyParserScope","exportExpression","expr","comments","getComments","map","c","type","value","join","exportDeclaration","exportSpecifier","id","name","idx","rename","scope","renames","get","harmonyNamedExports","Set","add","settings","harmonySpecifier","sourceOrder","exportImportSpecifier","harmonyStarExports","slice","push"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportDeclaration.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst rename = parser.scope.renames.get(id);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tif (rename === \"imported var\") {\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(id);\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\tsettings.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || [];\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}