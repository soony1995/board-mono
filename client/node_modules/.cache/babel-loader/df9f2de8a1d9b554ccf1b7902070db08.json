{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DllModule extends Module {\n  constructor(context, dependencies, name, type) {\n    super(\"javascript/dynamic\", context);\n\n    // Info from Factory\n    this.dependencies = dependencies;\n    this.name = name;\n    this.type = type;\n  }\n  identifier() {\n    return `dll ${this.name}`;\n  }\n  readableIdentifier() {\n    return `dll ${this.name}`;\n  }\n  build(options, compilation, resolver, fs, callback) {\n    this.built = true;\n    this.buildMeta = {};\n    this.buildInfo = {};\n    return callback();\n  }\n  source() {\n    return new RawSource(\"module.exports = __webpack_require__;\");\n  }\n  needRebuild() {\n    return false;\n  }\n  size() {\n    return 12;\n  }\n\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @returns {void}\n   */\n  updateHash(hash) {\n    hash.update(\"dll module\");\n    hash.update(this.name || \"\");\n    super.updateHash(hash);\n  }\n}\nmodule.exports = DllModule;","map":{"version":3,"names":["RawSource","require","Module","DllModule","constructor","context","dependencies","name","type","identifier","readableIdentifier","build","options","compilation","resolver","fs","callback","built","buildMeta","buildInfo","source","needRebuild","size","updateHash","hash","update","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/DllModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DllModule extends Module {\n\tconstructor(context, dependencies, name, type) {\n\t\tsuper(\"javascript/dynamic\", context);\n\n\t\t// Info from Factory\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t}\n\n\tidentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\treadableIdentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\treturn callback();\n\t}\n\n\tsource() {\n\t\treturn new RawSource(\"module.exports = __webpack_require__;\");\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\treturn 12;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"dll module\");\n\t\thash.update(this.name || \"\");\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = DllModule;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAElC;;AAEA,MAAME,SAAS,SAASD,MAAM,CAAC;EAC9BE,WAAWA,CAACC,OAAO,EAAEC,YAAY,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC9C,KAAK,CAAC,oBAAoB,EAAEH,OAAO,CAAC;;IAEpC;IACA,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;EAEAC,UAAUA,CAAA,EAAG;IACZ,OAAO,OAAO,IAAI,CAACF,IAAI,EAAE;EAC1B;EAEAG,kBAAkBA,CAAA,EAAG;IACpB,OAAO,OAAO,IAAI,CAACH,IAAI,EAAE;EAC1B;EAEAI,KAAKA,CAACC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,QAAQ,EAAE;IACnD,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,OAAOH,QAAQ,CAAC,CAAC;EAClB;EAEAI,MAAMA,CAAA,EAAG;IACR,OAAO,IAAIpB,SAAS,CAAC,uCAAuC,CAAC;EAC9D;EAEAqB,WAAWA,CAAA,EAAG;IACb,OAAO,KAAK;EACb;EAEAC,IAAIA,CAAA,EAAG;IACN,OAAO,EAAE;EACV;;EAEA;AACD;AACA;AACA;EACCC,UAAUA,CAACC,IAAI,EAAE;IAChBA,IAAI,CAACC,MAAM,CAAC,YAAY,CAAC;IACzBD,IAAI,CAACC,MAAM,CAAC,IAAI,CAAClB,IAAI,IAAI,EAAE,CAAC;IAC5B,KAAK,CAACgB,UAAU,CAACC,IAAI,CAAC;EACvB;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGxB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script"}