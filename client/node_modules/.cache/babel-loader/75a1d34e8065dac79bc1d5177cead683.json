{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\nclass IgnoringWatchFileSystem {\n  constructor(wfs, paths) {\n    this.wfs = wfs;\n    this.paths = paths;\n  }\n  watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n    const ignored = path => this.paths.some(p => p instanceof RegExp ? p.test(path) : path.indexOf(p) === 0);\n    const notIgnored = path => !ignored(path);\n    const ignoredFiles = files.filter(ignored);\n    const ignoredDirs = dirs.filter(ignored);\n    const watcher = this.wfs.watch(files.filter(notIgnored), dirs.filter(notIgnored), missing, startTime, options, (err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps, removedFiles) => {\n      if (err) return callback(err);\n      for (const path of ignoredFiles) {\n        fileTimestamps.set(path, 1);\n      }\n      for (const path of ignoredDirs) {\n        dirTimestamps.set(path, 1);\n      }\n      callback(err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps, removedFiles);\n    }, callbackUndelayed);\n    return {\n      close: () => watcher.close(),\n      pause: () => watcher.pause(),\n      getContextTimestamps: () => {\n        const dirTimestamps = watcher.getContextTimestamps();\n        for (const path of ignoredDirs) {\n          dirTimestamps.set(path, 1);\n        }\n        return dirTimestamps;\n      },\n      getFileTimestamps: () => {\n        const fileTimestamps = watcher.getFileTimestamps();\n        for (const path of ignoredFiles) {\n          fileTimestamps.set(path, 1);\n        }\n        return fileTimestamps;\n      }\n    };\n  }\n}\nclass WatchIgnorePlugin {\n  /**\n   * @param {WatchIgnorePluginOptions} paths list of paths\n   */\n  constructor(paths) {\n    validateOptions(schema, paths, \"Watch Ignore Plugin\");\n    this.paths = paths;\n  }\n  apply(compiler) {\n    compiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", () => {\n      compiler.watchFileSystem = new IgnoringWatchFileSystem(compiler.watchFileSystem, this.paths);\n    });\n  }\n}\nmodule.exports = WatchIgnorePlugin;","map":{"version":3,"names":["validateOptions","require","schema","IgnoringWatchFileSystem","constructor","wfs","paths","watch","files","dirs","missing","startTime","options","callback","callbackUndelayed","ignored","path","some","p","RegExp","test","indexOf","notIgnored","ignoredFiles","filter","ignoredDirs","watcher","err","filesModified","dirsModified","missingModified","fileTimestamps","dirTimestamps","removedFiles","set","close","pause","getContextTimestamps","getFileTimestamps","WatchIgnorePlugin","apply","compiler","hooks","afterEnvironment","tap","watchFileSystem","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/WatchIgnorePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\nclass IgnoringWatchFileSystem {\n\tconstructor(wfs, paths) {\n\t\tthis.wfs = wfs;\n\t\tthis.paths = paths;\n\t}\n\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n\t\tconst ignored = path =>\n\t\t\tthis.paths.some(p =>\n\t\t\t\tp instanceof RegExp ? p.test(path) : path.indexOf(p) === 0\n\t\t\t);\n\n\t\tconst notIgnored = path => !ignored(path);\n\n\t\tconst ignoredFiles = files.filter(ignored);\n\t\tconst ignoredDirs = dirs.filter(ignored);\n\n\t\tconst watcher = this.wfs.watch(\n\t\t\tfiles.filter(notIgnored),\n\t\t\tdirs.filter(notIgnored),\n\t\t\tmissing,\n\t\t\tstartTime,\n\t\t\toptions,\n\t\t\t(\n\t\t\t\terr,\n\t\t\t\tfilesModified,\n\t\t\t\tdirsModified,\n\t\t\t\tmissingModified,\n\t\t\t\tfileTimestamps,\n\t\t\t\tdirTimestamps,\n\t\t\t\tremovedFiles\n\t\t\t) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tcallback(\n\t\t\t\t\terr,\n\t\t\t\t\tfilesModified,\n\t\t\t\t\tdirsModified,\n\t\t\t\t\tmissingModified,\n\t\t\t\t\tfileTimestamps,\n\t\t\t\t\tdirTimestamps,\n\t\t\t\t\tremovedFiles\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallbackUndelayed\n\t\t);\n\n\t\treturn {\n\t\t\tclose: () => watcher.close(),\n\t\t\tpause: () => watcher.pause(),\n\t\t\tgetContextTimestamps: () => {\n\t\t\t\tconst dirTimestamps = watcher.getContextTimestamps();\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn dirTimestamps;\n\t\t\t},\n\t\t\tgetFileTimestamps: () => {\n\t\t\t\tconst fileTimestamps = watcher.getFileTimestamps();\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn fileTimestamps;\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass WatchIgnorePlugin {\n\t/**\n\t * @param {WatchIgnorePluginOptions} paths list of paths\n\t */\n\tconstructor(paths) {\n\t\tvalidateOptions(schema, paths, \"Watch Ignore Plugin\");\n\t\tthis.paths = paths;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", () => {\n\t\t\tcompiler.watchFileSystem = new IgnoringWatchFileSystem(\n\t\t\t\tcompiler.watchFileSystem,\n\t\t\t\tthis.paths\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = WatchIgnorePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}