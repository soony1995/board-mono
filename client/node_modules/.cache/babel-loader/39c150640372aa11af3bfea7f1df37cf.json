{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MappingsContext {\n  constructor() {\n    this.sourcesIndices = new Map();\n    this.sourcesContent = new Map();\n    this.hasSourceContent = false;\n    this.currentOriginalLine = 1;\n    this.currentSource = 0;\n    this.unfinishedGeneratedLine = false;\n  }\n  ensureSource(source, originalSource) {\n    let idx = this.sourcesIndices.get(source);\n    if (typeof idx === \"number\") {\n      return idx;\n    }\n    idx = this.sourcesIndices.size;\n    this.sourcesIndices.set(source, idx);\n    this.sourcesContent.set(source, originalSource);\n    if (typeof originalSource === \"string\") this.hasSourceContent = true;\n    return idx;\n  }\n  getArrays() {\n    const sources = [];\n    const sourcesContent = [];\n    for (const pair of this.sourcesContent) {\n      sources.push(pair[0]);\n      sourcesContent.push(pair[1]);\n    }\n    return {\n      sources,\n      sourcesContent\n    };\n  }\n}\nmodule.exports = MappingsContext;","map":{"version":3,"names":["MappingsContext","constructor","sourcesIndices","Map","sourcesContent","hasSourceContent","currentOriginalLine","currentSource","unfinishedGeneratedLine","ensureSource","source","originalSource","idx","get","size","set","getArrays","sources","pair","push","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/source-list-map/lib/MappingsContext.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MappingsContext {\n\tconstructor() {\n\t\tthis.sourcesIndices = new Map();\n\t\tthis.sourcesContent = new Map();\n\t\tthis.hasSourceContent = false;\n\t\tthis.currentOriginalLine = 1;\n\t\tthis.currentSource = 0;\n\t\tthis.unfinishedGeneratedLine = false;\n\t}\n\n\tensureSource(source, originalSource) {\n\t\tlet idx = this.sourcesIndices.get(source);\n\t\tif(typeof idx === \"number\") {\n\t\t\treturn idx;\n\t\t}\n\t\tidx = this.sourcesIndices.size;\n\t\tthis.sourcesIndices.set(source, idx);\n\t\tthis.sourcesContent.set(source, originalSource)\n\t\tif(typeof originalSource === \"string\")\n\t\t\tthis.hasSourceContent = true;\n\t\treturn idx;\n\t}\n\n\tgetArrays() {\n\t\tconst sources = [];\n\t\tconst sourcesContent = [];\n\n\t\tfor(const pair of this.sourcesContent) {\n\t\t\tsources.push(pair[0]);\n\t\t\tsourcesContent.push(pair[1]);\n\t\t}\n\n\t\treturn {\n\t\t\tsources,\n\t\t\tsourcesContent\n\t\t};\n\t}\n}\nmodule.exports = MappingsContext;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,eAAe,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACC,cAAc,GAAG,IAAID,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACE,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACC,mBAAmB,GAAG,CAAC;IAC5B,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,uBAAuB,GAAG,KAAK;EACrC;EAEAC,YAAYA,CAACC,MAAM,EAAEC,cAAc,EAAE;IACpC,IAAIC,GAAG,GAAG,IAAI,CAACV,cAAc,CAACW,GAAG,CAACH,MAAM,CAAC;IACzC,IAAG,OAAOE,GAAG,KAAK,QAAQ,EAAE;MAC3B,OAAOA,GAAG;IACX;IACAA,GAAG,GAAG,IAAI,CAACV,cAAc,CAACY,IAAI;IAC9B,IAAI,CAACZ,cAAc,CAACa,GAAG,CAACL,MAAM,EAAEE,GAAG,CAAC;IACpC,IAAI,CAACR,cAAc,CAACW,GAAG,CAACL,MAAM,EAAEC,cAAc,CAAC;IAC/C,IAAG,OAAOA,cAAc,KAAK,QAAQ,EACpC,IAAI,CAACN,gBAAgB,GAAG,IAAI;IAC7B,OAAOO,GAAG;EACX;EAEAI,SAASA,CAAA,EAAG;IACX,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMb,cAAc,GAAG,EAAE;IAEzB,KAAI,MAAMc,IAAI,IAAI,IAAI,CAACd,cAAc,EAAE;MACtCa,OAAO,CAACE,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;MACrBd,cAAc,CAACe,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B;IAEA,OAAO;MACND,OAAO;MACPb;IACD,CAAC;EACF;AACD;AACAgB,MAAM,CAACC,OAAO,GAAGrB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script"}