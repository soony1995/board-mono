{"ast":null,"code":"var _jsxFileName = \"/home/soon/bulletin-board/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport { posts as initialPosts } from './data';\nimport PostList from './PostList';\nimport PostDetail from './PostDetail';\nimport NewPost from './NewPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState(initialPosts);\n  const addPost = ({\n    title,\n    content\n  }) => {\n    const newPost = {\n      id: posts.length + 1,\n      title,\n      content\n    };\n    setPosts([...posts, newPost]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new\",\n        children: \"\\uC0C8 \\uAC8C\\uC2DC\\uBB3C \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PostList, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post/:id\",\n        element: /*#__PURE__*/_jsxDEV(PostDetail, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(NewPost, {\n          addPost: addPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6LYIuqiz1ip69S1k3Q18hpVCanQ=\");\n_c = App;\nexport default App;\n\n/** \n * 리액트에서 <a>태그 대신 <Link> 컴포넌트를 사용해야 하는 이유\n<a> 태그는 새로운 페이지 전환이 일어날 때마다 전체 페이지를 다시 렌더링하게 되어 초기 상태부터 다시 로드되며, \n그로인해 기존의 state(유저가 작성한 데이터, 또는 스크롤 위치 등)이 초기화 되는 문제가 발생한다.\n반면에 Link 컴포넌트는 페이지 전환을 부드럽게 처리하기 위해 내부적으로 History API를 사용하기 때문에, \n페이지 간 전환 시에 새로고침 없이 필요한 컴포넌트만 렌더링 되어 효율적으로 작동한다.\n */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Link","posts","initialPosts","PostList","PostDetail","NewPost","jsxDEV","_jsxDEV","App","_s","setPosts","addPost","title","content","newPost","id","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","path","element","_c","$RefreshReg$"],"sources":["/home/soon/bulletin-board/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport { posts as initialPosts } from './data';\nimport PostList from './PostList';\nimport PostDetail from './PostDetail';\nimport NewPost from './NewPost';\n\nfunction App() {\n  const [posts, setPosts] = useState(initialPosts);\n\n  const addPost = ({ title, content }) => {\n    const newPost = {\n      id: posts.length + 1,\n      title,\n      content,\n    };\n    setPosts([...posts, newPost]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>게시판</h1>\n      <nav>\n        <Link to=\"/\">목록</Link>\n        <Link to=\"/new\">새 게시물 작성</Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<PostList posts={posts} />} />\n        <Route path=\"/post/:id\" element={<PostDetail posts={posts} />} />\n        <Route path=\"/new\" element={<NewPost addPost={addPost} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n/** \n * 리액트에서 <a>태그 대신 <Link> 컴포넌트를 사용해야 하는 이유\n<a> 태그는 새로운 페이지 전환이 일어날 때마다 전체 페이지를 다시 렌더링하게 되어 초기 상태부터 다시 로드되며, \n그로인해 기존의 state(유저가 작성한 데이터, 또는 스크롤 위치 등)이 초기화 되는 문제가 발생한다.\n반면에 Link 컴포넌트는 페이지 전환을 부드럽게 처리하기 위해 내부적으로 History API를 사용하기 때문에, \n페이지 간 전환 시에 새로고침 없이 필요한 컴포넌트만 렌더링 되어 효율적으로 작동한다.\n */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}