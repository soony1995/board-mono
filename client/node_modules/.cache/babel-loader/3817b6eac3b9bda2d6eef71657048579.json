{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst {\n  Tapable,\n  HookMap,\n  SyncHook,\n  SyncWaterfallHook\n} = require(\"tapable\");\nconst Factory = require(\"enhanced-resolve\").ResolverFactory;\nconst {\n  cachedCleverMerge\n} = require(\"./util/cleverMerge\");\n\n/** @typedef {import(\"enhanced-resolve\").Resolver} Resolver */\n\nconst EMTPY_RESOLVE_OPTIONS = {};\nmodule.exports = class ResolverFactory extends Tapable {\n  constructor() {\n    super();\n    this.hooks = {\n      resolveOptions: new HookMap(() => new SyncWaterfallHook([\"resolveOptions\"])),\n      resolver: new HookMap(() => new SyncHook([\"resolver\", \"resolveOptions\"]))\n    };\n    this._pluginCompat.tap(\"ResolverFactory\", options => {\n      let match;\n      match = /^resolve-options (.+)$/.exec(options.name);\n      if (match) {\n        this.hooks.resolveOptions.for(match[1]).tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n        return true;\n      }\n      match = /^resolver (.+)$/.exec(options.name);\n      if (match) {\n        this.hooks.resolver.for(match[1]).tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n        return true;\n      }\n    });\n    this.cache2 = new Map();\n  }\n  get(type, resolveOptions) {\n    resolveOptions = resolveOptions || EMTPY_RESOLVE_OPTIONS;\n    const ident = `${type}|${JSON.stringify(resolveOptions)}`;\n    const resolver = this.cache2.get(ident);\n    if (resolver) return resolver;\n    const newResolver = this._create(type, resolveOptions);\n    this.cache2.set(ident, newResolver);\n    return newResolver;\n  }\n  _create(type, resolveOptions) {\n    const originalResolveOptions = Object.assign({}, resolveOptions);\n    resolveOptions = this.hooks.resolveOptions.for(type).call(resolveOptions);\n    const resolver = Factory.createResolver(resolveOptions);\n    if (!resolver) {\n      throw new Error(\"No resolver created\");\n    }\n    /** @type {Map<Object, Resolver>} */\n    const childCache = new Map();\n    resolver.withOptions = options => {\n      const cacheEntry = childCache.get(options);\n      if (cacheEntry !== undefined) return cacheEntry;\n      const mergedOptions = cachedCleverMerge(originalResolveOptions, options);\n      const resolver = this.get(type, mergedOptions);\n      childCache.set(options, resolver);\n      return resolver;\n    };\n    this.hooks.resolver.for(type).call(resolver, resolveOptions);\n    return resolver;\n  }\n};","map":{"version":3,"names":["Tapable","HookMap","SyncHook","SyncWaterfallHook","require","Factory","ResolverFactory","cachedCleverMerge","EMTPY_RESOLVE_OPTIONS","module","exports","constructor","hooks","resolveOptions","resolver","_pluginCompat","tap","options","match","exec","name","for","fn","cache2","Map","get","type","ident","JSON","stringify","newResolver","_create","set","originalResolveOptions","Object","assign","call","createResolver","Error","childCache","withOptions","cacheEntry","undefined","mergedOptions"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/ResolverFactory.js"],"sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst { Tapable, HookMap, SyncHook, SyncWaterfallHook } = require(\"tapable\");\nconst Factory = require(\"enhanced-resolve\").ResolverFactory;\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\n\n/** @typedef {import(\"enhanced-resolve\").Resolver} Resolver */\n\nconst EMTPY_RESOLVE_OPTIONS = {};\n\nmodule.exports = class ResolverFactory extends Tapable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tresolveOptions: new HookMap(\n\t\t\t\t() => new SyncWaterfallHook([\"resolveOptions\"])\n\t\t\t),\n\t\t\tresolver: new HookMap(() => new SyncHook([\"resolver\", \"resolveOptions\"]))\n\t\t};\n\t\tthis._pluginCompat.tap(\"ResolverFactory\", options => {\n\t\t\tlet match;\n\t\t\tmatch = /^resolve-options (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.resolveOptions\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmatch = /^resolver (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.resolver\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tthis.cache2 = new Map();\n\t}\n\n\tget(type, resolveOptions) {\n\t\tresolveOptions = resolveOptions || EMTPY_RESOLVE_OPTIONS;\n\t\tconst ident = `${type}|${JSON.stringify(resolveOptions)}`;\n\t\tconst resolver = this.cache2.get(ident);\n\t\tif (resolver) return resolver;\n\t\tconst newResolver = this._create(type, resolveOptions);\n\t\tthis.cache2.set(ident, newResolver);\n\t\treturn newResolver;\n\t}\n\n\t_create(type, resolveOptions) {\n\t\tconst originalResolveOptions = Object.assign({}, resolveOptions);\n\t\tresolveOptions = this.hooks.resolveOptions.for(type).call(resolveOptions);\n\t\tconst resolver = Factory.createResolver(resolveOptions);\n\t\tif (!resolver) {\n\t\t\tthrow new Error(\"No resolver created\");\n\t\t}\n\t\t/** @type {Map<Object, Resolver>} */\n\t\tconst childCache = new Map();\n\t\tresolver.withOptions = options => {\n\t\t\tconst cacheEntry = childCache.get(options);\n\t\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\t\tconst mergedOptions = cachedCleverMerge(originalResolveOptions, options);\n\t\t\tconst resolver = this.get(type, mergedOptions);\n\t\t\tchildCache.set(options, resolver);\n\t\t\treturn resolver;\n\t\t};\n\t\tthis.hooks.resolver.for(type).call(resolver, resolveOptions);\n\t\treturn resolver;\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}