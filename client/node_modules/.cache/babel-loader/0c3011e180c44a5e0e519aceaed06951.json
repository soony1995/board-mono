{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderChunkIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderChunkIdsPlugin\").OccurrenceOrderChunkIdsPluginOptions} OccurrenceOrderChunkIdsPluginOptions */\n\nclass OccurrenceOrderChunkIdsPlugin {\n  /**\n   * @param {OccurrenceOrderChunkIdsPluginOptions=} options options object\n   */\n  constructor(options = {}) {\n    validateOptions(schema, options, \"Occurrence Order Chunk Ids Plugin\");\n    this.options = options;\n  }\n  apply(compiler) {\n    const prioritiseInitial = this.options.prioritiseInitial;\n    compiler.hooks.compilation.tap(\"OccurrenceOrderChunkIdsPlugin\", compilation => {\n      compilation.hooks.optimizeChunkOrder.tap(\"OccurrenceOrderChunkIdsPlugin\", chunks => {\n        const occursInInitialChunksMap = new Map();\n        const originalOrder = new Map();\n        let i = 0;\n        for (const c of chunks) {\n          let occurs = 0;\n          for (const chunkGroup of c.groupsIterable) {\n            for (const parent of chunkGroup.parentsIterable) {\n              if (parent.isInitial()) occurs++;\n            }\n          }\n          occursInInitialChunksMap.set(c, occurs);\n          originalOrder.set(c, i++);\n        }\n        chunks.sort((a, b) => {\n          if (prioritiseInitial) {\n            const aEntryOccurs = occursInInitialChunksMap.get(a);\n            const bEntryOccurs = occursInInitialChunksMap.get(b);\n            if (aEntryOccurs > bEntryOccurs) return -1;\n            if (aEntryOccurs < bEntryOccurs) return 1;\n          }\n          const aOccurs = a.getNumberOfGroups();\n          const bOccurs = b.getNumberOfGroups();\n          if (aOccurs > bOccurs) return -1;\n          if (aOccurs < bOccurs) return 1;\n          const orgA = originalOrder.get(a);\n          const orgB = originalOrder.get(b);\n          return orgA - orgB;\n        });\n      });\n    });\n  }\n}\nmodule.exports = OccurrenceOrderChunkIdsPlugin;","map":{"version":3,"names":["validateOptions","require","schema","OccurrenceOrderChunkIdsPlugin","constructor","options","apply","compiler","prioritiseInitial","hooks","compilation","tap","optimizeChunkOrder","chunks","occursInInitialChunksMap","Map","originalOrder","i","c","occurs","chunkGroup","groupsIterable","parent","parentsIterable","isInitial","set","sort","a","b","aEntryOccurs","get","bEntryOccurs","aOccurs","getNumberOfGroups","bOccurs","orgA","orgB","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/optimize/OccurrenceChunkOrderPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderChunkIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderChunkIdsPlugin\").OccurrenceOrderChunkIdsPluginOptions} OccurrenceOrderChunkIdsPluginOptions */\n\nclass OccurrenceOrderChunkIdsPlugin {\n\t/**\n\t * @param {OccurrenceOrderChunkIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidateOptions(schema, options, \"Occurrence Order Chunk Ids Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\t\tconst originalOrder = new Map();\n\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t\t\t\toriginalOrder.set(c, i++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchunks.sort((a, b) => {\n\t\t\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = OccurrenceOrderChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC/C,MAAMC,MAAM,GAAGD,OAAO,CAAC,mEAAmE,CAAC;;AAE3F;;AAEA,MAAME,6BAA6B,CAAC;EACnC;AACD;AACA;EACCC,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IACzBL,eAAe,CAACE,MAAM,EAAEG,OAAO,EAAE,mCAAmC,CAAC;IACrE,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMC,iBAAiB,GAAG,IAAI,CAACH,OAAO,CAACG,iBAAiB;IACxDD,QAAQ,CAACE,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,+BAA+B,EAC/BD,WAAW,IAAI;MACdA,WAAW,CAACD,KAAK,CAACG,kBAAkB,CAACD,GAAG,CACvC,+BAA+B,EAC/BE,MAAM,IAAI;QACT,MAAMC,wBAAwB,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC1C,MAAMC,aAAa,GAAG,IAAID,GAAG,CAAC,CAAC;QAE/B,IAAIE,CAAC,GAAG,CAAC;QACT,KAAK,MAAMC,CAAC,IAAIL,MAAM,EAAE;UACvB,IAAIM,MAAM,GAAG,CAAC;UACd,KAAK,MAAMC,UAAU,IAAIF,CAAC,CAACG,cAAc,EAAE;YAC1C,KAAK,MAAMC,MAAM,IAAIF,UAAU,CAACG,eAAe,EAAE;cAChD,IAAID,MAAM,CAACE,SAAS,CAAC,CAAC,EAAEL,MAAM,EAAE;YACjC;UACD;UACAL,wBAAwB,CAACW,GAAG,CAACP,CAAC,EAAEC,MAAM,CAAC;UACvCH,aAAa,CAACS,GAAG,CAACP,CAAC,EAAED,CAAC,EAAE,CAAC;QAC1B;QAEAJ,MAAM,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACrB,IAAIpB,iBAAiB,EAAE;YACtB,MAAMqB,YAAY,GAAGf,wBAAwB,CAACgB,GAAG,CAACH,CAAC,CAAC;YACpD,MAAMI,YAAY,GAAGjB,wBAAwB,CAACgB,GAAG,CAACF,CAAC,CAAC;YACpD,IAAIC,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC,CAAC;YAC1C,IAAIF,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC;UAC1C;UACA,MAAMC,OAAO,GAAGL,CAAC,CAACM,iBAAiB,CAAC,CAAC;UACrC,MAAMC,OAAO,GAAGN,CAAC,CAACK,iBAAiB,CAAC,CAAC;UACrC,IAAID,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC,CAAC;UAChC,IAAIF,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC;UAC/B,MAAMC,IAAI,GAAGnB,aAAa,CAACc,GAAG,CAACH,CAAC,CAAC;UACjC,MAAMS,IAAI,GAAGpB,aAAa,CAACc,GAAG,CAACF,CAAC,CAAC;UACjC,OAAOO,IAAI,GAAGC,IAAI;QACnB,CAAC,CAAC;MACH,CACD,CAAC;IACF,CACD,CAAC;EACF;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGnC,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"script"}