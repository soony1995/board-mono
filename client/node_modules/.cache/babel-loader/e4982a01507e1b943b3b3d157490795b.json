{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass AggressiveMergingPlugin {\n  constructor(options) {\n    if (options !== undefined && typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\");\n    }\n    this.options = options || {};\n  }\n  apply(compiler) {\n    const options = this.options;\n    const minSizeReduce = options.minSizeReduce || 1.5;\n    compiler.hooks.thisCompilation.tap(\"AggressiveMergingPlugin\", compilation => {\n      compilation.hooks.optimizeChunksAdvanced.tap(\"AggressiveMergingPlugin\", chunks => {\n        let combinations = [];\n        chunks.forEach((a, idx) => {\n          if (a.canBeInitial()) return;\n          for (let i = 0; i < idx; i++) {\n            const b = chunks[i];\n            if (b.canBeInitial()) continue;\n            combinations.push({\n              a,\n              b,\n              improvement: undefined\n            });\n          }\n        });\n        for (const pair of combinations) {\n          const a = pair.b.size({\n            chunkOverhead: 0\n          });\n          const b = pair.a.size({\n            chunkOverhead: 0\n          });\n          const ab = pair.b.integratedSize(pair.a, {\n            chunkOverhead: 0\n          });\n          let newSize;\n          if (ab === false) {\n            pair.improvement = false;\n            return;\n          } else {\n            newSize = ab;\n          }\n          pair.improvement = (a + b) / newSize;\n        }\n        combinations = combinations.filter(pair => {\n          return pair.improvement !== false;\n        });\n        combinations.sort((a, b) => {\n          return b.improvement - a.improvement;\n        });\n        const pair = combinations[0];\n        if (!pair) return;\n        if (pair.improvement < minSizeReduce) return;\n        if (pair.b.integrate(pair.a, \"aggressive-merge\")) {\n          chunks.splice(chunks.indexOf(pair.a), 1);\n          return true;\n        }\n      });\n    });\n  }\n}\nmodule.exports = AggressiveMergingPlugin;","map":{"version":3,"names":["AggressiveMergingPlugin","constructor","options","undefined","Array","isArray","Error","apply","compiler","minSizeReduce","hooks","thisCompilation","tap","compilation","optimizeChunksAdvanced","chunks","combinations","forEach","a","idx","canBeInitial","i","b","push","improvement","pair","size","chunkOverhead","ab","integratedSize","newSize","filter","sort","integrate","splice","indexOf","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/optimize/AggressiveMergingPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass AggressiveMergingPlugin {\n\tconstructor(options) {\n\t\tif (\n\t\t\t(options !== undefined && typeof options !== \"object\") ||\n\t\t\tArray.isArray(options)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\"\n\t\t\t);\n\t\t}\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minSizeReduce = options.minSizeReduce || 1.5;\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"AggressiveMergingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\t\"AggressiveMergingPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tlet combinations = [];\n\t\t\t\t\t\tchunks.forEach((a, idx) => {\n\t\t\t\t\t\t\tif (a.canBeInitial()) return;\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = chunks[i];\n\t\t\t\t\t\t\t\tif (b.canBeInitial()) continue;\n\t\t\t\t\t\t\t\tcombinations.push({\n\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\timprovement: undefined\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const pair of combinations) {\n\t\t\t\t\t\t\tconst a = pair.b.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst b = pair.a.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst ab = pair.b.integratedSize(pair.a, {\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet newSize;\n\t\t\t\t\t\t\tif (ab === false) {\n\t\t\t\t\t\t\t\tpair.improvement = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewSize = ab;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpair.improvement = (a + b) / newSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcombinations = combinations.filter(pair => {\n\t\t\t\t\t\t\treturn pair.improvement !== false;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcombinations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.improvement - a.improvement;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst pair = combinations[0];\n\n\t\t\t\t\t\tif (!pair) return;\n\t\t\t\t\t\tif (pair.improvement < minSizeReduce) return;\n\n\t\t\t\t\t\tif (pair.b.integrate(pair.a, \"aggressive-merge\")) {\n\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(pair.a), 1);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AggressiveMergingPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}