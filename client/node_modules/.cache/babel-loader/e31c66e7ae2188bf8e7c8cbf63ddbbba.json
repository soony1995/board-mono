{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\nmodule.exports = class ConcordModulesPlugin {\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ConcordModulesPlugin\", (request, resolveContext, callback) => {\n      const innerRequest = getInnerRequest(resolver, request);\n      if (!innerRequest) return callback();\n      const concordField = DescriptionFileUtils.getField(request.descriptionFileData, \"concord\");\n      if (!concordField) return callback();\n      const data = concord.matchModule(request.context, concordField, innerRequest);\n      if (data === innerRequest) return callback();\n      if (data === undefined) return callback();\n      if (data === false) {\n        const ignoreObj = Object.assign({}, request, {\n          path: false\n        });\n        return callback(null, ignoreObj);\n      }\n      const obj = Object.assign({}, request, {\n        path: request.descriptionFileRoot,\n        request: data\n      });\n      resolver.doResolve(target, obj, \"aliased from description file \" + request.descriptionFilePath + \" with mapping '\" + innerRequest + \"' to '\" + data + \"'\", resolveContext, (err, result) => {\n        if (err) return callback(err);\n\n        // Don't allow other aliasing or raw request\n        if (result === undefined) return callback(null, null);\n        callback(null, result);\n      });\n    });\n  }\n};","map":{"version":3,"names":["concord","require","DescriptionFileUtils","getInnerRequest","module","exports","ConcordModulesPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","innerRequest","concordField","getField","descriptionFileData","data","matchModule","context","undefined","ignoreObj","Object","assign","path","obj","descriptionFileRoot","doResolve","descriptionFilePath","err","result"],"sources":["/home/soon/bulletin-board/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\nmodule.exports = class ConcordModulesPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ConcordModulesPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst concordField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\"concord\"\n\t\t\t\t);\n\t\t\t\tif (!concordField) return callback();\n\t\t\t\tconst data = concord.matchModule(\n\t\t\t\t\trequest.context,\n\t\t\t\t\tconcordField,\n\t\t\t\t\tinnerRequest\n\t\t\t\t);\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\tconst ignoreObj = Object.assign({}, request, {\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t});\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAME,eAAe,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAEpDG,MAAM,CAACC,OAAO,GAAG,MAAMC,oBAAoB,CAAC;EAC3CC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CAAC,sBAAsB,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACxE,MAAMC,YAAY,GAAGhB,eAAe,CAACS,QAAQ,EAAEI,OAAO,CAAC;MACvD,IAAI,CAACG,YAAY,EAAE,OAAOD,QAAQ,CAAC,CAAC;MACpC,MAAME,YAAY,GAAGlB,oBAAoB,CAACmB,QAAQ,CACjDL,OAAO,CAACM,mBAAmB,EAC3B,SACD,CAAC;MACD,IAAI,CAACF,YAAY,EAAE,OAAOF,QAAQ,CAAC,CAAC;MACpC,MAAMK,IAAI,GAAGvB,OAAO,CAACwB,WAAW,CAC/BR,OAAO,CAACS,OAAO,EACfL,YAAY,EACZD,YACD,CAAC;MACD,IAAII,IAAI,KAAKJ,YAAY,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC5C,IAAIK,IAAI,KAAKG,SAAS,EAAE,OAAOR,QAAQ,CAAC,CAAC;MACzC,IAAIK,IAAI,KAAK,KAAK,EAAE;QACnB,MAAMI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEb,OAAO,EAAE;UAC5Cc,IAAI,EAAE;QACP,CAAC,CAAC;QACF,OAAOZ,QAAQ,CAAC,IAAI,EAAES,SAAS,CAAC;MACjC;MACA,MAAMI,GAAG,GAAGH,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEb,OAAO,EAAE;QACtCc,IAAI,EAAEd,OAAO,CAACgB,mBAAmB;QACjChB,OAAO,EAAEO;MACV,CAAC,CAAC;MACFX,QAAQ,CAACqB,SAAS,CACjBvB,MAAM,EACNqB,GAAG,EACH,gCAAgC,GAC/Bf,OAAO,CAACkB,mBAAmB,GAC3B,iBAAiB,GACjBf,YAAY,GACZ,QAAQ,GACRI,IAAI,GACJ,GAAG,EACJN,cAAc,EACd,CAACkB,GAAG,EAAEC,MAAM,KAAK;QAChB,IAAID,GAAG,EAAE,OAAOjB,QAAQ,CAACiB,GAAG,CAAC;;QAE7B;QACA,IAAIC,MAAM,KAAKV,SAAS,EAAE,OAAOR,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;QACrDA,QAAQ,CAAC,IAAI,EAAEkB,MAAM,CAAC;MACvB,CACD,CAAC;IACF,CAAC,CAAC;EACJ;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}