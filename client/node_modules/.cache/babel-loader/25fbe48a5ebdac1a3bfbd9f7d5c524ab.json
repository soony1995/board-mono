{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst forEachBail = require(\"./forEachBail\");\nmodule.exports = class ConcordExtensionsPlugin {\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ConcordExtensionsPlugin\", (request, resolveContext, callback) => {\n      const concordField = DescriptionFileUtils.getField(request.descriptionFileData, \"concord\");\n      if (!concordField) return callback();\n      const extensions = concord.getExtensions(request.context, concordField);\n      if (!extensions) return callback();\n      forEachBail(extensions, (appending, callback) => {\n        const obj = Object.assign({}, request, {\n          path: request.path + appending,\n          relativePath: request.relativePath && request.relativePath + appending\n        });\n        resolver.doResolve(target, obj, \"concord extension: \" + appending, resolveContext, callback);\n      }, (err, result) => {\n        if (err) return callback(err);\n\n        // Don't allow other processing\n        if (result === undefined) return callback(null, null);\n        callback(null, result);\n      });\n    });\n  }\n};","map":{"version":3,"names":["concord","require","DescriptionFileUtils","forEachBail","module","exports","ConcordExtensionsPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","concordField","getField","descriptionFileData","extensions","getExtensions","context","appending","obj","Object","assign","path","relativePath","doResolve","err","result","undefined"],"sources":["/home/soon/bulletin-board/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst forEachBail = require(\"./forEachBail\");\n\nmodule.exports = class ConcordExtensionsPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"ConcordExtensionsPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst concordField = DescriptionFileUtils.getField(\n\t\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\t\"concord\"\n\t\t\t\t\t);\n\t\t\t\t\tif (!concordField) return callback();\n\t\t\t\t\tconst extensions = concord.getExtensions(\n\t\t\t\t\t\trequest.context,\n\t\t\t\t\t\tconcordField\n\t\t\t\t\t);\n\t\t\t\t\tif (!extensions) return callback();\n\t\t\t\t\tforEachBail(\n\t\t\t\t\t\textensions,\n\t\t\t\t\t\t(appending, callback) => {\n\t\t\t\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\t\t\t\tpath: request.path + appending,\n\t\t\t\t\t\t\t\trelativePath:\n\t\t\t\t\t\t\t\t\trequest.relativePath && request.relativePath + appending\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"concord extension: \" + appending,\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC9D,MAAME,WAAW,GAAGF,OAAO,CAAC,eAAe,CAAC;AAE5CG,MAAM,CAACC,OAAO,GAAG,MAAMC,uBAAuB,CAAC;EAC9CC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CACR,yBAAyB,EACzB,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACtC,MAAMC,YAAY,GAAGjB,oBAAoB,CAACkB,QAAQ,CACjDJ,OAAO,CAACK,mBAAmB,EAC3B,SACD,CAAC;MACD,IAAI,CAACF,YAAY,EAAE,OAAOD,QAAQ,CAAC,CAAC;MACpC,MAAMI,UAAU,GAAGtB,OAAO,CAACuB,aAAa,CACvCP,OAAO,CAACQ,OAAO,EACfL,YACD,CAAC;MACD,IAAI,CAACG,UAAU,EAAE,OAAOJ,QAAQ,CAAC,CAAC;MAClCf,WAAW,CACVmB,UAAU,EACV,CAACG,SAAS,EAAEP,QAAQ,KAAK;QACxB,MAAMQ,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,OAAO,EAAE;UACtCa,IAAI,EAAEb,OAAO,CAACa,IAAI,GAAGJ,SAAS;UAC9BK,YAAY,EACXd,OAAO,CAACc,YAAY,IAAId,OAAO,CAACc,YAAY,GAAGL;QACjD,CAAC,CAAC;QACFb,QAAQ,CAACmB,SAAS,CACjBrB,MAAM,EACNgB,GAAG,EACH,qBAAqB,GAAGD,SAAS,EACjCR,cAAc,EACdC,QACD,CAAC;MACF,CAAC,EACD,CAACc,GAAG,EAAEC,MAAM,KAAK;QAChB,IAAID,GAAG,EAAE,OAAOd,QAAQ,CAACc,GAAG,CAAC;;QAE7B;QACA,IAAIC,MAAM,KAAKC,SAAS,EAAE,OAAOhB,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;QACrDA,QAAQ,CAAC,IAAI,EAAEe,MAAM,CAAC;MACvB,CACD,CAAC;IACF,CACD,CAAC;EACH;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}