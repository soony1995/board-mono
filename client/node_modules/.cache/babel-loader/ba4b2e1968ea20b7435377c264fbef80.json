{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst sortByIndex = (a, b) => {\n  return a.index - b.index;\n};\nconst sortByIndex2 = (a, b) => {\n  return a.index2 - b.index2;\n};\nclass ChunkModuleIdRangePlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n      compilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n        const chunk = compilation.chunks.find(chunk => chunk.name === options.name);\n        if (!chunk) {\n          throw new Error(`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`);\n        }\n        let chunkModules;\n        if (options.order) {\n          chunkModules = Array.from(chunk.modulesIterable);\n          switch (options.order) {\n            case \"index\":\n              chunkModules.sort(sortByIndex);\n              break;\n            case \"index2\":\n              chunkModules.sort(sortByIndex2);\n              break;\n            default:\n              throw new Error(\"ChunkModuleIdRangePlugin: unexpected value of order\");\n          }\n        } else {\n          chunkModules = modules.filter(m => {\n            return m.chunksIterable.has(chunk);\n          });\n        }\n        let currentId = options.start || 0;\n        for (let i = 0; i < chunkModules.length; i++) {\n          const m = chunkModules[i];\n          if (m.id === null) {\n            m.id = currentId++;\n          }\n          if (options.end && currentId > options.end) break;\n        }\n      });\n    });\n  }\n}\nmodule.exports = ChunkModuleIdRangePlugin;","map":{"version":3,"names":["sortByIndex","a","b","index","sortByIndex2","index2","ChunkModuleIdRangePlugin","constructor","options","apply","compiler","hooks","compilation","tap","moduleIds","modules","chunk","chunks","find","name","Error","chunkModules","order","Array","from","modulesIterable","sort","filter","m","chunksIterable","has","currentId","start","i","length","id","end","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/optimize/ChunkModuleIdRangePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst sortByIndex = (a, b) => {\n\treturn a.index - b.index;\n};\n\nconst sortByIndex2 = (a, b) => {\n\treturn a.index2 - b.index2;\n};\n\nclass ChunkModuleIdRangePlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n\t\t\tcompilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n\t\t\t\tconst chunk = compilation.chunks.find(\n\t\t\t\t\tchunk => chunk.name === options.name\n\t\t\t\t);\n\t\t\t\tif (!chunk) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet chunkModules;\n\t\t\t\tif (options.order) {\n\t\t\t\t\tchunkModules = Array.from(chunk.modulesIterable);\n\t\t\t\t\tswitch (options.order) {\n\t\t\t\t\t\tcase \"index\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"index2\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"ChunkModuleIdRangePlugin: unexpected value of order\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunkModules = modules.filter(m => {\n\t\t\t\t\t\treturn m.chunksIterable.has(chunk);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet currentId = options.start || 0;\n\t\t\t\tfor (let i = 0; i < chunkModules.length; i++) {\n\t\t\t\t\tconst m = chunkModules[i];\n\t\t\t\t\tif (m.id === null) {\n\t\t\t\t\t\tm.id = currentId++;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.end && currentId > options.end) break;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = ChunkModuleIdRangePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,OAAOD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;AACzB,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACH,CAAC,EAAEC,CAAC,KAAK;EAC9B,OAAOD,CAAC,CAACI,MAAM,GAAGH,CAAC,CAACG,MAAM;AAC3B,CAAC;AAED,MAAMC,wBAAwB,CAAC;EAC9BC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5BE,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,0BAA0B,EAAED,WAAW,IAAI;MACzEA,WAAW,CAACD,KAAK,CAACG,SAAS,CAACD,GAAG,CAAC,0BAA0B,EAAEE,OAAO,IAAI;QACtE,MAAMC,KAAK,GAAGJ,WAAW,CAACK,MAAM,CAACC,IAAI,CACpCF,KAAK,IAAIA,KAAK,CAACG,IAAI,KAAKX,OAAO,CAACW,IACjC,CAAC;QACD,IAAI,CAACH,KAAK,EAAE;UACX,MAAM,IAAII,KAAK,CACd,8CAA8CZ,OAAO,CAACW,IAAI,kBAC3D,CAAC;QACF;QAEA,IAAIE,YAAY;QAChB,IAAIb,OAAO,CAACc,KAAK,EAAE;UAClBD,YAAY,GAAGE,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,eAAe,CAAC;UAChD,QAAQjB,OAAO,CAACc,KAAK;YACpB,KAAK,OAAO;cACXD,YAAY,CAACK,IAAI,CAAC1B,WAAW,CAAC;cAC9B;YACD,KAAK,QAAQ;cACZqB,YAAY,CAACK,IAAI,CAACtB,YAAY,CAAC;cAC/B;YACD;cACC,MAAM,IAAIgB,KAAK,CACd,qDACD,CAAC;UACH;QACD,CAAC,MAAM;UACNC,YAAY,GAAGN,OAAO,CAACY,MAAM,CAACC,CAAC,IAAI;YAClC,OAAOA,CAAC,CAACC,cAAc,CAACC,GAAG,CAACd,KAAK,CAAC;UACnC,CAAC,CAAC;QACH;QAEA,IAAIe,SAAS,GAAGvB,OAAO,CAACwB,KAAK,IAAI,CAAC;QAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,YAAY,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;UAC7C,MAAML,CAAC,GAAGP,YAAY,CAACY,CAAC,CAAC;UACzB,IAAIL,CAAC,CAACO,EAAE,KAAK,IAAI,EAAE;YAClBP,CAAC,CAACO,EAAE,GAAGJ,SAAS,EAAE;UACnB;UACA,IAAIvB,OAAO,CAAC4B,GAAG,IAAIL,SAAS,GAAGvB,OAAO,CAAC4B,GAAG,EAAE;QAC7C;MACD,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AACAC,MAAM,CAACC,OAAO,GAAGhC,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script"}