{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  SyncBailHook\n} = require(\"tapable\");\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nmodule.exports = class HotModuleReplacementPlugin {\n  constructor(options) {\n    this.options = options || {};\n    this.multiStep = this.options.multiStep;\n    this.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n    this.requestTimeout = this.options.requestTimeout || 10000;\n  }\n  apply(compiler) {\n    const multiStep = this.multiStep;\n    const fullBuildTimeout = this.fullBuildTimeout;\n    const requestTimeout = this.requestTimeout;\n    const hotUpdateChunkFilename = compiler.options.output.hotUpdateChunkFilename;\n    const hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n    compiler.hooks.additionalPass.tapAsync(\"HotModuleReplacementPlugin\", callback => {\n      if (multiStep) return setTimeout(callback, fullBuildTimeout);\n      return callback();\n    });\n    const addParserPlugins = (parser, parserOptions) => {\n      parser.hooks.expression.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.h()\"));\n      parser.hooks.evaluateTypeof.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.evaluateToString(\"string\"));\n      parser.hooks.evaluateIdentifier.for(\"module.hot\").tap({\n        name: \"HotModuleReplacementPlugin\",\n        before: \"NodeStuffPlugin\"\n      }, expr => {\n        return ParserHelpers.evaluateToIdentifier(\"module.hot\", !!parser.state.compilation.hotUpdateChunkTemplate)(expr);\n      });\n      // TODO webpack 5: refactor this, no custom hooks\n      if (!parser.hooks.hotAcceptCallback) {\n        parser.hooks.hotAcceptCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n      if (!parser.hooks.hotAcceptWithoutCallback) {\n        parser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n      parser.hooks.call.for(\"module.hot.accept\").tap(\"HotModuleReplacementPlugin\", expr => {\n        if (!parser.state.compilation.hotUpdateChunkTemplate) {\n          return false;\n        }\n        if (expr.arguments.length >= 1) {\n          const arg = parser.evaluateExpression(expr.arguments[0]);\n          let params = [];\n          let requests = [];\n          if (arg.isString()) {\n            params = [arg];\n          } else if (arg.isArray()) {\n            params = arg.items.filter(param => param.isString());\n          }\n          if (params.length > 0) {\n            params.forEach((param, idx) => {\n              const request = param.string;\n              const dep = new ModuleHotAcceptDependency(request, param.range);\n              dep.optional = true;\n              dep.loc = Object.create(expr.loc);\n              dep.loc.index = idx;\n              parser.state.module.addDependency(dep);\n              requests.push(request);\n            });\n            if (expr.arguments.length > 1) {\n              parser.hooks.hotAcceptCallback.call(expr.arguments[1], requests);\n              parser.walkExpression(expr.arguments[1]); // other args are ignored\n              return true;\n            } else {\n              parser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n              return true;\n            }\n          }\n        }\n      });\n      parser.hooks.call.for(\"module.hot.decline\").tap(\"HotModuleReplacementPlugin\", expr => {\n        if (!parser.state.compilation.hotUpdateChunkTemplate) {\n          return false;\n        }\n        if (expr.arguments.length === 1) {\n          const arg = parser.evaluateExpression(expr.arguments[0]);\n          let params = [];\n          if (arg.isString()) {\n            params = [arg];\n          } else if (arg.isArray()) {\n            params = arg.items.filter(param => param.isString());\n          }\n          params.forEach((param, idx) => {\n            const dep = new ModuleHotDeclineDependency(param.string, param.range);\n            dep.optional = true;\n            dep.loc = Object.create(expr.loc);\n            dep.loc.index = idx;\n            parser.state.module.addDependency(dep);\n          });\n        }\n      });\n      parser.hooks.expression.for(\"module.hot\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n    };\n    compiler.hooks.compilation.tap(\"HotModuleReplacementPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      // This applies the HMR plugin only to the targeted compiler\n      // It should not affect child compilations\n      if (compilation.compiler !== compiler) return;\n      const hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n      if (!hotUpdateChunkTemplate) return;\n      compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      compilation.dependencyFactories.set(ModuleHotAcceptDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ModuleHotAcceptDependency, new ModuleHotAcceptDependency.Template());\n      compilation.dependencyFactories.set(ModuleHotDeclineDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ModuleHotDeclineDependency, new ModuleHotDeclineDependency.Template());\n      compilation.hooks.record.tap(\"HotModuleReplacementPlugin\", (compilation, records) => {\n        if (records.hash === compilation.hash) return;\n        records.hash = compilation.hash;\n        records.moduleHashs = {};\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n          records.moduleHashs[identifier] = module.hash;\n        }\n        records.chunkHashs = {};\n        for (const chunk of compilation.chunks) {\n          records.chunkHashs[chunk.id] = chunk.hash;\n        }\n        records.chunkModuleIds = {};\n        for (const chunk of compilation.chunks) {\n          records.chunkModuleIds[chunk.id] = Array.from(chunk.modulesIterable, m => m.id);\n        }\n      });\n      let initialPass = false;\n      let recompilation = false;\n      compilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n        let records = compilation.records;\n        if (!records) {\n          initialPass = true;\n          return;\n        }\n        if (!records.hash) initialPass = true;\n        const preHash = records.preHash || \"x\";\n        const prepreHash = records.prepreHash || \"x\";\n        if (preHash === compilation.hash) {\n          recompilation = true;\n          compilation.modifyHash(prepreHash);\n          return;\n        }\n        records.prepreHash = records.hash || \"x\";\n        records.preHash = compilation.hash;\n        compilation.modifyHash(records.prepreHash);\n      });\n      compilation.hooks.shouldGenerateChunkAssets.tap(\"HotModuleReplacementPlugin\", () => {\n        if (multiStep && !recompilation && !initialPass) return false;\n      });\n      compilation.hooks.needAdditionalPass.tap(\"HotModuleReplacementPlugin\", () => {\n        if (multiStep && !recompilation && !initialPass) return true;\n      });\n      compilation.hooks.additionalChunkAssets.tap(\"HotModuleReplacementPlugin\", () => {\n        const records = compilation.records;\n        if (records.hash === compilation.hash) return;\n        if (!records.moduleHashs || !records.chunkHashs || !records.chunkModuleIds) return;\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n          let hash = module.hash;\n          module.hotUpdate = records.moduleHashs[identifier] !== hash;\n        }\n        const hotUpdateMainContent = {\n          h: compilation.hash,\n          c: {}\n        };\n        for (const key of Object.keys(records.chunkHashs)) {\n          const chunkId = isNaN(+key) ? key : +key;\n          const currentChunk = compilation.chunks.find(chunk => `${chunk.id}` === key);\n          if (currentChunk) {\n            const newModules = currentChunk.getModules().filter(module => module.hotUpdate);\n            const allModules = new Set();\n            for (const module of currentChunk.modulesIterable) {\n              allModules.add(module.id);\n            }\n            const removedModules = records.chunkModuleIds[chunkId].filter(id => !allModules.has(id));\n            if (newModules.length > 0 || removedModules.length > 0) {\n              const source = hotUpdateChunkTemplate.render(chunkId, newModules, removedModules, compilation.hash, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n              const {\n                path: filename,\n                info: assetInfo\n              } = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n                hash: records.hash,\n                chunk: currentChunk\n              });\n              compilation.additionalChunkAssets.push(filename);\n              compilation.emitAsset(filename, source, Object.assign({\n                hotModuleReplacement: true\n              }, assetInfo));\n              hotUpdateMainContent.c[chunkId] = true;\n              currentChunk.files.push(filename);\n              compilation.hooks.chunkAsset.call(currentChunk, filename);\n            }\n          } else {\n            hotUpdateMainContent.c[chunkId] = false;\n          }\n        }\n        const source = new RawSource(JSON.stringify(hotUpdateMainContent));\n        const {\n          path: filename,\n          info: assetInfo\n        } = compilation.getPathWithInfo(hotUpdateMainFilename, {\n          hash: records.hash\n        });\n        compilation.emitAsset(filename, source, Object.assign({\n          hotModuleReplacement: true\n        }, assetInfo));\n      });\n      const mainTemplate = compilation.mainTemplate;\n      mainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n        hash.update(\"HotMainTemplateDecorator\");\n      });\n      mainTemplate.hooks.moduleRequire.tap(\"HotModuleReplacementPlugin\", (_, chunk, hash, varModuleId) => {\n        return `hotCreateRequire(${varModuleId})`;\n      });\n      mainTemplate.hooks.requireExtensions.tap(\"HotModuleReplacementPlugin\", source => {\n        const buf = [source];\n        buf.push(\"\");\n        buf.push(\"// __webpack_hash__\");\n        buf.push(mainTemplate.requireFn + \".h = function() { return hotCurrentHash; };\");\n        return Template.asString(buf);\n      });\n      const needChunkLoadingCode = chunk => {\n        for (const chunkGroup of chunk.groupsIterable) {\n          if (chunkGroup.chunks.length > 1) return true;\n          if (chunkGroup.getNumberOfChildren() > 0) return true;\n        }\n        return false;\n      };\n      mainTemplate.hooks.bootstrap.tap(\"HotModuleReplacementPlugin\", (source, chunk, hash) => {\n        source = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n        return Template.asString([source, \"\", hotInitCode.replace(/\\$require\\$/g, mainTemplate.requireFn).replace(/\\$hash\\$/g, JSON.stringify(hash)).replace(/\\$requestTimeout\\$/g, requestTimeout).replace(/\\/\\*foreachInstalledChunks\\*\\//g, needChunkLoadingCode(chunk) ? \"for(var chunkId in installedChunks)\" : `var chunkId = ${JSON.stringify(chunk.id)};`)]);\n      });\n      mainTemplate.hooks.globalHash.tap(\"HotModuleReplacementPlugin\", () => true);\n      mainTemplate.hooks.currentHash.tap(\"HotModuleReplacementPlugin\", (_, length) => {\n        if (isFinite(length)) {\n          return `hotCurrentHash.substr(0, ${length})`;\n        } else {\n          return \"hotCurrentHash\";\n        }\n      });\n      mainTemplate.hooks.moduleObj.tap(\"HotModuleReplacementPlugin\", (source, chunk, hash, varModuleId) => {\n        return Template.asString([`${source},`, `hot: hotCreateModule(${varModuleId}),`, \"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\", \"children: []\"]);\n      });\n\n      // TODO add HMR support for javascript/esm\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n      compilation.hooks.normalModuleLoader.tap(\"HotModuleReplacementPlugin\", context => {\n        context.hot = true;\n      });\n    });\n  }\n};\nconst hotInitCode = Template.getFunctionContent(require(\"./HotModuleReplacement.runtime\"));","map":{"version":3,"names":["SyncBailHook","require","RawSource","Template","ModuleHotAcceptDependency","ModuleHotDeclineDependency","ConstDependency","NullFactory","ParserHelpers","module","exports","HotModuleReplacementPlugin","constructor","options","multiStep","fullBuildTimeout","requestTimeout","apply","compiler","hotUpdateChunkFilename","output","hotUpdateMainFilename","hooks","additionalPass","tapAsync","callback","setTimeout","addParserPlugins","parser","parserOptions","expression","for","tap","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","evaluateIdentifier","name","before","expr","evaluateToIdentifier","state","compilation","hotUpdateChunkTemplate","hotAcceptCallback","hotAcceptWithoutCallback","call","arguments","length","arg","evaluateExpression","params","requests","isString","isArray","items","filter","param","forEach","idx","request","string","dep","range","optional","loc","Object","create","index","addDependency","push","walkExpression","skipTraversal","normalModuleFactory","dependencyFactories","set","dependencyTemplates","record","records","hash","moduleHashs","modules","identifier","chunkHashs","chunk","chunks","id","chunkModuleIds","Array","from","modulesIterable","m","initialPass","recompilation","afterHash","preHash","prepreHash","modifyHash","shouldGenerateChunkAssets","needAdditionalPass","additionalChunkAssets","hotUpdate","hotUpdateMainContent","h","c","key","keys","chunkId","isNaN","currentChunk","find","newModules","getModules","allModules","Set","add","removedModules","has","source","render","moduleTemplates","javascript","path","filename","info","assetInfo","getPathWithInfo","emitAsset","assign","hotModuleReplacement","files","chunkAsset","JSON","stringify","mainTemplate","update","moduleRequire","_","varModuleId","requireExtensions","buf","requireFn","asString","needChunkLoadingCode","chunkGroup","groupsIterable","getNumberOfChildren","bootstrap","hotBootstrap","hotInitCode","replace","globalHash","currentHash","isFinite","moduleObj","normalModuleLoader","context","hot","getFunctionContent"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/HotModuleReplacementPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncBailHook } = require(\"tapable\");\nconst { RawSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = class HotModuleReplacementPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.multiStep = this.options.multiStep;\n\t\tthis.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n\t\tthis.requestTimeout = this.options.requestTimeout || 10000;\n\t}\n\n\tapply(compiler) {\n\t\tconst multiStep = this.multiStep;\n\t\tconst fullBuildTimeout = this.fullBuildTimeout;\n\t\tconst requestTimeout = this.requestTimeout;\n\t\tconst hotUpdateChunkFilename =\n\t\t\tcompiler.options.output.hotUpdateChunkFilename;\n\t\tconst hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n\t\tcompiler.hooks.additionalPass.tapAsync(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\tcallback => {\n\t\t\t\tif (multiStep) return setTimeout(callback, fullBuildTimeout);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\n\t\tconst addParserPlugins = (parser, parserOptions) => {\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\"__webpack_require__.h()\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.evaluateToString(\"string\")\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateIdentifier.for(\"module.hot\").tap(\n\t\t\t\t{\n\t\t\t\t\tname: \"HotModuleReplacementPlugin\",\n\t\t\t\t\tbefore: \"NodeStuffPlugin\"\n\t\t\t\t},\n\t\t\t\texpr => {\n\t\t\t\t\treturn ParserHelpers.evaluateToIdentifier(\n\t\t\t\t\t\t\"module.hot\",\n\t\t\t\t\t\t!!parser.state.compilation.hotUpdateChunkTemplate\n\t\t\t\t\t)(expr);\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO webpack 5: refactor this, no custom hooks\n\t\t\tif (!parser.hooks.hotAcceptCallback) {\n\t\t\t\tparser.hooks.hotAcceptCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tif (!parser.hooks.hotAcceptWithoutCallback) {\n\t\t\t\tparser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.accept\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length >= 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tlet requests = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\t\tconst request = param.string;\n\t\t\t\t\t\t\t\tconst dep = new ModuleHotAcceptDependency(request, param.range);\n\t\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\t\trequests.push(request);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (expr.arguments.length > 1) {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptCallback.call(\n\t\t\t\t\t\t\t\t\texpr.arguments[1],\n\t\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparser.walkExpression(expr.arguments[1]); // other args are ignored\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.decline\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length === 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\tconst dep = new ModuleHotDeclineDependency(\n\t\t\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\t\t\tparam.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"module.hot\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n\t\t};\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t// This applies the HMR plugin only to the targeted compiler\n\t\t\t\t// It should not affect child compilations\n\t\t\t\tif (compilation.compiler !== compiler) return;\n\n\t\t\t\tconst hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n\t\t\t\tif (!hotUpdateChunkTemplate) return;\n\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnew ModuleHotAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnew ModuleHotDeclineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.record.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(compilation, records) => {\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\trecords.hash = compilation.hash;\n\t\t\t\t\t\trecords.moduleHashs = {};\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\trecords.moduleHashs[identifier] = module.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkHashs = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkHashs[chunk.id] = chunk.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkModuleIds = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkModuleIds[chunk.id] = Array.from(\n\t\t\t\t\t\t\t\tchunk.modulesIterable,\n\t\t\t\t\t\t\t\tm => m.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tlet initialPass = false;\n\t\t\t\tlet recompilation = false;\n\t\t\t\tcompilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n\t\t\t\t\tlet records = compilation.records;\n\t\t\t\t\tif (!records) {\n\t\t\t\t\t\tinitialPass = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!records.hash) initialPass = true;\n\t\t\t\t\tconst preHash = records.preHash || \"x\";\n\t\t\t\t\tconst prepreHash = records.prepreHash || \"x\";\n\t\t\t\t\tif (preHash === compilation.hash) {\n\t\t\t\t\t\trecompilation = true;\n\t\t\t\t\t\tcompilation.modifyHash(prepreHash);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecords.prepreHash = records.hash || \"x\";\n\t\t\t\t\trecords.preHash = compilation.hash;\n\t\t\t\t\tcompilation.modifyHash(records.prepreHash);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.shouldGenerateChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.needAdditionalPass.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.additionalChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst records = compilation.records;\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!records.moduleHashs ||\n\t\t\t\t\t\t\t!records.chunkHashs ||\n\t\t\t\t\t\t\t!records.chunkModuleIds\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\tlet hash = module.hash;\n\t\t\t\t\t\t\tmodule.hotUpdate = records.moduleHashs[identifier] !== hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst hotUpdateMainContent = {\n\t\t\t\t\t\t\th: compilation.hash,\n\t\t\t\t\t\t\tc: {}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfor (const key of Object.keys(records.chunkHashs)) {\n\t\t\t\t\t\t\tconst chunkId = isNaN(+key) ? key : +key;\n\t\t\t\t\t\t\tconst currentChunk = compilation.chunks.find(\n\t\t\t\t\t\t\t\tchunk => `${chunk.id}` === key\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (currentChunk) {\n\t\t\t\t\t\t\t\tconst newModules = currentChunk\n\t\t\t\t\t\t\t\t\t.getModules()\n\t\t\t\t\t\t\t\t\t.filter(module => module.hotUpdate);\n\t\t\t\t\t\t\t\tconst allModules = new Set();\n\t\t\t\t\t\t\t\tfor (const module of currentChunk.modulesIterable) {\n\t\t\t\t\t\t\t\t\tallModules.add(module.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst removedModules = records.chunkModuleIds[chunkId].filter(\n\t\t\t\t\t\t\t\t\tid => !allModules.has(id)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (newModules.length > 0 || removedModules.length > 0) {\n\t\t\t\t\t\t\t\t\tconst source = hotUpdateChunkTemplate.render(\n\t\t\t\t\t\t\t\t\t\tchunkId,\n\t\t\t\t\t\t\t\t\t\tnewModules,\n\t\t\t\t\t\t\t\t\t\tremovedModules,\n\t\t\t\t\t\t\t\t\t\tcompilation.hash,\n\t\t\t\t\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n\t\t\t\t\t\t\t\t\t\thash: records.hash,\n\t\t\t\t\t\t\t\t\t\tchunk: currentChunk\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilation.additionalChunkAssets.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = true;\n\t\t\t\t\t\t\t\t\tcurrentChunk.files.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.hooks.chunkAsset.call(currentChunk, filename);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new RawSource(JSON.stringify(hotUpdateMainContent));\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateMainFilename, {\n\t\t\t\t\t\t\thash: records.hash\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\n\t\t\t\tmainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n\t\t\t\t\thash.update(\"HotMainTemplateDecorator\");\n\t\t\t\t});\n\n\t\t\t\tmainTemplate.hooks.moduleRequire.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn `hotCreateRequire(${varModuleId})`;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tsource => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\".h = function() { return hotCurrentHash; };\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst needChunkLoadingCode = chunk => {\n\t\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tsource = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\thotInitCode\n\t\t\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t\t\t\t\t.replace(/\\$requestTimeout\\$/g, requestTimeout)\n\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t/\\/\\*foreachInstalledChunks\\*\\//g,\n\t\t\t\t\t\t\t\t\tneedChunkLoadingCode(chunk)\n\t\t\t\t\t\t\t\t\t\t? \"for(var chunkId in installedChunks)\"\n\t\t\t\t\t\t\t\t\t\t: `var chunkId = ${JSON.stringify(chunk.id)};`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => true\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.currentHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, length) => {\n\t\t\t\t\t\tif (isFinite(length)) {\n\t\t\t\t\t\t\treturn `hotCurrentHash.substr(0, ${length})`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn \"hotCurrentHash\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.moduleObj.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t`${source},`,\n\t\t\t\t\t\t\t`hot: hotCreateModule(${varModuleId}),`,\n\t\t\t\t\t\t\t\"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\",\n\t\t\t\t\t\t\t\"children: []\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// TODO add HMR support for javascript/esm\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\n\t\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tcontext => {\n\t\t\t\t\t\tcontext.hot = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n};\n\nconst hotInitCode = Template.getFunctionContent(\n\trequire(\"./HotModuleReplacement.runtime\")\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}