{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst pify = require('pify');\nconst semver = require('semver');\nconst defaults = {\n  mode: 0o777 & ~process.umask(),\n  fs\n};\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`);\n      error.code = 'EINVAL';\n      throw error;\n    }\n  }\n};\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`);\n  error.code = 'EPERM';\n  error.errno = -4048;\n  error.path = pth;\n  error.syscall = 'mkdir';\n  return error;\n};\nconst makeDir = (input, options) => Promise.resolve().then(() => {\n  checkPath(input);\n  options = Object.assign({}, defaults, options);\n\n  // TODO: Use util.promisify when targeting Node.js 8\n  const mkdir = pify(options.fs.mkdir);\n  const stat = pify(options.fs.stat);\n  if (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n    const pth = path.resolve(input);\n    return mkdir(pth, {\n      mode: options.mode,\n      recursive: true\n    }).then(() => pth);\n  }\n  const make = pth => {\n    return mkdir(pth, options.mode).then(() => pth).catch(error => {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n        return make(path.dirname(pth)).then(() => make(pth));\n      }\n      return stat(pth).then(stats => stats.isDirectory() ? pth : Promise.reject()).catch(() => {\n        throw error;\n      });\n    });\n  };\n  return make(path.resolve(input));\n});\nmodule.exports = makeDir;\nmodule.exports.default = makeDir;\nmodule.exports.sync = (input, options) => {\n  checkPath(input);\n  options = Object.assign({}, defaults, options);\n  if (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n    const pth = path.resolve(input);\n    fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    });\n    return pth;\n  }\n  const make = pth => {\n    try {\n      options.fs.mkdirSync(pth, options.mode);\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n        make(path.dirname(pth));\n        return make(pth);\n      }\n      try {\n        if (!options.fs.statSync(pth).isDirectory()) {\n          throw new Error('The path is not a directory');\n        }\n      } catch (_) {\n        throw error;\n      }\n    }\n    return pth;\n  };\n  return make(path.resolve(input));\n};","map":{"version":3,"names":["fs","require","path","pify","semver","defaults","mode","process","umask","useNativeRecursiveOption","satisfies","version","checkPath","pth","platform","pathHasInvalidWinCharacters","test","replace","parse","root","error","Error","code","permissionError","errno","syscall","makeDir","input","options","Promise","resolve","then","Object","assign","mkdir","stat","recursive","make","catch","dirname","message","includes","stats","isDirectory","reject","module","exports","default","sync","mkdirSync","statSync","_"],"sources":["/home/soon/bulletin-board/node_modules/make-dir/index.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst pify = require('pify');\nconst semver = require('semver');\n\nconst defaults = {\n\tmode: 0o777 & (~process.umask()),\n\tfs\n};\n\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst error = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terror.code = 'EINVAL';\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nconst permissionError = pth => {\n\t// This replicates the exception of `fs.mkdir` with native the\n\t// `recusive` option when run on an invalid drive under Windows.\n\tconst error = new Error(`operation not permitted, mkdir '${pth}'`);\n\terror.code = 'EPERM';\n\terror.errno = -4048;\n\terror.path = pth;\n\terror.syscall = 'mkdir';\n\treturn error;\n};\n\nconst makeDir = (input, options) => Promise.resolve().then(() => {\n\tcheckPath(input);\n\toptions = Object.assign({}, defaults, options);\n\n\t// TODO: Use util.promisify when targeting Node.js 8\n\tconst mkdir = pify(options.fs.mkdir);\n\tconst stat = pify(options.fs.stat);\n\n\tif (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n\t\tconst pth = path.resolve(input);\n\n\t\treturn mkdir(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t}).then(() => pth);\n\t}\n\n\tconst make = pth => {\n\t\treturn mkdir(pth, options.mode)\n\t\t\t.then(() => pth)\n\t\t\t.catch(error => {\n\t\t\t\tif (error.code === 'EPERM') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn make(path.dirname(pth)).then(() => make(pth));\n\t\t\t\t}\n\n\t\t\t\treturn stat(pth)\n\t\t\t\t\t.then(stats => stats.isDirectory() ? pth : Promise.reject())\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn make(path.resolve(input));\n});\n\nmodule.exports = makeDir;\nmodule.exports.default = makeDir;\n\nmodule.exports.sync = (input, options) => {\n\tcheckPath(input);\n\toptions = Object.assign({}, defaults, options);\n\n\tif (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n\t\tconst pth = path.resolve(input);\n\n\t\tfs.mkdirSync(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\toptions.fs.mkdirSync(pth, options.mode);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!options.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}