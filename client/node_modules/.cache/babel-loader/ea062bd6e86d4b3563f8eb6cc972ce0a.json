{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\nclass CodeNode {\n  constructor(generatedCode) {\n    this.generatedCode = generatedCode;\n  }\n  clone() {\n    return new CodeNode(this.generatedCode);\n  }\n  getGeneratedCode() {\n    return this.generatedCode;\n  }\n  getMappings(mappingsContext) {\n    const lines = getNumberOfLines(this.generatedCode);\n    const mapping = Array(lines + 1).join(\";\");\n    if (lines > 0) {\n      mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n      if (mappingsContext.unfinishedGeneratedLine > 0) {\n        return mapping + \"A\";\n      } else {\n        return mapping;\n      }\n    } else {\n      const prevUnfinished = mappingsContext.unfinishedGeneratedLine;\n      mappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\n      if (prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\n        return \"A\";\n      } else {\n        return \"\";\n      }\n    }\n  }\n  addGeneratedCode(generatedCode) {\n    this.generatedCode += generatedCode;\n  }\n  mapGeneratedCode(fn) {\n    const generatedCode = fn(this.generatedCode);\n    return new CodeNode(generatedCode);\n  }\n  getNormalizedNodes() {\n    return [this];\n  }\n  merge(otherNode) {\n    if (otherNode instanceof CodeNode) {\n      this.generatedCode += otherNode.generatedCode;\n      return this;\n    }\n    return false;\n  }\n}\nmodule.exports = CodeNode;","map":{"version":3,"names":["getNumberOfLines","require","getUnfinishedLine","CodeNode","constructor","generatedCode","clone","getGeneratedCode","getMappings","mappingsContext","lines","mapping","Array","join","unfinishedGeneratedLine","prevUnfinished","addGeneratedCode","mapGeneratedCode","fn","getNormalizedNodes","merge","otherNode","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/source-list-map/lib/CodeNode.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nconst getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nclass CodeNode {\n\tconstructor(generatedCode) {\n\t\tthis.generatedCode = generatedCode;\n\t}\n\n\tclone() {\n\t\treturn new CodeNode(this.generatedCode);\n\t}\n\n\tgetGeneratedCode() {\n\t\treturn this.generatedCode;\n\t}\n\n\tgetMappings(mappingsContext) {\n\t\tconst lines = getNumberOfLines(this.generatedCode);\n\t\tconst mapping = Array(lines+1).join(\";\");\n\t\tif(lines > 0) {\n\t\t\tmappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n\t\t\tif(mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn mapping + \"A\";\n\t\t\t} else {\n\t\t\t\treturn mapping;\n\t\t\t}\n\t\t} else {\n\t\t\tconst prevUnfinished = mappingsContext.unfinishedGeneratedLine;\n\t\t\tmappingsContext.unfinishedGeneratedLine += getUnfinishedLine(this.generatedCode);\n\t\t\tif(prevUnfinished === 0 && mappingsContext.unfinishedGeneratedLine > 0) {\n\t\t\t\treturn \"A\";\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\taddGeneratedCode(generatedCode) {\n\t\tthis.generatedCode += generatedCode;\n\t}\n\n\tmapGeneratedCode(fn) {\n\t\tconst generatedCode = fn(this.generatedCode);\n\t\treturn new CodeNode(generatedCode);\n\t}\n\n\tgetNormalizedNodes() {\n\t\treturn [this];\n\t}\n\n\tmerge(otherNode) {\n\t\tif(otherNode instanceof CodeNode) {\n\t\t\tthis.generatedCode += otherNode.generatedCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nmodule.exports = CodeNode;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,gBAAgB;AAC9D,MAAME,iBAAiB,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,iBAAiB;AAEhE,MAAMC,QAAQ,CAAC;EACdC,WAAWA,CAACC,aAAa,EAAE;IAC1B,IAAI,CAACA,aAAa,GAAGA,aAAa;EACnC;EAEAC,KAAKA,CAAA,EAAG;IACP,OAAO,IAAIH,QAAQ,CAAC,IAAI,CAACE,aAAa,CAAC;EACxC;EAEAE,gBAAgBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACF,aAAa;EAC1B;EAEAG,WAAWA,CAACC,eAAe,EAAE;IAC5B,MAAMC,KAAK,GAAGV,gBAAgB,CAAC,IAAI,CAACK,aAAa,CAAC;IAClD,MAAMM,OAAO,GAAGC,KAAK,CAACF,KAAK,GAAC,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;IACxC,IAAGH,KAAK,GAAG,CAAC,EAAE;MACbD,eAAe,CAACK,uBAAuB,GAAGZ,iBAAiB,CAAC,IAAI,CAACG,aAAa,CAAC;MAC/E,IAAGI,eAAe,CAACK,uBAAuB,GAAG,CAAC,EAAE;QAC/C,OAAOH,OAAO,GAAG,GAAG;MACrB,CAAC,MAAM;QACN,OAAOA,OAAO;MACf;IACD,CAAC,MAAM;MACN,MAAMI,cAAc,GAAGN,eAAe,CAACK,uBAAuB;MAC9DL,eAAe,CAACK,uBAAuB,IAAIZ,iBAAiB,CAAC,IAAI,CAACG,aAAa,CAAC;MAChF,IAAGU,cAAc,KAAK,CAAC,IAAIN,eAAe,CAACK,uBAAuB,GAAG,CAAC,EAAE;QACvE,OAAO,GAAG;MACX,CAAC,MAAM;QACN,OAAO,EAAE;MACV;IACD;EACD;EAEAE,gBAAgBA,CAACX,aAAa,EAAE;IAC/B,IAAI,CAACA,aAAa,IAAIA,aAAa;EACpC;EAEAY,gBAAgBA,CAACC,EAAE,EAAE;IACpB,MAAMb,aAAa,GAAGa,EAAE,CAAC,IAAI,CAACb,aAAa,CAAC;IAC5C,OAAO,IAAIF,QAAQ,CAACE,aAAa,CAAC;EACnC;EAEAc,kBAAkBA,CAAA,EAAG;IACpB,OAAO,CAAC,IAAI,CAAC;EACd;EAEAC,KAAKA,CAACC,SAAS,EAAE;IAChB,IAAGA,SAAS,YAAYlB,QAAQ,EAAE;MACjC,IAAI,CAACE,aAAa,IAAIgB,SAAS,CAAChB,aAAa;MAC7C,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb;AACD;AAEAiB,MAAM,CAACC,OAAO,GAAGpB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}