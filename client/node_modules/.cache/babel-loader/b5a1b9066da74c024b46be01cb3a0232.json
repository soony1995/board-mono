{"ast":null,"code":"var LoaderLoadingError = require(\"./LoaderLoadingError\");\nmodule.exports = function loadLoader(loader, callback) {\n  if (typeof System === \"object\" && typeof System.import === \"function\") {\n    System.import(loader.path).catch(callback).then(function (module) {\n      loader.normal = typeof module === \"function\" ? module : module.default;\n      loader.pitch = module.pitch;\n      loader.raw = module.raw;\n      if (typeof loader.normal !== \"function\" && typeof loader.pitch !== \"function\") {\n        return callback(new LoaderLoadingError(\"Module '\" + loader.path + \"' is not a loader (must have normal or pitch function)\"));\n      }\n      callback();\n    });\n  } else {\n    try {\n      var module = require(loader.path);\n    } catch (e) {\n      // it is possible for node to choke on a require if the FD descriptor\n      // limit has been reached. give it a chance to recover.\n      if (e instanceof Error && e.code === \"EMFILE\") {\n        var retry = loadLoader.bind(null, loader, callback);\n        if (typeof setImmediate === \"function\") {\n          // node >= 0.9.0\n          return setImmediate(retry);\n        } else {\n          // node < 0.9.0\n          return process.nextTick(retry);\n        }\n      }\n      return callback(e);\n    }\n    if (typeof module !== \"function\" && typeof module !== \"object\") {\n      return callback(new LoaderLoadingError(\"Module '\" + loader.path + \"' is not a loader (export function or es6 module)\"));\n    }\n    loader.normal = typeof module === \"function\" ? module : module.default;\n    loader.pitch = module.pitch;\n    loader.raw = module.raw;\n    if (typeof loader.normal !== \"function\" && typeof loader.pitch !== \"function\") {\n      return callback(new LoaderLoadingError(\"Module '\" + loader.path + \"' is not a loader (must have normal or pitch function)\"));\n    }\n    callback();\n  }\n};","map":{"version":3,"names":["LoaderLoadingError","require","module","exports","loadLoader","loader","callback","System","import","path","catch","then","normal","default","pitch","raw","e","Error","code","retry","bind","setImmediate","process","nextTick"],"sources":["/home/soon/bulletin-board/node_modules/loader-runner/lib/loadLoader.js"],"sourcesContent":["var LoaderLoadingError = require(\"./LoaderLoadingError\");\n\nmodule.exports = function loadLoader(loader, callback) {\n\tif(typeof System === \"object\" && typeof System.import === \"function\") {\n\t\tSystem.import(loader.path).catch(callback).then(function(module) {\n\t\t\tloader.normal = typeof module === \"function\" ? module : module.default;\n\t\t\tloader.pitch = module.pitch;\n\t\t\tloader.raw = module.raw;\n\t\t\tif(typeof loader.normal !== \"function\" && typeof loader.pitch !== \"function\") {\n\t\t\t\treturn callback(new LoaderLoadingError(\n\t\t\t\t\t\"Module '\" + loader.path + \"' is not a loader (must have normal or pitch function)\"\n\t\t\t\t));\n\t\t\t}\n\t\t\tcallback();\n\t\t});\n\t} else {\n\t\ttry {\n\t\t\tvar module = require(loader.path);\n\t\t} catch(e) {\n\t\t\t// it is possible for node to choke on a require if the FD descriptor\n\t\t\t// limit has been reached. give it a chance to recover.\n\t\t\tif(e instanceof Error && e.code === \"EMFILE\") {\n\t\t\t\tvar retry = loadLoader.bind(null, loader, callback);\n\t\t\t\tif(typeof setImmediate === \"function\") {\n\t\t\t\t\t// node >= 0.9.0\n\t\t\t\t\treturn setImmediate(retry);\n\t\t\t\t} else {\n\t\t\t\t\t// node < 0.9.0\n\t\t\t\t\treturn process.nextTick(retry);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn callback(e);\n\t\t}\n\t\tif(typeof module !== \"function\" && typeof module !== \"object\") {\n\t\t\treturn callback(new LoaderLoadingError(\n\t\t\t\t\"Module '\" + loader.path + \"' is not a loader (export function or es6 module)\"\n\t\t\t));\n\t\t}\n\t\tloader.normal = typeof module === \"function\" ? module : module.default;\n\t\tloader.pitch = module.pitch;\n\t\tloader.raw = module.raw;\n\t\tif(typeof loader.normal !== \"function\" && typeof loader.pitch !== \"function\") {\n\t\t\treturn callback(new LoaderLoadingError(\n\t\t\t\t\"Module '\" + loader.path + \"' is not a loader (must have normal or pitch function)\"\n\t\t\t));\n\t\t}\n\t\tcallback();\n\t}\n};\n"],"mappings":"AAAA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAExDC,MAAM,CAACC,OAAO,GAAG,SAASC,UAAUA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACtD,IAAG,OAAOC,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,CAACC,MAAM,KAAK,UAAU,EAAE;IACrED,MAAM,CAACC,MAAM,CAACH,MAAM,CAACI,IAAI,CAAC,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAACK,IAAI,CAAC,UAAST,MAAM,EAAE;MAChEG,MAAM,CAACO,MAAM,GAAG,OAAOV,MAAM,KAAK,UAAU,GAAGA,MAAM,GAAGA,MAAM,CAACW,OAAO;MACtER,MAAM,CAACS,KAAK,GAAGZ,MAAM,CAACY,KAAK;MAC3BT,MAAM,CAACU,GAAG,GAAGb,MAAM,CAACa,GAAG;MACvB,IAAG,OAAOV,MAAM,CAACO,MAAM,KAAK,UAAU,IAAI,OAAOP,MAAM,CAACS,KAAK,KAAK,UAAU,EAAE;QAC7E,OAAOR,QAAQ,CAAC,IAAIN,kBAAkB,CACrC,UAAU,GAAGK,MAAM,CAACI,IAAI,GAAG,wDAC5B,CAAC,CAAC;MACH;MACAH,QAAQ,CAAC,CAAC;IACX,CAAC,CAAC;EACH,CAAC,MAAM;IACN,IAAI;MACH,IAAIJ,MAAM,GAAGD,OAAO,CAACI,MAAM,CAACI,IAAI,CAAC;IAClC,CAAC,CAAC,OAAMO,CAAC,EAAE;MACV;MACA;MACA,IAAGA,CAAC,YAAYC,KAAK,IAAID,CAAC,CAACE,IAAI,KAAK,QAAQ,EAAE;QAC7C,IAAIC,KAAK,GAAGf,UAAU,CAACgB,IAAI,CAAC,IAAI,EAAEf,MAAM,EAAEC,QAAQ,CAAC;QACnD,IAAG,OAAOe,YAAY,KAAK,UAAU,EAAE;UACtC;UACA,OAAOA,YAAY,CAACF,KAAK,CAAC;QAC3B,CAAC,MAAM;UACN;UACA,OAAOG,OAAO,CAACC,QAAQ,CAACJ,KAAK,CAAC;QAC/B;MACD;MACA,OAAOb,QAAQ,CAACU,CAAC,CAAC;IACnB;IACA,IAAG,OAAOd,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9D,OAAOI,QAAQ,CAAC,IAAIN,kBAAkB,CACrC,UAAU,GAAGK,MAAM,CAACI,IAAI,GAAG,mDAC5B,CAAC,CAAC;IACH;IACAJ,MAAM,CAACO,MAAM,GAAG,OAAOV,MAAM,KAAK,UAAU,GAAGA,MAAM,GAAGA,MAAM,CAACW,OAAO;IACtER,MAAM,CAACS,KAAK,GAAGZ,MAAM,CAACY,KAAK;IAC3BT,MAAM,CAACU,GAAG,GAAGb,MAAM,CAACa,GAAG;IACvB,IAAG,OAAOV,MAAM,CAACO,MAAM,KAAK,UAAU,IAAI,OAAOP,MAAM,CAACS,KAAK,KAAK,UAAU,EAAE;MAC7E,OAAOR,QAAQ,CAAC,IAAIN,kBAAkB,CACrC,UAAU,GAAGK,MAAM,CAACI,IAAI,GAAG,wDAC5B,CAAC,CAAC;IACH;IACAH,QAAQ,CAAC,CAAC;EACX;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}