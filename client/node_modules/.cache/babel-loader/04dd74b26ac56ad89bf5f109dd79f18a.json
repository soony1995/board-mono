{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst NullFactory = require(\"../NullFactory\");\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\nconst AliasPlugin = require(\"enhanced-resolve/lib/AliasPlugin\");\nconst ParserHelpers = require(\"../ParserHelpers\");\nclass AMDPlugin {\n  constructor(options, amdOptions) {\n    this.amdOptions = amdOptions;\n    this.options = options;\n  }\n  apply(compiler) {\n    const options = this.options;\n    const amdOptions = this.amdOptions;\n    compiler.hooks.compilation.tap(\"AMDPlugin\", (compilation, {\n      contextModuleFactory,\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(AMDRequireDependency, new NullFactory());\n      compilation.dependencyTemplates.set(AMDRequireDependency, new AMDRequireDependency.Template());\n      compilation.dependencyFactories.set(AMDRequireItemDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(AMDRequireItemDependency, new AMDRequireItemDependency.Template());\n      compilation.dependencyFactories.set(AMDRequireArrayDependency, new NullFactory());\n      compilation.dependencyTemplates.set(AMDRequireArrayDependency, new AMDRequireArrayDependency.Template());\n      compilation.dependencyFactories.set(AMDRequireContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(AMDRequireContextDependency, new AMDRequireContextDependency.Template());\n      compilation.dependencyFactories.set(AMDDefineDependency, new NullFactory());\n      compilation.dependencyTemplates.set(AMDDefineDependency, new AMDDefineDependency.Template());\n      compilation.dependencyFactories.set(UnsupportedDependency, new NullFactory());\n      compilation.dependencyTemplates.set(UnsupportedDependency, new UnsupportedDependency.Template());\n      compilation.dependencyFactories.set(LocalModuleDependency, new NullFactory());\n      compilation.dependencyTemplates.set(LocalModuleDependency, new LocalModuleDependency.Template());\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.amd !== undefined && !parserOptions.amd) return;\n        const setExpressionToModule = (outerExpr, module) => {\n          parser.hooks.expression.for(outerExpr).tap(\"AMDPlugin\", expr => {\n            const dep = new AMDRequireItemDependency(module, expr.range);\n            dep.userRequest = outerExpr;\n            dep.loc = expr.loc;\n            parser.state.current.addDependency(dep);\n            return true;\n          });\n        };\n        new AMDRequireDependenciesBlockParserPlugin(options).apply(parser);\n        new AMDDefineDependencyParserPlugin(options).apply(parser);\n        setExpressionToModule(\"require.amd\", \"!!webpack amd options\");\n        setExpressionToModule(\"define.amd\", \"!!webpack amd options\");\n        setExpressionToModule(\"define\", \"!!webpack amd define\");\n        parser.hooks.expression.for(\"__webpack_amd_options__\").tap(\"AMDPlugin\", () => parser.state.current.addVariable(\"__webpack_amd_options__\", JSON.stringify(amdOptions)));\n        parser.hooks.evaluateTypeof.for(\"define.amd\").tap(\"AMDPlugin\", ParserHelpers.evaluateToString(typeof amdOptions));\n        parser.hooks.evaluateTypeof.for(\"require.amd\").tap(\"AMDPlugin\", ParserHelpers.evaluateToString(typeof amdOptions));\n        parser.hooks.evaluateIdentifier.for(\"define.amd\").tap(\"AMDPlugin\", ParserHelpers.evaluateToIdentifier(\"define.amd\", true));\n        parser.hooks.evaluateIdentifier.for(\"require.amd\").tap(\"AMDPlugin\", ParserHelpers.evaluateToIdentifier(\"require.amd\", true));\n        parser.hooks.typeof.for(\"define\").tap(\"AMDPlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"define\").tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n        parser.hooks.canRename.for(\"define\").tap(\"AMDPlugin\", ParserHelpers.approve);\n        parser.hooks.rename.for(\"define\").tap(\"AMDPlugin\", expr => {\n          const dep = new AMDRequireItemDependency(\"!!webpack amd define\", expr.range);\n          dep.userRequest = \"define\";\n          dep.loc = expr.loc;\n          parser.state.current.addDependency(dep);\n          return false;\n        });\n        parser.hooks.typeof.for(\"require\").tap(\"AMDPlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"require\").tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"AMDPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"AMDPlugin\", handler);\n    });\n    compiler.hooks.afterResolvers.tap(\"AMDPlugin\", () => {\n      compiler.resolverFactory.hooks.resolver.for(\"normal\").tap(\"AMDPlugin\", resolver => {\n        new AliasPlugin(\"described-resolve\", {\n          name: \"amdefine\",\n          alias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-define.js\")\n        }, \"resolve\").apply(resolver);\n        new AliasPlugin(\"described-resolve\", {\n          name: \"webpack amd options\",\n          alias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-options.js\")\n        }, \"resolve\").apply(resolver);\n        new AliasPlugin(\"described-resolve\", {\n          name: \"webpack amd define\",\n          alias: path.join(__dirname, \"..\", \"..\", \"buildin\", \"amd-define.js\")\n        }, \"resolve\").apply(resolver);\n      });\n    });\n  }\n}\nmodule.exports = AMDPlugin;","map":{"version":3,"names":["path","require","AMDRequireDependency","AMDRequireItemDependency","AMDRequireArrayDependency","AMDRequireContextDependency","AMDDefineDependency","UnsupportedDependency","LocalModuleDependency","NullFactory","AMDRequireDependenciesBlockParserPlugin","AMDDefineDependencyParserPlugin","AliasPlugin","ParserHelpers","AMDPlugin","constructor","options","amdOptions","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","amd","undefined","setExpressionToModule","outerExpr","module","expression","for","expr","dep","range","userRequest","loc","state","current","addDependency","addVariable","JSON","stringify","evaluateTypeof","evaluateToString","evaluateIdentifier","evaluateToIdentifier","typeof","toConstantDependency","canRename","approve","rename","afterResolvers","resolverFactory","resolver","name","alias","join","__dirname","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/dependencies/AMDPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\n\nconst AliasPlugin = require(\"enhanced-resolve/lib/AliasPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass AMDPlugin {\n\tconstructor(options, amdOptions) {\n\t\tthis.amdOptions = amdOptions;\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst amdOptions = this.amdOptions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AMDPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew AMDRequireDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnew AMDRequireItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew AMDRequireArrayDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tnew AMDRequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew AMDDefineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew UnsupportedDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew LocalModuleDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.amd !== undefined && !parserOptions.amd) return;\n\n\t\t\t\t\tconst setExpressionToModule = (outerExpr, module) => {\n\t\t\t\t\t\tparser.hooks.expression.for(outerExpr).tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\t\tconst dep = new AMDRequireItemDependency(module, expr.range);\n\t\t\t\t\t\t\tdep.userRequest = outerExpr;\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tnew AMDRequireDependenciesBlockParserPlugin(options).apply(parser);\n\t\t\t\t\tnew AMDDefineDependencyParserPlugin(options).apply(parser);\n\n\t\t\t\t\tsetExpressionToModule(\"require.amd\", \"!!webpack amd options\");\n\t\t\t\t\tsetExpressionToModule(\"define.amd\", \"!!webpack amd options\");\n\t\t\t\t\tsetExpressionToModule(\"define\", \"!!webpack amd define\");\n\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"__webpack_amd_options__\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", () =>\n\t\t\t\t\t\t\tparser.state.current.addVariable(\n\t\t\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t\t\tJSON.stringify(amdOptions)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(typeof amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(typeof amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"define.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(\"define.amd\", true)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"require.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(\"require.amd\", true)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.approve);\n\t\t\t\t\tparser.hooks.rename.for(\"define\").tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\tconst dep = new AMDRequireItemDependency(\n\t\t\t\t\t\t\t\"!!webpack amd define\",\n\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.userRequest = \"define\";\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.afterResolvers.tap(\"AMDPlugin\", () => {\n\t\t\tcompiler.resolverFactory.hooks.resolver\n\t\t\t\t.for(\"normal\")\n\t\t\t\t.tap(\"AMDPlugin\", resolver => {\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"amdefine\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-define.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"webpack amd options\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-options.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"webpack amd define\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-define.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = AMDPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}