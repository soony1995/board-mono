{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource,\n  OriginalSource\n} = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n  const accessors = Array.isArray(accessor) ? accessor : [accessor];\n  return accessors.map((_, idx) => {\n    const a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n    if (idx === 0 && base === undefined) return `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n    return `${a} = ${a} || {}`;\n  }).join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdMainTemplatePluginName */\n\n/**\n * @typedef {Object} AuxiliaryCommentObject\n * @property {string} root\n * @property {string} commonjs\n * @property {string} commonjs2\n * @property {string} amd\n */\n\n/**\n * @typedef {Object} UmdMainTemplatePluginOption\n * @property {boolean=} optionalAmdExternalAsGlobal\n * @property {boolean} namedDefine\n * @property {string | AuxiliaryCommentObject} auxiliaryComment\n */\n\nclass UmdMainTemplatePlugin {\n  /**\n   * @param {UmdMainTemplatePluginName} name the name of the UMD library\n   * @param {UmdMainTemplatePluginOption} options the plugin option\n   */\n  constructor(name, options) {\n    if (typeof name === \"object\" && !Array.isArray(name)) {\n      this.name = name.root || name.amd || name.commonjs;\n      this.names = name;\n    } else {\n      this.name = name;\n      this.names = {\n        commonjs: name,\n        root: name,\n        amd: name\n      };\n    }\n    this.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n    this.namedDefine = options.namedDefine;\n    this.auxiliaryComment = options.auxiliaryComment;\n  }\n\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n  apply(compilation) {\n    const {\n      mainTemplate,\n      chunkTemplate,\n      runtimeTemplate\n    } = compilation;\n    const onRenderWithEntry = (source, chunk, hash) => {\n      let externals = chunk.getModules().filter(m => m.external && (m.externalType === \"umd\" || m.externalType === \"umd2\"));\n      const optionalExternals = [];\n      let requiredExternals = [];\n      if (this.optionalAmdExternalAsGlobal) {\n        for (const m of externals) {\n          if (m.optional) {\n            optionalExternals.push(m);\n          } else {\n            requiredExternals.push(m);\n          }\n        }\n        externals = requiredExternals.concat(optionalExternals);\n      } else {\n        requiredExternals = externals;\n      }\n      const replaceKeys = str => {\n        return mainTemplate.getAssetPath(str, {\n          hash,\n          chunk\n        });\n      };\n      const externalsDepsArray = modules => {\n        return `[${replaceKeys(modules.map(m => JSON.stringify(typeof m.request === \"object\" ? m.request.amd : m.request)).join(\", \"))}]`;\n      };\n      const externalsRootArray = modules => {\n        return replaceKeys(modules.map(m => {\n          let request = m.request;\n          if (typeof request === \"object\") request = request.root;\n          return `root${accessorToObjectAccess([].concat(request))}`;\n        }).join(\", \"));\n      };\n      const externalsRequireArray = type => {\n        return replaceKeys(externals.map(m => {\n          let expr;\n          let request = m.request;\n          if (typeof request === \"object\") {\n            request = request[type];\n          }\n          if (request === undefined) {\n            throw new Error(\"Missing external configuration for type:\" + type);\n          }\n          if (Array.isArray(request)) {\n            expr = `require(${JSON.stringify(request[0])})${accessorToObjectAccess(request.slice(1))}`;\n          } else {\n            expr = `require(${JSON.stringify(request)})`;\n          }\n          if (m.optional) {\n            expr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n          }\n          return expr;\n        }).join(\", \"));\n      };\n      const externalsArguments = modules => {\n        return modules.map(m => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`).join(\", \");\n      };\n      const libraryName = library => {\n        return JSON.stringify(replaceKeys([].concat(library).pop()));\n      };\n      let amdFactory;\n      if (optionalExternals.length > 0) {\n        const wrapperArguments = externalsArguments(requiredExternals);\n        const factoryArguments = requiredExternals.length > 0 ? externalsArguments(requiredExternals) + \", \" + externalsRootArray(optionalExternals) : externalsRootArray(optionalExternals);\n        amdFactory = `function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` + `\t\t\treturn factory(${factoryArguments});\\n` + \"\t\t}\";\n      } else {\n        amdFactory = \"factory\";\n      }\n      const auxiliaryComment = this.auxiliaryComment;\n      const getAuxilaryComment = type => {\n        if (auxiliaryComment) {\n          if (typeof auxiliaryComment === \"string\") return \"\\t//\" + auxiliaryComment + \"\\n\";\n          if (auxiliaryComment[type]) return \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n        }\n        return \"\";\n      };\n      return new ConcatSource(new OriginalSource(\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" + getAuxilaryComment(\"commonjs2\") + \"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" + \"\t\tmodule.exports = factory(\" + externalsRequireArray(\"commonjs2\") + \");\\n\" + getAuxilaryComment(\"amd\") + \"\telse if(typeof define === 'function' && define.amd)\\n\" + (requiredExternals.length > 0 ? this.names.amd && this.namedDefine === true ? \"\t\tdefine(\" + libraryName(this.names.amd) + \", \" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : \"\t\tdefine(\" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : this.names.amd && this.namedDefine === true ? \"\t\tdefine(\" + libraryName(this.names.amd) + \", [], \" + amdFactory + \");\\n\" : \"\t\tdefine([], \" + amdFactory + \");\\n\") + (this.names.root || this.names.commonjs ? getAuxilaryComment(\"commonjs\") + \"\telse if(typeof exports === 'object')\\n\" + \"\t\texports[\" + libraryName(this.names.commonjs || this.names.root) + \"] = factory(\" + externalsRequireArray(\"commonjs\") + \");\\n\" + getAuxilaryComment(\"root\") + \"\telse\\n\" + \"\t\t\" + replaceKeys(accessorAccess(\"root\", this.names.root || this.names.commonjs)) + \" = factory(\" + externalsRootArray(externals) + \");\\n\" : \"\telse {\\n\" + (externals.length > 0 ? \"\t\tvar a = typeof exports === 'object' ? factory(\" + externalsRequireArray(\"commonjs\") + \") : factory(\" + externalsRootArray(externals) + \");\\n\" : \"\t\tvar a = factory();\\n\") + \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" + \"\t}\\n\") + `})(${runtimeTemplate.outputOptions.globalObject}, function(${externalsArguments(externals)}) {\\nreturn `, \"webpack/universalModuleDefinition\"), source, \";\\n})\");\n    };\n    for (const template of [mainTemplate, chunkTemplate]) {\n      template.hooks.renderWithEntry.tap(\"UmdMainTemplatePlugin\", onRenderWithEntry);\n    }\n    mainTemplate.hooks.globalHashPaths.tap(\"UmdMainTemplatePlugin\", paths => {\n      if (this.names.root) paths = paths.concat(this.names.root);\n      if (this.names.amd) paths = paths.concat(this.names.amd);\n      if (this.names.commonjs) paths = paths.concat(this.names.commonjs);\n      return paths;\n    });\n    mainTemplate.hooks.hash.tap(\"UmdMainTemplatePlugin\", hash => {\n      hash.update(\"umd\");\n      hash.update(`${this.names.root}`);\n      hash.update(`${this.names.amd}`);\n      hash.update(`${this.names.commonjs}`);\n    });\n  }\n}\nmodule.exports = UmdMainTemplatePlugin;","map":{"version":3,"names":["ConcatSource","OriginalSource","require","Template","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","joinWith","accessors","Array","isArray","_","idx","slice","length","undefined","UmdMainTemplatePlugin","constructor","name","options","root","amd","commonjs","names","optionalAmdExternalAsGlobal","namedDefine","auxiliaryComment","apply","compilation","mainTemplate","chunkTemplate","runtimeTemplate","onRenderWithEntry","source","chunk","hash","externals","getModules","filter","m","external","externalType","optionalExternals","requiredExternals","optional","push","concat","replaceKeys","str","getAssetPath","externalsDepsArray","modules","request","externalsRootArray","externalsRequireArray","type","expr","Error","externalsArguments","toIdentifier","id","libraryName","library","pop","amdFactory","wrapperArguments","factoryArguments","getAuxilaryComment","outputOptions","globalObject","template","hooks","renderWithEntry","tap","globalHashPaths","paths","update","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/UmdMainTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource, OriginalSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n\tconst accessors = Array.isArray(accessor) ? accessor : [accessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined)\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdMainTemplatePluginName */\n\n/**\n * @typedef {Object} AuxiliaryCommentObject\n * @property {string} root\n * @property {string} commonjs\n * @property {string} commonjs2\n * @property {string} amd\n */\n\n/**\n * @typedef {Object} UmdMainTemplatePluginOption\n * @property {boolean=} optionalAmdExternalAsGlobal\n * @property {boolean} namedDefine\n * @property {string | AuxiliaryCommentObject} auxiliaryComment\n */\n\nclass UmdMainTemplatePlugin {\n\t/**\n\t * @param {UmdMainTemplatePluginName} name the name of the UMD library\n\t * @param {UmdMainTemplatePluginOption} options the plugin option\n\t */\n\tconstructor(name, options) {\n\t\tif (typeof name === \"object\" && !Array.isArray(name)) {\n\t\t\tthis.name = name.root || name.amd || name.commonjs;\n\t\t\tthis.names = name;\n\t\t} else {\n\t\t\tthis.name = name;\n\t\t\tthis.names = {\n\t\t\t\tcommonjs: name,\n\t\t\t\troot: name,\n\t\t\t\tamd: name\n\t\t\t};\n\t\t}\n\t\tthis.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n\t\tthis.namedDefine = options.namedDefine;\n\t\tthis.auxiliaryComment = options.auxiliaryComment;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate, runtimeTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tlet externals = chunk\n\t\t\t\t.getModules()\n\t\t\t\t.filter(\n\t\t\t\t\tm =>\n\t\t\t\t\t\tm.external &&\n\t\t\t\t\t\t(m.externalType === \"umd\" || m.externalType === \"umd2\")\n\t\t\t\t);\n\t\t\tconst optionalExternals = [];\n\t\t\tlet requiredExternals = [];\n\t\t\tif (this.optionalAmdExternalAsGlobal) {\n\t\t\t\tfor (const m of externals) {\n\t\t\t\t\tif (m.optional) {\n\t\t\t\t\t\toptionalExternals.push(m);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequiredExternals.push(m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texternals = requiredExternals.concat(optionalExternals);\n\t\t\t} else {\n\t\t\t\trequiredExternals = externals;\n\t\t\t}\n\n\t\t\tconst replaceKeys = str => {\n\t\t\t\treturn mainTemplate.getAssetPath(str, {\n\t\t\t\t\thash,\n\t\t\t\t\tchunk\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst externalsDepsArray = modules => {\n\t\t\t\treturn `[${replaceKeys(\n\t\t\t\t\tmodules\n\t\t\t\t\t\t.map(m =>\n\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t)}]`;\n\t\t\t};\n\n\t\t\tconst externalsRootArray = modules => {\n\t\t\t\treturn replaceKeys(\n\t\t\t\t\tmodules\n\t\t\t\t\t\t.map(m => {\n\t\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\t\tif (typeof request === \"object\") request = request.root;\n\t\t\t\t\t\t\treturn `root${accessorToObjectAccess([].concat(request))}`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst externalsRequireArray = type => {\n\t\t\t\treturn replaceKeys(\n\t\t\t\t\texternals\n\t\t\t\t\t\t.map(m => {\n\t\t\t\t\t\t\tlet expr;\n\t\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\t\tif (typeof request === \"object\") {\n\t\t\t\t\t\t\t\trequest = request[type];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (request === undefined) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Missing external configuration for type:\" + type\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\t\t\texpr = `require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\trequest[0]\n\t\t\t\t\t\t\t\t)})${accessorToObjectAccess(request.slice(1))}`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\texpr = `require(${JSON.stringify(request)})`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m.optional) {\n\t\t\t\t\t\t\t\texpr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn expr;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst externalsArguments = modules => {\n\t\t\t\treturn modules\n\t\t\t\t\t.map(\n\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t`__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`\n\t\t\t\t\t)\n\t\t\t\t\t.join(\", \");\n\t\t\t};\n\n\t\t\tconst libraryName = library => {\n\t\t\t\treturn JSON.stringify(replaceKeys([].concat(library).pop()));\n\t\t\t};\n\n\t\t\tlet amdFactory;\n\t\t\tif (optionalExternals.length > 0) {\n\t\t\t\tconst wrapperArguments = externalsArguments(requiredExternals);\n\t\t\t\tconst factoryArguments =\n\t\t\t\t\trequiredExternals.length > 0\n\t\t\t\t\t\t? externalsArguments(requiredExternals) +\n\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t  externalsRootArray(optionalExternals)\n\t\t\t\t\t\t: externalsRootArray(optionalExternals);\n\t\t\t\tamdFactory =\n\t\t\t\t\t`function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` +\n\t\t\t\t\t`\t\t\treturn factory(${factoryArguments});\\n` +\n\t\t\t\t\t\"\t\t}\";\n\t\t\t} else {\n\t\t\t\tamdFactory = \"factory\";\n\t\t\t}\n\n\t\t\tconst auxiliaryComment = this.auxiliaryComment;\n\n\t\t\tconst getAuxilaryComment = type => {\n\t\t\t\tif (auxiliaryComment) {\n\t\t\t\t\tif (typeof auxiliaryComment === \"string\")\n\t\t\t\t\t\treturn \"\\t//\" + auxiliaryComment + \"\\n\";\n\t\t\t\t\tif (auxiliaryComment[type])\n\t\t\t\t\t\treturn \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n\t\t\t\t}\n\t\t\t\treturn \"\";\n\t\t\t};\n\n\t\t\treturn new ConcatSource(\n\t\t\t\tnew OriginalSource(\n\t\t\t\t\t\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" +\n\t\t\t\t\t\tgetAuxilaryComment(\"commonjs2\") +\n\t\t\t\t\t\t\"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" +\n\t\t\t\t\t\t\"\t\tmodule.exports = factory(\" +\n\t\t\t\t\t\texternalsRequireArray(\"commonjs2\") +\n\t\t\t\t\t\t\");\\n\" +\n\t\t\t\t\t\tgetAuxilaryComment(\"amd\") +\n\t\t\t\t\t\t\"\telse if(typeof define === 'function' && define.amd)\\n\" +\n\t\t\t\t\t\t(requiredExternals.length > 0\n\t\t\t\t\t\t\t? this.names.amd && this.namedDefine === true\n\t\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\t  libraryName(this.names.amd) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t\t: \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: this.names.amd && this.namedDefine === true\n\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t  libraryName(this.names.amd) +\n\t\t\t\t\t\t\t  \", [], \" +\n\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: \"\t\tdefine([], \" + amdFactory + \");\\n\") +\n\t\t\t\t\t\t(this.names.root || this.names.commonjs\n\t\t\t\t\t\t\t? getAuxilaryComment(\"commonjs\") +\n\t\t\t\t\t\t\t  \"\telse if(typeof exports === 'object')\\n\" +\n\t\t\t\t\t\t\t  \"\t\texports[\" +\n\t\t\t\t\t\t\t  libraryName(this.names.commonjs || this.names.root) +\n\t\t\t\t\t\t\t  \"] = factory(\" +\n\t\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t  \");\\n\" +\n\t\t\t\t\t\t\t  getAuxilaryComment(\"root\") +\n\t\t\t\t\t\t\t  \"\telse\\n\" +\n\t\t\t\t\t\t\t  \"\t\t\" +\n\t\t\t\t\t\t\t  replaceKeys(\n\t\t\t\t\t\t\t\t\taccessorAccess(\"root\", this.names.root || this.names.commonjs)\n\t\t\t\t\t\t\t  ) +\n\t\t\t\t\t\t\t  \" = factory(\" +\n\t\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: \"\telse {\\n\" +\n\t\t\t\t\t\t\t  (externals.length > 0\n\t\t\t\t\t\t\t\t\t? \"\t\tvar a = typeof exports === 'object' ? factory(\" +\n\t\t\t\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t\t\t  \") : factory(\" +\n\t\t\t\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t\t\t: \"\t\tvar a = factory();\\n\") +\n\t\t\t\t\t\t\t  \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" +\n\t\t\t\t\t\t\t  \"\t}\\n\") +\n\t\t\t\t\t\t`})(${\n\t\t\t\t\t\t\truntimeTemplate.outputOptions.globalObject\n\t\t\t\t\t\t}, function(${externalsArguments(externals)}) {\\nreturn `,\n\t\t\t\t\t\"webpack/universalModuleDefinition\"\n\t\t\t\t),\n\t\t\t\tsource,\n\t\t\t\t\";\\n})\"\n\t\t\t);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"UmdMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\"UmdMainTemplatePlugin\", paths => {\n\t\t\tif (this.names.root) paths = paths.concat(this.names.root);\n\t\t\tif (this.names.amd) paths = paths.concat(this.names.amd);\n\t\t\tif (this.names.commonjs) paths = paths.concat(this.names.commonjs);\n\t\t\treturn paths;\n\t\t});\n\n\t\tmainTemplate.hooks.hash.tap(\"UmdMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"umd\");\n\t\t\thash.update(`${this.names.root}`);\n\t\t\thash.update(`${this.names.amd}`);\n\t\t\thash.update(`${this.names.commonjs}`);\n\t\t});\n\t}\n}\n\nmodule.exports = UmdMainTemplatePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}