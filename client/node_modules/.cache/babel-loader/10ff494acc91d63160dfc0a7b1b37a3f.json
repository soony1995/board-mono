{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\nclass EvalSourceMapDevToolPlugin {\n  constructor(options) {\n    if (arguments.length > 1) {\n      throw new Error(\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\");\n    }\n    if (typeof options === \"string\") {\n      options = {\n        append: options\n      };\n    }\n    if (!options) options = {};\n    this.options = options;\n  }\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"EvalSourceMapDevToolPlugin\", compilation => {\n      new SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n      new EvalSourceMapDevToolModuleTemplatePlugin(compilation, options).apply(compilation.moduleTemplates.javascript);\n    });\n  }\n}\nmodule.exports = EvalSourceMapDevToolPlugin;","map":{"version":3,"names":["EvalSourceMapDevToolModuleTemplatePlugin","require","SourceMapDevToolModuleOptionsPlugin","EvalSourceMapDevToolPlugin","constructor","options","arguments","length","Error","append","apply","compiler","hooks","compilation","tap","moduleTemplates","javascript","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/EvalSourceMapDevToolPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nclass EvalSourceMapDevToolPlugin {\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = {\n\t\t\t\tappend: options\n\t\t\t};\n\t\t}\n\t\tif (!options) options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\t\t\t\tnew EvalSourceMapDevToolModuleTemplatePlugin(\n\t\t\t\t\tcompilation,\n\t\t\t\t\toptions\n\t\t\t\t).apply(compilation.moduleTemplates.javascript);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,wCAAwC,GAAGC,OAAO,CAAC,4CAA4C,CAAC;AACtG,MAAMC,mCAAmC,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AAE5F,MAAME,0BAA0B,CAAC;EAChCC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MACzB,MAAM,IAAIC,KAAK,CACd,6EACD,CAAC;IACF;IACA,IAAI,OAAOH,OAAO,KAAK,QAAQ,EAAE;MAChCA,OAAO,GAAG;QACTI,MAAM,EAAEJ;MACT,CAAC;IACF;IACA,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAEAK,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMN,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5BM,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,4BAA4B,EAC5BD,WAAW,IAAI;MACd,IAAIX,mCAAmC,CAACG,OAAO,CAAC,CAACK,KAAK,CAACG,WAAW,CAAC;MACnE,IAAIb,wCAAwC,CAC3Ca,WAAW,EACXR,OACD,CAAC,CAACK,KAAK,CAACG,WAAW,CAACE,eAAe,CAACC,UAAU,CAAC;IAChD,CACD,CAAC;EACF;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGf,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"script"}