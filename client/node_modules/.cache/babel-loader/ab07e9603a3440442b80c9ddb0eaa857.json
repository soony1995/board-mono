{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _sliceIterator(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _slicedToArray(arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    return _sliceIterator(arr, i);\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n}\nimport { isAnonymous, isInstruction } from \"@webassemblyjs/ast\";\nimport Long from \"@xtuc/long\";\nvar compact = false;\nvar space = \" \";\nvar quote = function quote(str) {\n  return \"\\\"\".concat(str, \"\\\"\");\n};\nfunction indent(nb) {\n  return Array(nb).fill(space + space).join(\"\");\n} // TODO(sven): allow arbitrary ast nodes\n\nexport function print(n) {\n  if (n.type === \"Program\") {\n    return printProgram(n, 0);\n  } else {\n    throw new Error(\"Unsupported node in print of type: \" + String(n.type));\n  }\n}\nfunction printProgram(n, depth) {\n  return n.body.reduce(function (acc, child) {\n    if (child.type === \"Module\") {\n      acc += printModule(child, depth + 1);\n    }\n    if (child.type === \"Func\") {\n      acc += printFunc(child, depth + 1);\n    }\n    if (child.type === \"BlockComment\") {\n      acc += printBlockComment(child);\n    }\n    if (child.type === \"LeadingComment\") {\n      acc += printLeadingComment(child);\n    }\n    if (compact === false) {\n      acc += \"\\n\";\n    }\n    return acc;\n  }, \"\");\n}\nfunction printTypeInstruction(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"type\";\n  out += space;\n  if (n.id != null) {\n    out += printIndex(n.id);\n    out += space;\n  }\n  out += \"(\";\n  out += \"func\";\n  n.functype.params.forEach(function (param) {\n    out += space;\n    out += \"(\";\n    out += \"param\";\n    out += space;\n    out += printFuncParam(param);\n    out += \")\";\n  });\n  n.functype.results.forEach(function (result) {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += result;\n    out += \")\";\n  });\n  out += \")\"; // func\n\n  out += \")\";\n  return out;\n}\nfunction printModule(n, depth) {\n  var out = \"(\";\n  out += \"module\";\n  if (typeof n.id === \"string\") {\n    out += space;\n    out += n.id;\n  }\n  if (compact === false) {\n    out += \"\\n\";\n  } else {\n    out += space;\n  }\n  n.fields.forEach(function (field) {\n    if (compact === false) {\n      out += indent(depth);\n    }\n    switch (field.type) {\n      case \"Func\":\n        {\n          out += printFunc(field, depth + 1);\n          break;\n        }\n      case \"TypeInstruction\":\n        {\n          out += printTypeInstruction(field);\n          break;\n        }\n      case \"Table\":\n        {\n          out += printTable(field);\n          break;\n        }\n      case \"Global\":\n        {\n          out += printGlobal(field, depth + 1);\n          break;\n        }\n      case \"ModuleExport\":\n        {\n          out += printModuleExport(field);\n          break;\n        }\n      case \"ModuleImport\":\n        {\n          out += printModuleImport(field);\n          break;\n        }\n      case \"Memory\":\n        {\n          out += printMemory(field);\n          break;\n        }\n      case \"BlockComment\":\n        {\n          out += printBlockComment(field);\n          break;\n        }\n      case \"LeadingComment\":\n        {\n          out += printLeadingComment(field);\n          break;\n        }\n      case \"Start\":\n        {\n          out += printStart(field);\n          break;\n        }\n      case \"Elem\":\n        {\n          out += printElem(field, depth);\n          break;\n        }\n      case \"Data\":\n        {\n          out += printData(field, depth);\n          break;\n        }\n      default:\n        throw new Error(\"Unsupported node in printModule: \" + String(field.type));\n    }\n    if (compact === false) {\n      out += \"\\n\";\n    }\n  });\n  out += \")\";\n  return out;\n}\nfunction printData(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"data\";\n  out += space;\n  out += printIndex(n.memoryIndex);\n  out += space;\n  out += printInstruction(n.offset, depth);\n  out += space;\n  out += '\"';\n  n.init.values.forEach(function (byte) {\n    // Avoid non-displayable characters\n    if (byte <= 31 || byte == 34 || byte == 92 || byte >= 127) {\n      out += \"\\\\\";\n      out += (\"00\" + byte.toString(16)).substr(-2);\n    } else if (byte > 255) {\n      throw new Error(\"Unsupported byte in data segment: \" + byte);\n    } else {\n      out += String.fromCharCode(byte);\n    }\n  });\n  out += '\"';\n  out += \")\";\n  return out;\n}\nfunction printElem(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"elem\";\n  out += space;\n  out += printIndex(n.table);\n  var _n$offset = _slicedToArray(n.offset, 1),\n    firstOffset = _n$offset[0];\n  out += space;\n  out += \"(\";\n  out += \"offset\";\n  out += space;\n  out += printInstruction(firstOffset, depth);\n  out += \")\";\n  n.funcs.forEach(function (func) {\n    out += space;\n    out += printIndex(func);\n  });\n  out += \")\";\n  return out;\n}\nfunction printStart(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"start\";\n  out += space;\n  out += printIndex(n.index);\n  out += \")\";\n  return out;\n}\nfunction printLeadingComment(n) {\n  // Don't print leading comments in compact mode\n  if (compact === true) {\n    return \"\";\n  }\n  var out = \"\";\n  out += \";;\";\n  out += n.value;\n  out += \"\\n\";\n  return out;\n}\nfunction printBlockComment(n) {\n  // Don't print block comments in compact mode\n  if (compact === true) {\n    return \"\";\n  }\n  var out = \"\";\n  out += \"(;\";\n  out += n.value;\n  out += \";)\";\n  out += \"\\n\";\n  return out;\n}\nfunction printSignature(n) {\n  var out = \"\";\n  n.params.forEach(function (param) {\n    out += space;\n    out += \"(\";\n    out += \"param\";\n    out += space;\n    out += printFuncParam(param);\n    out += \")\";\n  });\n  n.results.forEach(function (result) {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += result;\n    out += \")\";\n  });\n  return out;\n}\nfunction printModuleImportDescr(n) {\n  var out = \"\";\n  if (n.type === \"FuncImportDescr\") {\n    out += \"(\";\n    out += \"func\";\n    if (isAnonymous(n.id) === false) {\n      out += space;\n      out += printIdentifier(n.id);\n    }\n    out += printSignature(n.signature);\n    out += \")\";\n  }\n  if (n.type === \"GlobalType\") {\n    out += \"(\";\n    out += \"global\";\n    out += space;\n    out += printGlobalType(n);\n    out += \")\";\n  }\n  if (n.type === \"Table\") {\n    out += printTable(n);\n  }\n  return out;\n}\nfunction printModuleImport(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"import\";\n  out += space;\n  out += quote(n.module);\n  out += space;\n  out += quote(n.name);\n  out += space;\n  out += printModuleImportDescr(n.descr);\n  out += \")\";\n  return out;\n}\nfunction printGlobalType(n) {\n  var out = \"\";\n  if (n.mutability === \"var\") {\n    out += \"(\";\n    out += \"mut\";\n    out += space;\n    out += n.valtype;\n    out += \")\";\n  } else {\n    out += n.valtype;\n  }\n  return out;\n}\nfunction printGlobal(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"global\";\n  out += space;\n  if (n.name != null && isAnonymous(n.name) === false) {\n    out += printIdentifier(n.name);\n    out += space;\n  }\n  out += printGlobalType(n.globalType);\n  out += space;\n  n.init.forEach(function (i) {\n    out += printInstruction(i, depth + 1);\n  });\n  out += \")\";\n  return out;\n}\nfunction printTable(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"table\";\n  out += space;\n  if (n.name != null && isAnonymous(n.name) === false) {\n    out += printIdentifier(n.name);\n    out += space;\n  }\n  out += printLimit(n.limits);\n  out += space;\n  out += n.elementType;\n  out += \")\";\n  return out;\n}\nfunction printFuncParam(n) {\n  var out = \"\";\n  if (typeof n.id === \"string\") {\n    out += \"$\" + n.id;\n    out += space;\n  }\n  out += n.valtype;\n  return out;\n}\nfunction printFunc(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"func\";\n  if (n.name != null) {\n    if (n.name.type === \"Identifier\" && isAnonymous(n.name) === false) {\n      out += space;\n      out += printIdentifier(n.name);\n    }\n  }\n  if (n.signature.type === \"Signature\") {\n    out += printSignature(n.signature);\n  } else {\n    var index = n.signature;\n    out += space;\n    out += \"(\";\n    out += \"type\";\n    out += space;\n    out += printIndex(index);\n    out += \")\";\n  }\n  if (n.body.length > 0) {\n    // func is empty since we ignore the default end instruction\n    if (n.body.length === 1 && n.body[0].id === \"end\") {\n      out += \")\";\n      return out;\n    }\n    if (compact === false) {\n      out += \"\\n\";\n    }\n    n.body.forEach(function (i) {\n      if (i.id !== \"end\") {\n        out += indent(depth);\n        out += printInstruction(i, depth);\n        if (compact === false) {\n          out += \"\\n\";\n        }\n      }\n    });\n    out += indent(depth - 1) + \")\";\n  } else {\n    out += \")\";\n  }\n  return out;\n}\nfunction printInstruction(n, depth) {\n  switch (n.type) {\n    case \"Instr\":\n      // $FlowIgnore\n      return printGenericInstruction(n, depth + 1);\n    case \"BlockInstruction\":\n      // $FlowIgnore\n      return printBlockInstruction(n, depth + 1);\n    case \"IfInstruction\":\n      // $FlowIgnore\n      return printIfInstruction(n, depth + 1);\n    case \"CallInstruction\":\n      // $FlowIgnore\n      return printCallInstruction(n, depth + 1);\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore\n      return printCallIndirectIntruction(n, depth + 1);\n    case \"LoopInstruction\":\n      // $FlowIgnore\n      return printLoopInstruction(n, depth + 1);\n    default:\n      throw new Error(\"Unsupported instruction: \" + JSON.stringify(n.type));\n  }\n}\nfunction printCallIndirectIntruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"call_indirect\";\n  if (n.signature.type === \"Signature\") {\n    out += printSignature(n.signature);\n  } else if (n.signature.type === \"Identifier\") {\n    out += space;\n    out += \"(\";\n    out += \"type\";\n    out += space;\n    out += printIdentifier(n.signature);\n    out += \")\";\n  } else {\n    throw new Error(\"CallIndirectInstruction: unsupported signature \" + JSON.stringify(n.signature.type));\n  }\n  out += space;\n  if (n.intrs != null) {\n    // $FlowIgnore\n    n.intrs.forEach(function (i, index) {\n      // $FlowIgnore\n      out += printInstruction(i, depth + 1); // $FlowIgnore\n\n      if (index !== n.intrs.length - 1) {\n        out += space;\n      }\n    });\n  }\n  out += \")\";\n  return out;\n}\nfunction printLoopInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"loop\";\n  if (n.label != null && isAnonymous(n.label) === false) {\n    out += space;\n    out += printIdentifier(n.label);\n  }\n  if (typeof n.resulttype === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.resulttype;\n    out += \")\";\n  }\n  if (n.instr.length > 0) {\n    n.instr.forEach(function (e) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n      out += indent(depth);\n      out += printInstruction(e, depth + 1);\n    });\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth - 1);\n    }\n  }\n  out += \")\";\n  return out;\n}\nfunction printCallInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"call\";\n  out += space;\n  out += printIndex(n.index);\n  if (_typeof(n.instrArgs) === \"object\") {\n    // $FlowIgnore\n    n.instrArgs.forEach(function (arg) {\n      out += space;\n      out += printFuncInstructionArg(arg, depth + 1);\n    });\n  }\n  out += \")\";\n  return out;\n}\nfunction printIfInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"if\";\n  if (n.testLabel != null && isAnonymous(n.testLabel) === false) {\n    out += space;\n    out += printIdentifier(n.testLabel);\n  }\n  if (typeof n.result === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.result;\n    out += \")\";\n  }\n  if (n.test.length > 0) {\n    out += space;\n    n.test.forEach(function (i) {\n      out += printInstruction(i, depth + 1);\n    });\n  }\n  if (n.consequent.length > 0) {\n    if (compact === false) {\n      out += \"\\n\";\n    }\n    out += indent(depth);\n    out += \"(\";\n    out += \"then\";\n    depth++;\n    n.consequent.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n    depth--;\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n    out += \")\";\n  } else {\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n    out += \"(\";\n    out += \"then\";\n    out += \")\";\n  }\n  if (n.alternate.length > 0) {\n    if (compact === false) {\n      out += \"\\n\";\n    }\n    out += indent(depth);\n    out += \"(\";\n    out += \"else\";\n    depth++;\n    n.alternate.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n    depth--;\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n    out += \")\";\n  } else {\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n    out += \"(\";\n    out += \"else\";\n    out += \")\";\n  }\n  if (compact === false) {\n    out += \"\\n\";\n    out += indent(depth - 1);\n  }\n  out += \")\";\n  return out;\n}\nfunction printBlockInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"block\";\n  if (n.label != null && isAnonymous(n.label) === false) {\n    out += space;\n    out += printIdentifier(n.label);\n  }\n  if (typeof n.result === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.result;\n    out += \")\";\n  }\n  if (n.instr.length > 0) {\n    n.instr.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n    if (compact === false) {\n      out += \"\\n\";\n    }\n    out += indent(depth - 1);\n    out += \")\";\n  } else {\n    out += \")\";\n  }\n  return out;\n}\nfunction printGenericInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  if (typeof n.object === \"string\") {\n    out += n.object;\n    out += \".\";\n  }\n  out += n.id;\n  n.args.forEach(function (arg) {\n    out += space;\n    out += printFuncInstructionArg(arg, depth + 1);\n  });\n  out += \")\";\n  return out;\n}\nfunction printLongNumberLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n  var _n$value = n.value,\n    low = _n$value.low,\n    high = _n$value.high;\n  var v = new Long(low, high);\n  return v.toString();\n}\nfunction printFloatLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n  return String(n.value);\n}\nfunction printFuncInstructionArg(n, depth) {\n  var out = \"\";\n  if (n.type === \"NumberLiteral\") {\n    out += printNumberLiteral(n);\n  }\n  if (n.type === \"LongNumberLiteral\") {\n    out += printLongNumberLiteral(n);\n  }\n  if (n.type === \"Identifier\" && isAnonymous(n) === false) {\n    out += printIdentifier(n);\n  }\n  if (n.type === \"ValtypeLiteral\") {\n    out += n.name;\n  }\n  if (n.type === \"FloatLiteral\") {\n    out += printFloatLiteral(n);\n  }\n  if (isInstruction(n)) {\n    out += printInstruction(n, depth + 1);\n  }\n  return out;\n}\nfunction printNumberLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n  return String(n.value);\n}\nfunction printModuleExport(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"export\";\n  out += space;\n  out += quote(n.name);\n  if (n.descr.exportType === \"Func\") {\n    out += space;\n    out += \"(\";\n    out += \"func\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Global\") {\n    out += space;\n    out += \"(\";\n    out += \"global\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Memory\" || n.descr.exportType === \"Mem\") {\n    out += space;\n    out += \"(\";\n    out += \"memory\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Table\") {\n    out += space;\n    out += \"(\";\n    out += \"table\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else {\n    throw new Error(\"printModuleExport: unknown type: \" + n.descr.exportType);\n  }\n  out += \")\";\n  return out;\n}\nfunction printIdentifier(n) {\n  return \"$\" + n.value;\n}\nfunction printIndex(n) {\n  if (n.type === \"Identifier\") {\n    return printIdentifier(n);\n  } else if (n.type === \"NumberLiteral\") {\n    return printNumberLiteral(n);\n  } else {\n    throw new Error(\"Unsupported index: \" + n.type);\n  }\n}\nfunction printMemory(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"memory\";\n  if (n.id != null) {\n    out += space;\n    out += printIndex(n.id);\n    out += space;\n  }\n  out += printLimit(n.limits);\n  out += \")\";\n  return out;\n}\nfunction printLimit(n) {\n  var out = \"\";\n  out += n.min + \"\";\n  if (n.max != null) {\n    out += space;\n    out += String(n.max);\n  }\n  return out;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","_slicedToArray","Array","isArray","Object","TypeError","isAnonymous","isInstruction","Long","compact","space","quote","str","concat","indent","nb","fill","join","print","n","type","printProgram","Error","String","depth","body","reduce","acc","child","printModule","printFunc","printBlockComment","printLeadingComment","printTypeInstruction","out","id","printIndex","functype","params","forEach","param","printFuncParam","results","result","fields","field","printTable","printGlobal","printModuleExport","printModuleImport","printMemory","printStart","printElem","printData","memoryIndex","printInstruction","offset","init","values","byte","toString","substr","fromCharCode","table","_n$offset","firstOffset","funcs","func","index","printSignature","printModuleImportDescr","printIdentifier","signature","printGlobalType","module","name","descr","mutability","valtype","globalType","printLimit","limits","elementType","printGenericInstruction","printBlockInstruction","printIfInstruction","printCallInstruction","printCallIndirectIntruction","printLoopInstruction","JSON","stringify","intrs","label","resulttype","instr","e","instrArgs","arg","printFuncInstructionArg","testLabel","test","consequent","alternate","object","args","printLongNumberLiteral","raw","_n$value","low","high","v","printFloatLiteral","printNumberLiteral","exportType","min","max"],"sources":["/home/soon/bulletin-board/node_modules/@webassemblyjs/wast-printer/esm/index.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nimport { isAnonymous, isInstruction } from \"@webassemblyjs/ast\";\nimport Long from \"@xtuc/long\";\nvar compact = false;\nvar space = \" \";\n\nvar quote = function quote(str) {\n  return \"\\\"\".concat(str, \"\\\"\");\n};\n\nfunction indent(nb) {\n  return Array(nb).fill(space + space).join(\"\");\n} // TODO(sven): allow arbitrary ast nodes\n\n\nexport function print(n) {\n  if (n.type === \"Program\") {\n    return printProgram(n, 0);\n  } else {\n    throw new Error(\"Unsupported node in print of type: \" + String(n.type));\n  }\n}\n\nfunction printProgram(n, depth) {\n  return n.body.reduce(function (acc, child) {\n    if (child.type === \"Module\") {\n      acc += printModule(child, depth + 1);\n    }\n\n    if (child.type === \"Func\") {\n      acc += printFunc(child, depth + 1);\n    }\n\n    if (child.type === \"BlockComment\") {\n      acc += printBlockComment(child);\n    }\n\n    if (child.type === \"LeadingComment\") {\n      acc += printLeadingComment(child);\n    }\n\n    if (compact === false) {\n      acc += \"\\n\";\n    }\n\n    return acc;\n  }, \"\");\n}\n\nfunction printTypeInstruction(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"type\";\n  out += space;\n\n  if (n.id != null) {\n    out += printIndex(n.id);\n    out += space;\n  }\n\n  out += \"(\";\n  out += \"func\";\n  n.functype.params.forEach(function (param) {\n    out += space;\n    out += \"(\";\n    out += \"param\";\n    out += space;\n    out += printFuncParam(param);\n    out += \")\";\n  });\n  n.functype.results.forEach(function (result) {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += result;\n    out += \")\";\n  });\n  out += \")\"; // func\n\n  out += \")\";\n  return out;\n}\n\nfunction printModule(n, depth) {\n  var out = \"(\";\n  out += \"module\";\n\n  if (typeof n.id === \"string\") {\n    out += space;\n    out += n.id;\n  }\n\n  if (compact === false) {\n    out += \"\\n\";\n  } else {\n    out += space;\n  }\n\n  n.fields.forEach(function (field) {\n    if (compact === false) {\n      out += indent(depth);\n    }\n\n    switch (field.type) {\n      case \"Func\":\n        {\n          out += printFunc(field, depth + 1);\n          break;\n        }\n\n      case \"TypeInstruction\":\n        {\n          out += printTypeInstruction(field);\n          break;\n        }\n\n      case \"Table\":\n        {\n          out += printTable(field);\n          break;\n        }\n\n      case \"Global\":\n        {\n          out += printGlobal(field, depth + 1);\n          break;\n        }\n\n      case \"ModuleExport\":\n        {\n          out += printModuleExport(field);\n          break;\n        }\n\n      case \"ModuleImport\":\n        {\n          out += printModuleImport(field);\n          break;\n        }\n\n      case \"Memory\":\n        {\n          out += printMemory(field);\n          break;\n        }\n\n      case \"BlockComment\":\n        {\n          out += printBlockComment(field);\n          break;\n        }\n\n      case \"LeadingComment\":\n        {\n          out += printLeadingComment(field);\n          break;\n        }\n\n      case \"Start\":\n        {\n          out += printStart(field);\n          break;\n        }\n\n      case \"Elem\":\n        {\n          out += printElem(field, depth);\n          break;\n        }\n\n      case \"Data\":\n        {\n          out += printData(field, depth);\n          break;\n        }\n\n      default:\n        throw new Error(\"Unsupported node in printModule: \" + String(field.type));\n    }\n\n    if (compact === false) {\n      out += \"\\n\";\n    }\n  });\n  out += \")\";\n  return out;\n}\n\nfunction printData(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"data\";\n  out += space;\n  out += printIndex(n.memoryIndex);\n  out += space;\n  out += printInstruction(n.offset, depth);\n  out += space;\n  out += '\"';\n  n.init.values.forEach(function (byte) {\n    // Avoid non-displayable characters\n    if (byte <= 31 || byte == 34 || byte == 92 || byte >= 127) {\n      out += \"\\\\\";\n      out += (\"00\" + byte.toString(16)).substr(-2);\n    } else if (byte > 255) {\n      throw new Error(\"Unsupported byte in data segment: \" + byte);\n    } else {\n      out += String.fromCharCode(byte);\n    }\n  });\n  out += '\"';\n  out += \")\";\n  return out;\n}\n\nfunction printElem(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"elem\";\n  out += space;\n  out += printIndex(n.table);\n\n  var _n$offset = _slicedToArray(n.offset, 1),\n      firstOffset = _n$offset[0];\n\n  out += space;\n  out += \"(\";\n  out += \"offset\";\n  out += space;\n  out += printInstruction(firstOffset, depth);\n  out += \")\";\n  n.funcs.forEach(function (func) {\n    out += space;\n    out += printIndex(func);\n  });\n  out += \")\";\n  return out;\n}\n\nfunction printStart(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"start\";\n  out += space;\n  out += printIndex(n.index);\n  out += \")\";\n  return out;\n}\n\nfunction printLeadingComment(n) {\n  // Don't print leading comments in compact mode\n  if (compact === true) {\n    return \"\";\n  }\n\n  var out = \"\";\n  out += \";;\";\n  out += n.value;\n  out += \"\\n\";\n  return out;\n}\n\nfunction printBlockComment(n) {\n  // Don't print block comments in compact mode\n  if (compact === true) {\n    return \"\";\n  }\n\n  var out = \"\";\n  out += \"(;\";\n  out += n.value;\n  out += \";)\";\n  out += \"\\n\";\n  return out;\n}\n\nfunction printSignature(n) {\n  var out = \"\";\n  n.params.forEach(function (param) {\n    out += space;\n    out += \"(\";\n    out += \"param\";\n    out += space;\n    out += printFuncParam(param);\n    out += \")\";\n  });\n  n.results.forEach(function (result) {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += result;\n    out += \")\";\n  });\n  return out;\n}\n\nfunction printModuleImportDescr(n) {\n  var out = \"\";\n\n  if (n.type === \"FuncImportDescr\") {\n    out += \"(\";\n    out += \"func\";\n\n    if (isAnonymous(n.id) === false) {\n      out += space;\n      out += printIdentifier(n.id);\n    }\n\n    out += printSignature(n.signature);\n    out += \")\";\n  }\n\n  if (n.type === \"GlobalType\") {\n    out += \"(\";\n    out += \"global\";\n    out += space;\n    out += printGlobalType(n);\n    out += \")\";\n  }\n\n  if (n.type === \"Table\") {\n    out += printTable(n);\n  }\n\n  return out;\n}\n\nfunction printModuleImport(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"import\";\n  out += space;\n  out += quote(n.module);\n  out += space;\n  out += quote(n.name);\n  out += space;\n  out += printModuleImportDescr(n.descr);\n  out += \")\";\n  return out;\n}\n\nfunction printGlobalType(n) {\n  var out = \"\";\n\n  if (n.mutability === \"var\") {\n    out += \"(\";\n    out += \"mut\";\n    out += space;\n    out += n.valtype;\n    out += \")\";\n  } else {\n    out += n.valtype;\n  }\n\n  return out;\n}\n\nfunction printGlobal(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"global\";\n  out += space;\n\n  if (n.name != null && isAnonymous(n.name) === false) {\n    out += printIdentifier(n.name);\n    out += space;\n  }\n\n  out += printGlobalType(n.globalType);\n  out += space;\n  n.init.forEach(function (i) {\n    out += printInstruction(i, depth + 1);\n  });\n  out += \")\";\n  return out;\n}\n\nfunction printTable(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"table\";\n  out += space;\n\n  if (n.name != null && isAnonymous(n.name) === false) {\n    out += printIdentifier(n.name);\n    out += space;\n  }\n\n  out += printLimit(n.limits);\n  out += space;\n  out += n.elementType;\n  out += \")\";\n  return out;\n}\n\nfunction printFuncParam(n) {\n  var out = \"\";\n\n  if (typeof n.id === \"string\") {\n    out += \"$\" + n.id;\n    out += space;\n  }\n\n  out += n.valtype;\n  return out;\n}\n\nfunction printFunc(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"func\";\n\n  if (n.name != null) {\n    if (n.name.type === \"Identifier\" && isAnonymous(n.name) === false) {\n      out += space;\n      out += printIdentifier(n.name);\n    }\n  }\n\n  if (n.signature.type === \"Signature\") {\n    out += printSignature(n.signature);\n  } else {\n    var index = n.signature;\n    out += space;\n    out += \"(\";\n    out += \"type\";\n    out += space;\n    out += printIndex(index);\n    out += \")\";\n  }\n\n  if (n.body.length > 0) {\n    // func is empty since we ignore the default end instruction\n    if (n.body.length === 1 && n.body[0].id === \"end\") {\n      out += \")\";\n      return out;\n    }\n\n    if (compact === false) {\n      out += \"\\n\";\n    }\n\n    n.body.forEach(function (i) {\n      if (i.id !== \"end\") {\n        out += indent(depth);\n        out += printInstruction(i, depth);\n\n        if (compact === false) {\n          out += \"\\n\";\n        }\n      }\n    });\n    out += indent(depth - 1) + \")\";\n  } else {\n    out += \")\";\n  }\n\n  return out;\n}\n\nfunction printInstruction(n, depth) {\n  switch (n.type) {\n    case \"Instr\":\n      // $FlowIgnore\n      return printGenericInstruction(n, depth + 1);\n\n    case \"BlockInstruction\":\n      // $FlowIgnore\n      return printBlockInstruction(n, depth + 1);\n\n    case \"IfInstruction\":\n      // $FlowIgnore\n      return printIfInstruction(n, depth + 1);\n\n    case \"CallInstruction\":\n      // $FlowIgnore\n      return printCallInstruction(n, depth + 1);\n\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore\n      return printCallIndirectIntruction(n, depth + 1);\n\n    case \"LoopInstruction\":\n      // $FlowIgnore\n      return printLoopInstruction(n, depth + 1);\n\n    default:\n      throw new Error(\"Unsupported instruction: \" + JSON.stringify(n.type));\n  }\n}\n\nfunction printCallIndirectIntruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"call_indirect\";\n\n  if (n.signature.type === \"Signature\") {\n    out += printSignature(n.signature);\n  } else if (n.signature.type === \"Identifier\") {\n    out += space;\n    out += \"(\";\n    out += \"type\";\n    out += space;\n    out += printIdentifier(n.signature);\n    out += \")\";\n  } else {\n    throw new Error(\"CallIndirectInstruction: unsupported signature \" + JSON.stringify(n.signature.type));\n  }\n\n  out += space;\n\n  if (n.intrs != null) {\n    // $FlowIgnore\n    n.intrs.forEach(function (i, index) {\n      // $FlowIgnore\n      out += printInstruction(i, depth + 1); // $FlowIgnore\n\n      if (index !== n.intrs.length - 1) {\n        out += space;\n      }\n    });\n  }\n\n  out += \")\";\n  return out;\n}\n\nfunction printLoopInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"loop\";\n\n  if (n.label != null && isAnonymous(n.label) === false) {\n    out += space;\n    out += printIdentifier(n.label);\n  }\n\n  if (typeof n.resulttype === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.resulttype;\n    out += \")\";\n  }\n\n  if (n.instr.length > 0) {\n    n.instr.forEach(function (e) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n\n      out += indent(depth);\n      out += printInstruction(e, depth + 1);\n    });\n\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth - 1);\n    }\n  }\n\n  out += \")\";\n  return out;\n}\n\nfunction printCallInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"call\";\n  out += space;\n  out += printIndex(n.index);\n\n  if (_typeof(n.instrArgs) === \"object\") {\n    // $FlowIgnore\n    n.instrArgs.forEach(function (arg) {\n      out += space;\n      out += printFuncInstructionArg(arg, depth + 1);\n    });\n  }\n\n  out += \")\";\n  return out;\n}\n\nfunction printIfInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"if\";\n\n  if (n.testLabel != null && isAnonymous(n.testLabel) === false) {\n    out += space;\n    out += printIdentifier(n.testLabel);\n  }\n\n  if (typeof n.result === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.result;\n    out += \")\";\n  }\n\n  if (n.test.length > 0) {\n    out += space;\n    n.test.forEach(function (i) {\n      out += printInstruction(i, depth + 1);\n    });\n  }\n\n  if (n.consequent.length > 0) {\n    if (compact === false) {\n      out += \"\\n\";\n    }\n\n    out += indent(depth);\n    out += \"(\";\n    out += \"then\";\n    depth++;\n    n.consequent.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n    depth--;\n\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n\n    out += \")\";\n  } else {\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n\n    out += \"(\";\n    out += \"then\";\n    out += \")\";\n  }\n\n  if (n.alternate.length > 0) {\n    if (compact === false) {\n      out += \"\\n\";\n    }\n\n    out += indent(depth);\n    out += \"(\";\n    out += \"else\";\n    depth++;\n    n.alternate.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n    depth--;\n\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n\n    out += \")\";\n  } else {\n    if (compact === false) {\n      out += \"\\n\";\n      out += indent(depth);\n    }\n\n    out += \"(\";\n    out += \"else\";\n    out += \")\";\n  }\n\n  if (compact === false) {\n    out += \"\\n\";\n    out += indent(depth - 1);\n  }\n\n  out += \")\";\n  return out;\n}\n\nfunction printBlockInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n  out += \"block\";\n\n  if (n.label != null && isAnonymous(n.label) === false) {\n    out += space;\n    out += printIdentifier(n.label);\n  }\n\n  if (typeof n.result === \"string\") {\n    out += space;\n    out += \"(\";\n    out += \"result\";\n    out += space;\n    out += n.result;\n    out += \")\";\n  }\n\n  if (n.instr.length > 0) {\n    n.instr.forEach(function (i) {\n      if (compact === false) {\n        out += \"\\n\";\n      }\n\n      out += indent(depth);\n      out += printInstruction(i, depth + 1);\n    });\n\n    if (compact === false) {\n      out += \"\\n\";\n    }\n\n    out += indent(depth - 1);\n    out += \")\";\n  } else {\n    out += \")\";\n  }\n\n  return out;\n}\n\nfunction printGenericInstruction(n, depth) {\n  var out = \"\";\n  out += \"(\";\n\n  if (typeof n.object === \"string\") {\n    out += n.object;\n    out += \".\";\n  }\n\n  out += n.id;\n  n.args.forEach(function (arg) {\n    out += space;\n    out += printFuncInstructionArg(arg, depth + 1);\n  });\n  out += \")\";\n  return out;\n}\n\nfunction printLongNumberLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n\n  var _n$value = n.value,\n      low = _n$value.low,\n      high = _n$value.high;\n  var v = new Long(low, high);\n  return v.toString();\n}\n\nfunction printFloatLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n\n  return String(n.value);\n}\n\nfunction printFuncInstructionArg(n, depth) {\n  var out = \"\";\n\n  if (n.type === \"NumberLiteral\") {\n    out += printNumberLiteral(n);\n  }\n\n  if (n.type === \"LongNumberLiteral\") {\n    out += printLongNumberLiteral(n);\n  }\n\n  if (n.type === \"Identifier\" && isAnonymous(n) === false) {\n    out += printIdentifier(n);\n  }\n\n  if (n.type === \"ValtypeLiteral\") {\n    out += n.name;\n  }\n\n  if (n.type === \"FloatLiteral\") {\n    out += printFloatLiteral(n);\n  }\n\n  if (isInstruction(n)) {\n    out += printInstruction(n, depth + 1);\n  }\n\n  return out;\n}\n\nfunction printNumberLiteral(n) {\n  if (typeof n.raw === \"string\") {\n    return n.raw;\n  }\n\n  return String(n.value);\n}\n\nfunction printModuleExport(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"export\";\n  out += space;\n  out += quote(n.name);\n\n  if (n.descr.exportType === \"Func\") {\n    out += space;\n    out += \"(\";\n    out += \"func\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Global\") {\n    out += space;\n    out += \"(\";\n    out += \"global\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Memory\" || n.descr.exportType === \"Mem\") {\n    out += space;\n    out += \"(\";\n    out += \"memory\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else if (n.descr.exportType === \"Table\") {\n    out += space;\n    out += \"(\";\n    out += \"table\";\n    out += space;\n    out += printIndex(n.descr.id);\n    out += \")\";\n  } else {\n    throw new Error(\"printModuleExport: unknown type: \" + n.descr.exportType);\n  }\n\n  out += \")\";\n  return out;\n}\n\nfunction printIdentifier(n) {\n  return \"$\" + n.value;\n}\n\nfunction printIndex(n) {\n  if (n.type === \"Identifier\") {\n    return printIdentifier(n);\n  } else if (n.type === \"NumberLiteral\") {\n    return printNumberLiteral(n);\n  } else {\n    throw new Error(\"Unsupported index: \" + n.type);\n  }\n}\n\nfunction printMemory(n) {\n  var out = \"\";\n  out += \"(\";\n  out += \"memory\";\n\n  if (n.id != null) {\n    out += space;\n    out += printIndex(n.id);\n    out += space;\n  }\n\n  out += printLimit(n.limits);\n  out += \")\";\n  return out;\n}\n\nfunction printLimit(n) {\n  var out = \"\";\n  out += n.min + \"\";\n\n  if (n.max != null) {\n    out += space;\n    out += String(n.max);\n  }\n\n  return out;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}