{"ast":null,"code":"const fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst {\n  Tracer\n} = require(\"chrome-trace-event\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nlet inspector = undefined;\ntry {\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  inspector = require(\"inspector\");\n} catch (e) {\n  console.log(\"Unable to CPU profile in < node 8.0\");\n}\nclass Profiler {\n  constructor(inspector) {\n    this.session = undefined;\n    this.inspector = inspector;\n  }\n  hasSession() {\n    return this.session !== undefined;\n  }\n  startProfiling() {\n    if (this.inspector === undefined) {\n      return Promise.resolve();\n    }\n    try {\n      this.session = new inspector.Session();\n      this.session.connect();\n    } catch (_) {\n      this.session = undefined;\n      return Promise.resolve();\n    }\n    return Promise.all([this.sendCommand(\"Profiler.setSamplingInterval\", {\n      interval: 100\n    }), this.sendCommand(\"Profiler.enable\"), this.sendCommand(\"Profiler.start\")]);\n  }\n  sendCommand(method, params) {\n    if (this.hasSession()) {\n      return new Promise((res, rej) => {\n        return this.session.post(method, params, (err, params) => {\n          if (err !== null) {\n            rej(err);\n          } else {\n            res(params);\n          }\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n  destroy() {\n    if (this.hasSession()) {\n      this.session.disconnect();\n    }\n    return Promise.resolve();\n  }\n  stopProfiling() {\n    return this.sendCommand(\"Profiler.stop\");\n  }\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = outputPath => {\n  const trace = new Tracer({\n    noStream: true\n  });\n  const profiler = new Profiler(inspector);\n  if (/\\/|\\\\/.test(outputPath)) {\n    const dirPath = path.dirname(outputPath);\n    mkdirp.sync(dirPath);\n  }\n  const fsStream = fs.createWriteStream(outputPath);\n  let counter = 0;\n  trace.pipe(fsStream);\n  // These are critical events that need to be inserted so that tools like\n  // chrome dev tools can load the profile.\n  trace.instantEvent({\n    name: \"TracingStartedInPage\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\",\n        page: \"0xfff\",\n        frames: [{\n          frame: \"0xfff\",\n          url: \"webpack\",\n          name: \"\"\n        }]\n      }\n    }\n  });\n  trace.instantEvent({\n    name: \"TracingStartedInBrowser\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\"\n      }\n    }\n  });\n  return {\n    trace,\n    counter,\n    profiler,\n    end: callback => {\n      // Wait until the write stream finishes.\n      fsStream.on(\"finish\", () => {\n        callback();\n      });\n      // Tear down the readable trace stream.\n      trace.push(null);\n    }\n  };\n};\nconst pluginName = \"ProfilingPlugin\";\nclass ProfilingPlugin {\n  /**\n   * @param {ProfilingPluginOptions=} opts options object\n   */\n  constructor(opts) {\n    validateOptions(schema, opts || {}, \"Profiling plugin\");\n    opts = opts || {};\n    this.outputPath = opts.outputPath || \"events.json\";\n  }\n  apply(compiler) {\n    const tracer = createTrace(this.outputPath);\n    tracer.profiler.startProfiling();\n\n    // Compiler Hooks\n    Object.keys(compiler.hooks).forEach(hookName => {\n      compiler.hooks[hookName].intercept(makeInterceptorFor(\"Compiler\", tracer)(hookName));\n    });\n    Object.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n      compiler.resolverFactory.hooks[hookName].intercept(makeInterceptorFor(\"Resolver\", tracer)(hookName));\n    });\n    compiler.hooks.compilation.tap(pluginName, (compilation, {\n      normalModuleFactory,\n      contextModuleFactory\n    }) => {\n      interceptAllHooksFor(compilation, tracer, \"Compilation\");\n      interceptAllHooksFor(normalModuleFactory, tracer, \"Normal Module Factory\");\n      interceptAllHooksFor(contextModuleFactory, tracer, \"Context Module Factory\");\n      interceptAllParserHooks(normalModuleFactory, tracer);\n      interceptTemplateInstancesFrom(compilation, tracer);\n    });\n\n    // We need to write out the CPU profile when we are all done.\n    compiler.hooks.done.tapAsync({\n      name: pluginName,\n      stage: Infinity\n    }, (stats, callback) => {\n      tracer.profiler.stopProfiling().then(parsedResults => {\n        if (parsedResults === undefined) {\n          tracer.profiler.destroy();\n          tracer.trace.flush();\n          tracer.end(callback);\n          return;\n        }\n        const cpuStartTime = parsedResults.profile.startTime;\n        const cpuEndTime = parsedResults.profile.endTime;\n        tracer.trace.completeEvent({\n          name: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n          id: ++tracer.counter,\n          cat: [\"toplevel\"],\n          ts: cpuStartTime,\n          args: {\n            src_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n            src_func: \"Accept\"\n          }\n        });\n        tracer.trace.completeEvent({\n          name: \"EvaluateScript\",\n          id: ++tracer.counter,\n          cat: [\"devtools.timeline\"],\n          ts: cpuStartTime,\n          dur: cpuEndTime - cpuStartTime,\n          args: {\n            data: {\n              url: \"webpack\",\n              lineNumber: 1,\n              columnNumber: 1,\n              frame: \"0xFFF\"\n            }\n          }\n        });\n        tracer.trace.instantEvent({\n          name: \"CpuProfile\",\n          id: ++tracer.counter,\n          cat: [\"disabled-by-default-devtools.timeline\"],\n          ts: cpuEndTime,\n          args: {\n            data: {\n              cpuProfile: parsedResults.profile\n            }\n          }\n        });\n        tracer.profiler.destroy();\n        tracer.trace.flush();\n        tracer.end(callback);\n      });\n    });\n  }\n}\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n  const {\n    mainTemplate,\n    chunkTemplate,\n    hotUpdateChunkTemplate,\n    moduleTemplates\n  } = compilation;\n  const {\n    javascript,\n    webassembly\n  } = moduleTemplates;\n  [{\n    instance: mainTemplate,\n    name: \"MainTemplate\"\n  }, {\n    instance: chunkTemplate,\n    name: \"ChunkTemplate\"\n  }, {\n    instance: hotUpdateChunkTemplate,\n    name: \"HotUpdateChunkTemplate\"\n  }, {\n    instance: javascript,\n    name: \"JavaScriptModuleTemplate\"\n  }, {\n    instance: webassembly,\n    name: \"WebAssemblyModuleTemplate\"\n  }].forEach(templateObject => {\n    Object.keys(templateObject.instance.hooks).forEach(hookName => {\n      templateObject.instance.hooks[hookName].intercept(makeInterceptorFor(templateObject.name, tracer)(hookName));\n    });\n  });\n};\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n  if (Reflect.has(instance, \"hooks\")) {\n    Object.keys(instance.hooks).forEach(hookName => {\n      instance.hooks[hookName].intercept(makeInterceptorFor(logLabel, tracer)(hookName));\n    });\n  }\n};\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n  const moduleTypes = [\"javascript/auto\", \"javascript/dynamic\", \"javascript/esm\", \"json\", \"webassembly/experimental\"];\n  moduleTypes.forEach(moduleType => {\n    moduleFactory.hooks.parser.for(moduleType).tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n      interceptAllHooksFor(parser, tracer, \"Parser\");\n    });\n  });\n};\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n  register: ({\n    name,\n    type,\n    context,\n    fn\n  }) => {\n    const newFn = makeNewProfiledTapFn(hookName, tracer, {\n      name,\n      type,\n      fn\n    });\n    return {\n      name,\n      type,\n      context,\n      fn: newFn\n    };\n  }\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, {\n  name,\n  type,\n  fn\n}) => {\n  const defaultCategory = [\"blink.user_timing\"];\n  switch (type) {\n    case \"promise\":\n      return (...args) => {\n        const id = ++tracer.counter;\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        const promise = /** @type {Promise<*>} */fn(...args);\n        return promise.then(r => {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          return r;\n        });\n      };\n    case \"async\":\n      return (...args) => {\n        const id = ++tracer.counter;\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        const callback = args.pop();\n        fn(...args, (...r) => {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          callback(...r);\n        });\n      };\n    case \"sync\":\n      return (...args) => {\n        const id = ++tracer.counter;\n        // Do not instrument ourself due to the CPU\n        // profile needing to be the last event in the trace.\n        if (name === pluginName) {\n          return fn(...args);\n        }\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        let r;\n        try {\n          r = fn(...args);\n        } catch (error) {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          throw error;\n        }\n        tracer.trace.end({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        return r;\n      };\n    default:\n      break;\n  }\n};\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;","map":{"version":3,"names":["fs","require","path","mkdirp","Tracer","validateOptions","schema","inspector","undefined","e","console","log","Profiler","constructor","session","hasSession","startProfiling","Promise","resolve","Session","connect","_","all","sendCommand","interval","method","params","res","rej","post","err","destroy","disconnect","stopProfiling","createTrace","outputPath","trace","noStream","profiler","test","dirPath","dirname","sync","fsStream","createWriteStream","counter","pipe","instantEvent","name","id","cat","args","data","sessionId","page","frames","frame","url","end","callback","on","push","pluginName","ProfilingPlugin","opts","apply","compiler","tracer","Object","keys","hooks","forEach","hookName","intercept","makeInterceptorFor","resolverFactory","compilation","tap","normalModuleFactory","contextModuleFactory","interceptAllHooksFor","interceptAllParserHooks","interceptTemplateInstancesFrom","done","tapAsync","stage","Infinity","stats","then","parsedResults","flush","cpuStartTime","profile","startTime","cpuEndTime","endTime","completeEvent","ts","src_file","src_func","dur","lineNumber","columnNumber","cpuProfile","mainTemplate","chunkTemplate","hotUpdateChunkTemplate","moduleTemplates","javascript","webassembly","instance","templateObject","logLabel","Reflect","has","moduleFactory","moduleTypes","moduleType","parser","for","parserOpts","register","type","context","fn","newFn","makeNewProfiledTapFn","defaultCategory","begin","promise","r","pop","error","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/debug/ProfilingPlugin.js"],"sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst { Tracer } = require(\"chrome-trace-event\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nlet inspector = undefined;\n\ntry {\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tinspector = require(\"inspector\");\n} catch (e) {\n\tconsole.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n\tconstructor(inspector) {\n\t\tthis.session = undefined;\n\t\tthis.inspector = inspector;\n\t}\n\n\thasSession() {\n\t\treturn this.session !== undefined;\n\t}\n\n\tstartProfiling() {\n\t\tif (this.inspector === undefined) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\ttry {\n\t\t\tthis.session = new inspector.Session();\n\t\t\tthis.session.connect();\n\t\t} catch (_) {\n\t\t\tthis.session = undefined;\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.sendCommand(\"Profiler.setSamplingInterval\", {\n\t\t\t\tinterval: 100\n\t\t\t}),\n\t\t\tthis.sendCommand(\"Profiler.enable\"),\n\t\t\tthis.sendCommand(\"Profiler.start\")\n\t\t]);\n\t}\n\n\tsendCommand(method, params) {\n\t\tif (this.hasSession()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\treturn this.session.post(method, params, (err, params) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(params);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this.hasSession()) {\n\t\t\tthis.session.disconnect();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstopProfiling() {\n\t\treturn this.sendCommand(\"Profiler.stop\");\n\t}\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = outputPath => {\n\tconst trace = new Tracer({\n\t\tnoStream: true\n\t});\n\tconst profiler = new Profiler(inspector);\n\tif (/\\/|\\\\/.test(outputPath)) {\n\t\tconst dirPath = path.dirname(outputPath);\n\t\tmkdirp.sync(dirPath);\n\t}\n\tconst fsStream = fs.createWriteStream(outputPath);\n\n\tlet counter = 0;\n\n\ttrace.pipe(fsStream);\n\t// These are critical events that need to be inserted so that tools like\n\t// chrome dev tools can load the profile.\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInPage\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\",\n\t\t\t\tpage: \"0xfff\",\n\t\t\t\tframes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tframe: \"0xfff\",\n\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\tname: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInBrowser\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\"\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttrace,\n\t\tcounter,\n\t\tprofiler,\n\t\tend: callback => {\n\t\t\t// Wait until the write stream finishes.\n\t\t\tfsStream.on(\"finish\", () => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\t// Tear down the readable trace stream.\n\t\t\ttrace.push(null);\n\t\t}\n\t};\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n\t/**\n\t * @param {ProfilingPluginOptions=} opts options object\n\t */\n\tconstructor(opts) {\n\t\tvalidateOptions(schema, opts || {}, \"Profiling plugin\");\n\t\topts = opts || {};\n\t\tthis.outputPath = opts.outputPath || \"events.json\";\n\t}\n\n\tapply(compiler) {\n\t\tconst tracer = createTrace(this.outputPath);\n\t\ttracer.profiler.startProfiling();\n\n\t\t// Compiler Hooks\n\t\tObject.keys(compiler.hooks).forEach(hookName => {\n\t\t\tcompiler.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Compiler\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tObject.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n\t\t\tcompiler.resolverFactory.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Resolver\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tpluginName,\n\t\t\t(compilation, { normalModuleFactory, contextModuleFactory }) => {\n\t\t\t\tinterceptAllHooksFor(compilation, tracer, \"Compilation\");\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tnormalModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Normal Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tcontextModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Context Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllParserHooks(normalModuleFactory, tracer);\n\t\t\t\tinterceptTemplateInstancesFrom(compilation, tracer);\n\t\t\t}\n\t\t);\n\n\t\t// We need to write out the CPU profile when we are all done.\n\t\tcompiler.hooks.done.tapAsync(\n\t\t\t{\n\t\t\t\tname: pluginName,\n\t\t\t\tstage: Infinity\n\t\t\t},\n\t\t\t(stats, callback) => {\n\t\t\t\ttracer.profiler.stopProfiling().then(parsedResults => {\n\t\t\t\t\tif (parsedResults === undefined) {\n\t\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\t\ttracer.end(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cpuStartTime = parsedResults.profile.startTime;\n\t\t\t\t\tconst cpuEndTime = parsedResults.profile.endTime;\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"toplevel\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tsrc_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n\t\t\t\t\t\t\tsrc_func: \"Accept\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"EvaluateScript\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"devtools.timeline\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\tdur: cpuEndTime - cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\t\t\tcolumnNumber: 1,\n\t\t\t\t\t\t\t\tframe: \"0xFFF\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.instantEvent({\n\t\t\t\t\t\tname: \"CpuProfile\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\t\t\t\t\tts: cpuEndTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tcpuProfile: parsedResults.profile\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\ttracer.end(callback);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n\tconst {\n\t\tmainTemplate,\n\t\tchunkTemplate,\n\t\thotUpdateChunkTemplate,\n\t\tmoduleTemplates\n\t} = compilation;\n\n\tconst { javascript, webassembly } = moduleTemplates;\n\n\t[\n\t\t{\n\t\t\tinstance: mainTemplate,\n\t\t\tname: \"MainTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: chunkTemplate,\n\t\t\tname: \"ChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: hotUpdateChunkTemplate,\n\t\t\tname: \"HotUpdateChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: javascript,\n\t\t\tname: \"JavaScriptModuleTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: webassembly,\n\t\t\tname: \"WebAssemblyModuleTemplate\"\n\t\t}\n\t].forEach(templateObject => {\n\t\tObject.keys(templateObject.instance.hooks).forEach(hookName => {\n\t\t\ttemplateObject.instance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(templateObject.name, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n\tif (Reflect.has(instance, \"hooks\")) {\n\t\tObject.keys(instance.hooks).forEach(hookName => {\n\t\t\tinstance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(logLabel, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t}\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n\tconst moduleTypes = [\n\t\t\"javascript/auto\",\n\t\t\"javascript/dynamic\",\n\t\t\"javascript/esm\",\n\t\t\"json\",\n\t\t\"webassembly/experimental\"\n\t];\n\n\tmoduleTypes.forEach(moduleType => {\n\t\tmoduleFactory.hooks.parser\n\t\t\t.for(moduleType)\n\t\t\t.tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n\t\t\t\tinterceptAllHooksFor(parser, tracer, \"Parser\");\n\t\t\t});\n\t});\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n\tregister: ({ name, type, context, fn }) => {\n\t\tconst newFn = makeNewProfiledTapFn(hookName, tracer, {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tfn\n\t\t});\n\t\treturn {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tcontext,\n\t\t\tfn: newFn\n\t\t};\n\t}\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, { name, type, fn }) => {\n\tconst defaultCategory = [\"blink.user_timing\"];\n\n\tswitch (type) {\n\t\tcase \"promise\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst promise = /** @type {Promise<*>} */ (fn(...args));\n\t\t\t\treturn promise.then(r => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"async\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst callback = args.pop();\n\t\t\t\tfn(...args, (...r) => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tcallback(...r);\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"sync\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\t// Do not instrument ourself due to the CPU\n\t\t\t\t// profile needing to be the last event in the trace.\n\t\t\t\tif (name === pluginName) {\n\t\t\t\t\treturn fn(...args);\n\t\t\t\t}\n\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tlet r;\n\t\t\t\ttry {\n\t\t\t\t\tr = fn(...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\ttracer.trace.end({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t};\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}