{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\nclass ContextReplacementPlugin {\n  constructor(resourceRegExp, newContentResource, newContentRecursive, newContentRegExp) {\n    this.resourceRegExp = resourceRegExp;\n    if (typeof newContentResource === \"function\") {\n      this.newContentCallback = newContentResource;\n    } else if (typeof newContentResource === \"string\" && typeof newContentRecursive === \"object\") {\n      this.newContentResource = newContentResource;\n      this.newContentCreateContextMap = (fs, callback) => {\n        callback(null, newContentRecursive);\n      };\n    } else if (typeof newContentResource === \"string\" && typeof newContentRecursive === \"function\") {\n      this.newContentResource = newContentResource;\n      this.newContentCreateContextMap = newContentRecursive;\n    } else {\n      if (typeof newContentResource !== \"string\") {\n        newContentRegExp = newContentRecursive;\n        newContentRecursive = newContentResource;\n        newContentResource = undefined;\n      }\n      if (typeof newContentRecursive !== \"boolean\") {\n        newContentRegExp = newContentRecursive;\n        newContentRecursive = undefined;\n      }\n      this.newContentResource = newContentResource;\n      this.newContentRecursive = newContentRecursive;\n      this.newContentRegExp = newContentRegExp;\n    }\n  }\n  apply(compiler) {\n    const resourceRegExp = this.resourceRegExp;\n    const newContentCallback = this.newContentCallback;\n    const newContentResource = this.newContentResource;\n    const newContentRecursive = this.newContentRecursive;\n    const newContentRegExp = this.newContentRegExp;\n    const newContentCreateContextMap = this.newContentCreateContextMap;\n    compiler.hooks.contextModuleFactory.tap(\"ContextReplacementPlugin\", cmf => {\n      cmf.hooks.beforeResolve.tap(\"ContextReplacementPlugin\", result => {\n        if (!result) return;\n        if (resourceRegExp.test(result.request)) {\n          if (newContentResource !== undefined) {\n            result.request = newContentResource;\n          }\n          if (newContentRecursive !== undefined) {\n            result.recursive = newContentRecursive;\n          }\n          if (newContentRegExp !== undefined) {\n            result.regExp = newContentRegExp;\n          }\n          if (typeof newContentCallback === \"function\") {\n            newContentCallback(result);\n          } else {\n            for (const d of result.dependencies) {\n              if (d.critical) d.critical = false;\n            }\n          }\n        }\n        return result;\n      });\n      cmf.hooks.afterResolve.tap(\"ContextReplacementPlugin\", result => {\n        if (!result) return;\n        if (resourceRegExp.test(result.resource)) {\n          if (newContentResource !== undefined) {\n            result.resource = path.resolve(result.resource, newContentResource);\n          }\n          if (newContentRecursive !== undefined) {\n            result.recursive = newContentRecursive;\n          }\n          if (newContentRegExp !== undefined) {\n            result.regExp = newContentRegExp;\n          }\n          if (typeof newContentCreateContextMap === \"function\") {\n            result.resolveDependencies = createResolveDependenciesFromContextMap(newContentCreateContextMap);\n          }\n          if (typeof newContentCallback === \"function\") {\n            const origResource = result.resource;\n            newContentCallback(result);\n            if (result.resource !== origResource) {\n              result.resource = path.resolve(origResource, result.resource);\n            }\n          } else {\n            for (const d of result.dependencies) {\n              if (d.critical) d.critical = false;\n            }\n          }\n        }\n        return result;\n      });\n    });\n  }\n}\nconst createResolveDependenciesFromContextMap = createContextMap => {\n  const resolveDependenciesFromContextMap = (fs, options, callback) => {\n    createContextMap(fs, (err, map) => {\n      if (err) return callback(err);\n      const dependencies = Object.keys(map).map(key => {\n        return new ContextElementDependency(map[key] + options.resourceQuery, key);\n      });\n      callback(null, dependencies);\n    });\n  };\n  return resolveDependenciesFromContextMap;\n};\nmodule.exports = ContextReplacementPlugin;","map":{"version":3,"names":["path","require","ContextElementDependency","ContextReplacementPlugin","constructor","resourceRegExp","newContentResource","newContentRecursive","newContentRegExp","newContentCallback","newContentCreateContextMap","fs","callback","undefined","apply","compiler","hooks","contextModuleFactory","tap","cmf","beforeResolve","result","test","request","recursive","regExp","d","dependencies","critical","afterResolve","resource","resolve","resolveDependencies","createResolveDependenciesFromContextMap","origResource","createContextMap","resolveDependenciesFromContextMap","options","err","map","Object","keys","key","resourceQuery","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/ContextReplacementPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\n\nclass ContextReplacementPlugin {\n\tconstructor(\n\t\tresourceRegExp,\n\t\tnewContentResource,\n\t\tnewContentRecursive,\n\t\tnewContentRegExp\n\t) {\n\t\tthis.resourceRegExp = resourceRegExp;\n\n\t\tif (typeof newContentResource === \"function\") {\n\t\t\tthis.newContentCallback = newContentResource;\n\t\t} else if (\n\t\t\ttypeof newContentResource === \"string\" &&\n\t\t\ttypeof newContentRecursive === \"object\"\n\t\t) {\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentCreateContextMap = (fs, callback) => {\n\t\t\t\tcallback(null, newContentRecursive);\n\t\t\t};\n\t\t} else if (\n\t\t\ttypeof newContentResource === \"string\" &&\n\t\t\ttypeof newContentRecursive === \"function\"\n\t\t) {\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentCreateContextMap = newContentRecursive;\n\t\t} else {\n\t\t\tif (typeof newContentResource !== \"string\") {\n\t\t\t\tnewContentRegExp = newContentRecursive;\n\t\t\t\tnewContentRecursive = newContentResource;\n\t\t\t\tnewContentResource = undefined;\n\t\t\t}\n\t\t\tif (typeof newContentRecursive !== \"boolean\") {\n\t\t\t\tnewContentRegExp = newContentRecursive;\n\t\t\t\tnewContentRecursive = undefined;\n\t\t\t}\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentRecursive = newContentRecursive;\n\t\t\tthis.newContentRegExp = newContentRegExp;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tconst resourceRegExp = this.resourceRegExp;\n\t\tconst newContentCallback = this.newContentCallback;\n\t\tconst newContentResource = this.newContentResource;\n\t\tconst newContentRecursive = this.newContentRecursive;\n\t\tconst newContentRegExp = this.newContentRegExp;\n\t\tconst newContentCreateContextMap = this.newContentCreateContextMap;\n\n\t\tcompiler.hooks.contextModuleFactory.tap(\"ContextReplacementPlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"ContextReplacementPlugin\", result => {\n\t\t\t\tif (!result) return;\n\t\t\t\tif (resourceRegExp.test(result.request)) {\n\t\t\t\t\tif (newContentResource !== undefined) {\n\t\t\t\t\t\tresult.request = newContentResource;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRecursive !== undefined) {\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRegExp !== undefined) {\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCallback === \"function\") {\n\t\t\t\t\t\tnewContentCallback(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const d of result.dependencies) {\n\t\t\t\t\t\t\tif (d.critical) d.critical = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t\tcmf.hooks.afterResolve.tap(\"ContextReplacementPlugin\", result => {\n\t\t\t\tif (!result) return;\n\t\t\t\tif (resourceRegExp.test(result.resource)) {\n\t\t\t\t\tif (newContentResource !== undefined) {\n\t\t\t\t\t\tresult.resource = path.resolve(result.resource, newContentResource);\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRecursive !== undefined) {\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRegExp !== undefined) {\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCreateContextMap === \"function\") {\n\t\t\t\t\t\tresult.resolveDependencies = createResolveDependenciesFromContextMap(\n\t\t\t\t\t\t\tnewContentCreateContextMap\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCallback === \"function\") {\n\t\t\t\t\t\tconst origResource = result.resource;\n\t\t\t\t\t\tnewContentCallback(result);\n\t\t\t\t\t\tif (result.resource !== origResource) {\n\t\t\t\t\t\t\tresult.resource = path.resolve(origResource, result.resource);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const d of result.dependencies) {\n\t\t\t\t\t\t\tif (d.critical) d.critical = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\t}\n}\n\nconst createResolveDependenciesFromContextMap = createContextMap => {\n\tconst resolveDependenciesFromContextMap = (fs, options, callback) => {\n\t\tcreateContextMap(fs, (err, map) => {\n\t\t\tif (err) return callback(err);\n\t\t\tconst dependencies = Object.keys(map).map(key => {\n\t\t\t\treturn new ContextElementDependency(\n\t\t\t\t\tmap[key] + options.resourceQuery,\n\t\t\t\t\tkey\n\t\t\t\t);\n\t\t\t});\n\t\t\tcallback(null, dependencies);\n\t\t});\n\t};\n\treturn resolveDependenciesFromContextMap;\n};\n\nmodule.exports = ContextReplacementPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}