{"ast":null,"code":"'use strict';\n\nmodule.exports = RunQueue;\nvar validate = require('aproba');\nfunction RunQueue(opts) {\n  validate('Z|O', [opts]);\n  if (!opts) opts = {};\n  this.finished = false;\n  this.inflight = 0;\n  this.maxConcurrency = opts.maxConcurrency || 1;\n  this.queued = 0;\n  this.queue = [];\n  this.currentPrio = null;\n  this.currentQueue = null;\n  this.Promise = opts.Promise || global.Promise;\n  this.deferred = {};\n}\nRunQueue.prototype = {};\nRunQueue.prototype.run = function () {\n  if (arguments.length !== 0) throw new Error('RunQueue.run takes no arguments');\n  var self = this;\n  var deferred = this.deferred;\n  if (!deferred.promise) {\n    deferred.promise = new this.Promise(function (resolve, reject) {\n      deferred.resolve = resolve;\n      deferred.reject = reject;\n      self._runQueue();\n    });\n  }\n  return deferred.promise;\n};\nRunQueue.prototype._runQueue = function () {\n  var self = this;\n  while (this.inflight < this.maxConcurrency && this.queued) {\n    if (!this.currentQueue || this.currentQueue.length === 0) {\n      // wait till the current priority is entirely processed before\n      // starting a new one\n      if (this.inflight) return;\n      var prios = Object.keys(this.queue);\n      for (var ii = 0; ii < prios.length; ++ii) {\n        var prioQueue = this.queue[prios[ii]];\n        if (prioQueue.length) {\n          this.currentQueue = prioQueue;\n          this.currentPrio = prios[ii];\n          break;\n        }\n      }\n    }\n    --this.queued;\n    ++this.inflight;\n    var next = this.currentQueue.shift();\n    var args = next.args || [];\n\n    // we explicitly construct a promise here so that queue items can throw\n    // or immediately return to resolve\n    var queueEntry = new this.Promise(function (resolve) {\n      resolve(next.cmd.apply(null, args));\n    });\n    queueEntry.then(function () {\n      --self.inflight;\n      if (self.finished) return;\n      if (self.queued <= 0 && self.inflight <= 0) {\n        self.finished = true;\n        self.deferred.resolve();\n      }\n      self._runQueue();\n    }, function (err) {\n      self.finished = true;\n      self.deferred.reject(err);\n    });\n  }\n};\nRunQueue.prototype.add = function (prio, cmd, args) {\n  if (this.finished) throw new Error(\"Can't add to a finished queue. Create a new queue.\");\n  if (Math.abs(Math.floor(prio)) !== prio) throw new Error('Priorities must be a positive integer value.');\n  validate('NFA|NFZ', [prio, cmd, args]);\n  prio = Number(prio);\n  if (!this.queue[prio]) this.queue[prio] = [];\n  ++this.queued;\n  this.queue[prio].push({\n    cmd: cmd,\n    args: args\n  });\n  // if this priority is higher than the one we're currently processing,\n  // switch back to processing its queue.\n  if (this.currentPrio > prio) {\n    this.currentQueue = this.queue[prio];\n    this.currentPrio = prio;\n  }\n};","map":{"version":3,"names":["module","exports","RunQueue","validate","require","opts","finished","inflight","maxConcurrency","queued","queue","currentPrio","currentQueue","Promise","global","deferred","prototype","run","arguments","length","Error","self","promise","resolve","reject","_runQueue","prios","Object","keys","ii","prioQueue","next","shift","args","queueEntry","cmd","apply","then","err","add","prio","Math","abs","floor","Number","push"],"sources":["/home/soon/bulletin-board/node_modules/run-queue/queue.js"],"sourcesContent":["'use strict'\nmodule.exports = RunQueue\n\nvar validate = require('aproba')\n\nfunction RunQueue (opts) {\n  validate('Z|O', [opts])\n  if (!opts) opts = {}\n  this.finished = false\n  this.inflight = 0\n  this.maxConcurrency = opts.maxConcurrency || 1\n  this.queued = 0\n  this.queue = []\n  this.currentPrio = null\n  this.currentQueue = null\n  this.Promise = opts.Promise || global.Promise\n  this.deferred = {}\n}\n\nRunQueue.prototype = {}\n\nRunQueue.prototype.run = function () {\n  if (arguments.length !== 0) throw new Error('RunQueue.run takes no arguments')\n  var self = this\n  var deferred = this.deferred\n  if (!deferred.promise) {\n    deferred.promise = new this.Promise(function (resolve, reject) {\n      deferred.resolve = resolve\n      deferred.reject = reject\n      self._runQueue()\n    })\n  }\n  return deferred.promise\n}\n\nRunQueue.prototype._runQueue = function () {\n  var self = this\n\n  while ((this.inflight < this.maxConcurrency) && this.queued) {\n    if (!this.currentQueue || this.currentQueue.length === 0) {\n      // wait till the current priority is entirely processed before\n      // starting a new one\n      if (this.inflight) return\n      var prios = Object.keys(this.queue)\n      for (var ii = 0; ii < prios.length; ++ii) {\n        var prioQueue = this.queue[prios[ii]]\n        if (prioQueue.length) {\n          this.currentQueue = prioQueue\n          this.currentPrio = prios[ii]\n          break\n        }\n      }\n    }\n\n    --this.queued\n    ++this.inflight\n    var next = this.currentQueue.shift()\n    var args = next.args || []\n\n    // we explicitly construct a promise here so that queue items can throw\n    // or immediately return to resolve\n    var queueEntry = new this.Promise(function (resolve) {\n      resolve(next.cmd.apply(null, args))\n    })\n\n    queueEntry.then(function () {\n      --self.inflight\n      if (self.finished) return\n      if (self.queued <= 0 && self.inflight <= 0) {\n        self.finished = true\n        self.deferred.resolve()\n      }\n      self._runQueue()\n    }, function (err) {\n      self.finished = true\n      self.deferred.reject(err)\n    })\n  }\n}\n\nRunQueue.prototype.add = function (prio, cmd, args) {\n  if (this.finished) throw new Error(\"Can't add to a finished queue. Create a new queue.\")\n  if (Math.abs(Math.floor(prio)) !== prio) throw new Error('Priorities must be a positive integer value.')\n  validate('NFA|NFZ', [prio, cmd, args])\n  prio = Number(prio)\n  if (!this.queue[prio]) this.queue[prio] = []\n  ++this.queued\n  this.queue[prio].push({cmd: cmd, args: args})\n  // if this priority is higher than the one we're currently processing,\n  // switch back to processing its queue.\n  if (this.currentPrio > prio) {\n    this.currentQueue = this.queue[prio]\n    this.currentPrio = prio\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}