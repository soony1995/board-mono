{"ast":null,"code":"'use strict';\n\nconst childProcess = require('child_process'),\n  childModule = require.resolve('./child/index');\nfunction fork(forkModule, workerOptions) {\n  // suppress --debug / --inspect flags while preserving others (like --harmony)\n  let filteredArgs = process.execArgv.filter(function (v) {\n      return !/^--(debug|inspect)/.test(v);\n    }),\n    options = Object.assign({\n      execArgv: filteredArgs,\n      env: process.env,\n      cwd: process.cwd()\n    }, workerOptions),\n    child = childProcess.fork(childModule, process.argv, options);\n  child.on('error', function () {\n    // this *should* be picked up by onExit and the operation requeued\n  });\n  child.send({\n    owner: 'farm',\n    module: forkModule\n  });\n\n  // return a send() function for this child\n  return {\n    send: child.send.bind(child),\n    child: child\n  };\n}\nmodule.exports = fork;","map":{"version":3,"names":["childProcess","require","childModule","resolve","fork","forkModule","workerOptions","filteredArgs","process","execArgv","filter","v","test","options","Object","assign","env","cwd","child","argv","on","send","owner","module","bind","exports"],"sources":["/home/soon/bulletin-board/node_modules/worker-farm/lib/fork.js"],"sourcesContent":["'use strict'\n\nconst childProcess = require('child_process')\n    , childModule  = require.resolve('./child/index')\n\n\nfunction fork (forkModule, workerOptions) {\n  // suppress --debug / --inspect flags while preserving others (like --harmony)\n  let filteredArgs = process.execArgv.filter(function (v) {\n        return !(/^--(debug|inspect)/).test(v)\n      })\n    , options       = Object.assign({\n          execArgv : filteredArgs\n        , env      : process.env\n        , cwd      : process.cwd()\n      }, workerOptions)\n    , child         = childProcess.fork(childModule, process.argv, options)\n\n  child.on('error', function() {\n    // this *should* be picked up by onExit and the operation requeued\n  })\n\n  child.send({ owner: 'farm', module: forkModule })\n\n  // return a send() function for this child\n  return {\n      send  : child.send.bind(child)\n    , child : child\n  }\n}\n\n\nmodule.exports = fork\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;EACvCC,WAAW,GAAID,OAAO,CAACE,OAAO,CAAC,eAAe,CAAC;AAGrD,SAASC,IAAIA,CAAEC,UAAU,EAAEC,aAAa,EAAE;EACxC;EACA,IAAIC,YAAY,GAAGC,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAC,UAAUC,CAAC,EAAE;MAClD,OAAO,CAAE,oBAAoB,CAAEC,IAAI,CAACD,CAAC,CAAC;IACxC,CAAC,CAAC;IACFE,OAAO,GAASC,MAAM,CAACC,MAAM,CAAC;MAC1BN,QAAQ,EAAGF,YAAY;MACvBS,GAAG,EAAQR,OAAO,CAACQ,GAAG;MACtBC,GAAG,EAAQT,OAAO,CAACS,GAAG,CAAC;IAC3B,CAAC,EAAEX,aAAa,CAAC;IACjBY,KAAK,GAAWlB,YAAY,CAACI,IAAI,CAACF,WAAW,EAAEM,OAAO,CAACW,IAAI,EAAEN,OAAO,CAAC;EAEzEK,KAAK,CAACE,EAAE,CAAC,OAAO,EAAE,YAAW;IAC3B;EAAA,CACD,CAAC;EAEFF,KAAK,CAACG,IAAI,CAAC;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAElB;EAAW,CAAC,CAAC;;EAEjD;EACA,OAAO;IACHgB,IAAI,EAAIH,KAAK,CAACG,IAAI,CAACG,IAAI,CAACN,KAAK,CAAC;IAC9BA,KAAK,EAAGA;EACZ,CAAC;AACH;AAGAK,MAAM,CAACE,OAAO,GAAGrB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script"}