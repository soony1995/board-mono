{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CodeNode = require(\"./CodeNode\");\nconst SourceNode = require(\"./SourceNode\");\nconst MappingsContext = require(\"./MappingsContext\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\nclass SourceListMap {\n  constructor(generatedCode, source, originalSource) {\n    if (Array.isArray(generatedCode)) {\n      this.children = generatedCode;\n    } else {\n      this.children = [];\n      if (generatedCode || source) this.add(generatedCode, source, originalSource);\n    }\n  }\n  add(generatedCode, source, originalSource) {\n    if (typeof generatedCode === \"string\") {\n      if (source) {\n        this.children.push(new SourceNode(generatedCode, source, originalSource));\n      } else if (this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\n        this.children[this.children.length - 1].addGeneratedCode(generatedCode);\n      } else {\n        this.children.push(new CodeNode(generatedCode));\n      }\n    } else if (generatedCode.getMappings && generatedCode.getGeneratedCode) {\n      this.children.push(generatedCode);\n    } else if (generatedCode.children) {\n      generatedCode.children.forEach(function (sln) {\n        this.children.push(sln);\n      }, this);\n    } else {\n      throw new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\n    }\n  }\n  preprend(generatedCode, source, originalSource) {\n    if (typeof generatedCode === \"string\") {\n      if (source) {\n        this.children.unshift(new SourceNode(generatedCode, source, originalSource));\n      } else if (this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\n        this.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\n      } else {\n        this.children.unshift(new CodeNode(generatedCode));\n      }\n    } else if (generatedCode.getMappings && generatedCode.getGeneratedCode) {\n      this.children.unshift(generatedCode);\n    } else if (generatedCode.children) {\n      generatedCode.children.slice().reverse().forEach(function (sln) {\n        this.children.unshift(sln);\n      }, this);\n    } else {\n      throw new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\n    }\n  }\n  mapGeneratedCode(fn) {\n    const normalizedNodes = [];\n    this.children.forEach(function (sln) {\n      sln.getNormalizedNodes().forEach(function (newNode) {\n        normalizedNodes.push(newNode);\n      });\n    });\n    const optimizedNodes = [];\n    normalizedNodes.forEach(function (sln) {\n      sln = sln.mapGeneratedCode(fn);\n      if (optimizedNodes.length === 0) {\n        optimizedNodes.push(sln);\n      } else {\n        const last = optimizedNodes[optimizedNodes.length - 1];\n        const mergedNode = last.merge(sln);\n        if (mergedNode) {\n          optimizedNodes[optimizedNodes.length - 1] = mergedNode;\n        } else {\n          optimizedNodes.push(sln);\n        }\n      }\n    });\n    return new SourceListMap(optimizedNodes);\n  }\n  toString() {\n    return this.children.map(function (sln) {\n      return sln.getGeneratedCode();\n    }).join(\"\");\n  }\n  toStringWithSourceMap(options) {\n    const mappingsContext = new MappingsContext();\n    const source = this.children.map(function (sln) {\n      return sln.getGeneratedCode();\n    }).join(\"\");\n    const mappings = this.children.map(function (sln) {\n      return sln.getMappings(mappingsContext);\n    }).join(\"\");\n    const arrays = mappingsContext.getArrays();\n    return {\n      source,\n      map: {\n        version: 3,\n        file: options && options.file,\n        sources: arrays.sources,\n        sourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\n        mappings: mappings\n      }\n    };\n  }\n}\nmodule.exports = SourceListMap;","map":{"version":3,"names":["CodeNode","require","SourceNode","MappingsContext","getNumberOfLines","SourceListMap","constructor","generatedCode","source","originalSource","Array","isArray","children","add","push","length","addGeneratedCode","getMappings","getGeneratedCode","forEach","sln","Error","preprend","unshift","preprendGeneratedCode","slice","reverse","mapGeneratedCode","fn","normalizedNodes","getNormalizedNodes","newNode","optimizedNodes","last","mergedNode","merge","toString","map","join","toStringWithSourceMap","options","mappingsContext","mappings","arrays","getArrays","version","file","sources","sourcesContent","hasSourceContent","undefined","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/source-list-map/lib/SourceListMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CodeNode = require(\"./CodeNode\");\nconst SourceNode = require(\"./SourceNode\");\nconst MappingsContext = require(\"./MappingsContext\");\nconst getNumberOfLines = require(\"./helpers\").getNumberOfLines;\n\nclass SourceListMap {\n\n\tconstructor(generatedCode, source, originalSource) {\n\t\tif(Array.isArray(generatedCode)) {\n\t\t\tthis.children = generatedCode;\n\t\t} else {\n\t\t\tthis.children = [];\n\t\t\tif(generatedCode || source)\n\t\t\t\tthis.add(generatedCode, source, originalSource);\n\t\t}\n\t}\n\n\tadd(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.push(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1] instanceof CodeNode) {\n\t\t\t\tthis.children[this.children.length - 1].addGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.push(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.push(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.forEach(function(sln) {\n\t\t\t\tthis.children.push(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.add: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tpreprend(generatedCode, source, originalSource) {\n\t\tif(typeof generatedCode === \"string\") {\n\t\t\tif(source) {\n\t\t\t\tthis.children.unshift(new SourceNode(generatedCode, source, originalSource));\n\t\t\t} else if(this.children.length > 0 && this.children[this.children.length - 1].preprendGeneratedCode) {\n\t\t\t\tthis.children[this.children.length - 1].preprendGeneratedCode(generatedCode);\n\t\t\t} else {\n\t\t\t\tthis.children.unshift(new CodeNode(generatedCode));\n\t\t\t}\n\t\t} else if(generatedCode.getMappings && generatedCode.getGeneratedCode) {\n\t\t\tthis.children.unshift(generatedCode);\n\t\t} else if(generatedCode.children) {\n\t\t\tgeneratedCode.children.slice().reverse().forEach(function(sln) {\n\t\t\t\tthis.children.unshift(sln);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid arguments to SourceListMap.protfotype.prerend: Expected string, Node or SourceListMap\");\n\t\t}\n\t};\n\n\tmapGeneratedCode(fn) {\n\t\tconst normalizedNodes = [];\n\t\tthis.children.forEach(function(sln) {\n\t\t\tsln.getNormalizedNodes().forEach(function(newNode) {\n\t\t\t\tnormalizedNodes.push(newNode);\n\t\t\t});\n\t\t});\n\t\tconst optimizedNodes = [];\n\t\tnormalizedNodes.forEach(function(sln) {\n\t\t\tsln = sln.mapGeneratedCode(fn);\n\t\t\tif(optimizedNodes.length === 0) {\n\t\t\t\toptimizedNodes.push(sln);\n\t\t\t} else {\n\t\t\t\tconst last = optimizedNodes[optimizedNodes.length - 1];\n\t\t\t\tconst mergedNode = last.merge(sln);\n\t\t\t\tif(mergedNode) {\n\t\t\t\t\toptimizedNodes[optimizedNodes.length - 1] = mergedNode;\n\t\t\t\t} else {\n\t\t\t\t\toptimizedNodes.push(sln);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn new SourceListMap(optimizedNodes);\n\t};\n\n\ttoString() {\n\t\treturn this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t};\n\n\ttoStringWithSourceMap(options) {\n\t\tconst mappingsContext = new MappingsContext();\n\t\tconst source = this.children.map(function(sln) {\n\t\t\treturn sln.getGeneratedCode();\n\t\t}).join(\"\");\n\t\tconst mappings = this.children.map(function(sln) {\n\t\t\treturn sln.getMappings(mappingsContext);\n\t\t}).join(\"\");\n\t\tconst arrays = mappingsContext.getArrays();\n\t\treturn {\n\t\t\tsource,\n\t\t\tmap: {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: options && options.file,\n\t\t\t\tsources: arrays.sources,\n\t\t\t\tsourcesContent: mappingsContext.hasSourceContent ? arrays.sourcesContent : undefined,\n\t\t\t\tmappings: mappings\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = SourceListMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}