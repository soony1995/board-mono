{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\nconst RequestShortener = require(\"./RequestShortener\");\nconst getHash = str => {\n  const hash = createHash(\"md4\");\n  hash.update(str);\n  const digest = /** @type {string} */hash.digest(\"hex\");\n  return digest.substr(0, 4);\n};\nclass NamedModulesPlugin {\n  constructor(options) {\n    this.options = options || {};\n  }\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"NamedModulesPlugin\", compilation => {\n      compilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", modules => {\n        const namedModules = new Map();\n        const context = this.options.context || compiler.options.context;\n        for (const module of modules) {\n          if (module.id === null && module.libIdent) {\n            module.id = module.libIdent({\n              context\n            });\n          }\n          if (module.id !== null) {\n            const namedModule = namedModules.get(module.id);\n            if (namedModule !== undefined) {\n              namedModule.push(module);\n            } else {\n              namedModules.set(module.id, [module]);\n            }\n          }\n        }\n        for (const namedModule of namedModules.values()) {\n          if (namedModule.length > 1) {\n            for (const module of namedModule) {\n              const requestShortener = new RequestShortener(context);\n              module.id = `${module.id}?${getHash(requestShortener.shorten(module.identifier()))}`;\n            }\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = NamedModulesPlugin;","map":{"version":3,"names":["createHash","require","RequestShortener","getHash","str","hash","update","digest","substr","NamedModulesPlugin","constructor","options","apply","compiler","hooks","compilation","tap","beforeModuleIds","modules","namedModules","Map","context","module","id","libIdent","namedModule","get","undefined","push","set","values","length","requestShortener","shorten","identifier","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/NamedModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\nconst RequestShortener = require(\"./RequestShortener\");\n\nconst getHash = str => {\n\tconst hash = createHash(\"md4\");\n\thash.update(str);\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\n\treturn digest.substr(0, 4);\n};\n\nclass NamedModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedModulesPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", modules => {\n\t\t\t\tconst namedModules = new Map();\n\t\t\t\tconst context = this.options.context || compiler.options.context;\n\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tif (module.id === null && module.libIdent) {\n\t\t\t\t\t\tmodule.id = module.libIdent({ context });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (module.id !== null) {\n\t\t\t\t\t\tconst namedModule = namedModules.get(module.id);\n\t\t\t\t\t\tif (namedModule !== undefined) {\n\t\t\t\t\t\t\tnamedModule.push(module);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnamedModules.set(module.id, [module]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const namedModule of namedModules.values()) {\n\t\t\t\t\tif (namedModule.length > 1) {\n\t\t\t\t\t\tfor (const module of namedModule) {\n\t\t\t\t\t\t\tconst requestShortener = new RequestShortener(context);\n\t\t\t\t\t\t\tmodule.id = `${module.id}?${getHash(\n\t\t\t\t\t\t\t\trequestShortener.shorten(module.identifier())\n\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedModulesPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC/C,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAEtD,MAAME,OAAO,GAAGC,GAAG,IAAI;EACtB,MAAMC,IAAI,GAAGL,UAAU,CAAC,KAAK,CAAC;EAC9BK,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC;EAChB,MAAMG,MAAM,GAAG,qBAAuBF,IAAI,CAACE,MAAM,CAAC,KAAK,CAAE;EACzD,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAC;AAED,MAAMC,kBAAkB,CAAC;EACxBC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC7B;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,oBAAoB,EAAED,WAAW,IAAI;MACnEA,WAAW,CAACD,KAAK,CAACG,eAAe,CAACD,GAAG,CAAC,oBAAoB,EAAEE,OAAO,IAAI;QACtE,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC9B,MAAMC,OAAO,GAAG,IAAI,CAACV,OAAO,CAACU,OAAO,IAAIR,QAAQ,CAACF,OAAO,CAACU,OAAO;QAEhE,KAAK,MAAMC,MAAM,IAAIJ,OAAO,EAAE;UAC7B,IAAII,MAAM,CAACC,EAAE,KAAK,IAAI,IAAID,MAAM,CAACE,QAAQ,EAAE;YAC1CF,MAAM,CAACC,EAAE,GAAGD,MAAM,CAACE,QAAQ,CAAC;cAAEH;YAAQ,CAAC,CAAC;UACzC;UAEA,IAAIC,MAAM,CAACC,EAAE,KAAK,IAAI,EAAE;YACvB,MAAME,WAAW,GAAGN,YAAY,CAACO,GAAG,CAACJ,MAAM,CAACC,EAAE,CAAC;YAC/C,IAAIE,WAAW,KAAKE,SAAS,EAAE;cAC9BF,WAAW,CAACG,IAAI,CAACN,MAAM,CAAC;YACzB,CAAC,MAAM;cACNH,YAAY,CAACU,GAAG,CAACP,MAAM,CAACC,EAAE,EAAE,CAACD,MAAM,CAAC,CAAC;YACtC;UACD;QACD;QAEA,KAAK,MAAMG,WAAW,IAAIN,YAAY,CAACW,MAAM,CAAC,CAAC,EAAE;UAChD,IAAIL,WAAW,CAACM,MAAM,GAAG,CAAC,EAAE;YAC3B,KAAK,MAAMT,MAAM,IAAIG,WAAW,EAAE;cACjC,MAAMO,gBAAgB,GAAG,IAAI9B,gBAAgB,CAACmB,OAAO,CAAC;cACtDC,MAAM,CAACC,EAAE,GAAG,GAAGD,MAAM,CAACC,EAAE,IAAIpB,OAAO,CAClC6B,gBAAgB,CAACC,OAAO,CAACX,MAAM,CAACY,UAAU,CAAC,CAAC,CAC7C,CAAC,EAAE;YACJ;UACD;QACD;MACD,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEAZ,MAAM,CAACa,OAAO,GAAG1B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script"}