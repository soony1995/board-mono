{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ParsePlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n      const parsed = resolver.parse(request.request);\n      const obj = Object.assign({}, request, parsed);\n      if (request.query && !parsed.query) {\n        obj.query = request.query;\n      }\n      if (parsed && resolveContext.log) {\n        if (parsed.module) resolveContext.log(\"Parsed request is a module\");\n        if (parsed.directory) resolveContext.log(\"Parsed request is a directory\");\n      }\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n};","map":{"version":3,"names":["module","exports","ParsePlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","parsed","parse","obj","Object","assign","query","log","directory","doResolve"],"sources":["/home/soon/bulletin-board/node_modules/enhanced-resolve/lib/ParsePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ParsePlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst parsed = resolver.parse(request.request);\n\t\t\t\tconst obj = Object.assign({}, request, parsed);\n\t\t\t\tif (request.query && !parsed.query) {\n\t\t\t\t\tobj.query = request.query;\n\t\t\t\t}\n\t\t\t\tif (parsed && resolveContext.log) {\n\t\t\t\t\tif (parsed.module) resolveContext.log(\"Parsed request is a module\");\n\t\t\t\t\tif (parsed.directory)\n\t\t\t\t\t\tresolveContext.log(\"Parsed request is a directory\");\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,MAAMC,WAAW,CAAC;EAClCC,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;EAEAC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACL,MAAM,CAAC,CACpBM,QAAQ,CAAC,aAAa,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MAC/D,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,KAAK,CAACJ,OAAO,CAACA,OAAO,CAAC;MAC9C,MAAMK,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,OAAO,EAAEG,MAAM,CAAC;MAC9C,IAAIH,OAAO,CAACQ,KAAK,IAAI,CAACL,MAAM,CAACK,KAAK,EAAE;QACnCH,GAAG,CAACG,KAAK,GAAGR,OAAO,CAACQ,KAAK;MAC1B;MACA,IAAIL,MAAM,IAAIF,cAAc,CAACQ,GAAG,EAAE;QACjC,IAAIN,MAAM,CAACd,MAAM,EAAEY,cAAc,CAACQ,GAAG,CAAC,4BAA4B,CAAC;QACnE,IAAIN,MAAM,CAACO,SAAS,EACnBT,cAAc,CAACQ,GAAG,CAAC,+BAA+B,CAAC;MACrD;MACAb,QAAQ,CAACe,SAAS,CAACjB,MAAM,EAAEW,GAAG,EAAE,IAAI,EAAEJ,cAAc,EAAEC,QAAQ,CAAC;IAChE,CAAC,CAAC;EACJ;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}