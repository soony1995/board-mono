{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/MinChunkSizePlugin\").MinChunkSizePluginOptions} MinChunkSizePluginOptions */\n\nclass MinChunkSizePlugin {\n  /**\n   * @param {MinChunkSizePluginOptions} options options object\n   */\n  constructor(options) {\n    validateOptions(schema, options, \"Min Chunk Size Plugin\");\n    this.options = options;\n  }\n  apply(compiler) {\n    const options = this.options;\n    const minChunkSize = options.minChunkSize;\n    compiler.hooks.compilation.tap(\"MinChunkSizePlugin\", compilation => {\n      compilation.hooks.optimizeChunksAdvanced.tap(\"MinChunkSizePlugin\", chunks => {\n        const equalOptions = {\n          chunkOverhead: 1,\n          entryChunkMultiplicator: 1\n        };\n        const sortedSizeFilteredExtendedPairCombinations = chunks.reduce((combinations, a, idx) => {\n          // create combination pairs\n          for (let i = 0; i < idx; i++) {\n            const b = chunks[i];\n            combinations.push([b, a]);\n          }\n          return combinations;\n        }, []).filter(pair => {\n          // check if one of the chunks sizes is smaller than the minChunkSize\n          const p0SmallerThanMinChunkSize = pair[0].size(equalOptions) < minChunkSize;\n          const p1SmallerThanMinChunkSize = pair[1].size(equalOptions) < minChunkSize;\n          return p0SmallerThanMinChunkSize || p1SmallerThanMinChunkSize;\n        }).map(pair => {\n          // extend combination pairs with size and integrated size\n          const a = pair[0].size(options);\n          const b = pair[1].size(options);\n          const ab = pair[0].integratedSize(pair[1], options);\n          return [a + b - ab, ab, pair[0], pair[1]];\n        }).filter(pair => {\n          // filter pairs that do not have an integratedSize\n          // meaning they can NOT be integrated!\n          return pair[1] !== false;\n        }).sort((a, b) => {\n          // sadly javascript does an inplace sort here\n          // sort by size\n          const diff = b[0] - a[0];\n          if (diff !== 0) return diff;\n          return a[1] - b[1];\n        });\n        if (sortedSizeFilteredExtendedPairCombinations.length === 0) return;\n        const pair = sortedSizeFilteredExtendedPairCombinations[0];\n        pair[2].integrate(pair[3], \"min-size\");\n        chunks.splice(chunks.indexOf(pair[3]), 1);\n        return true;\n      });\n    });\n  }\n}\nmodule.exports = MinChunkSizePlugin;","map":{"version":3,"names":["validateOptions","require","schema","MinChunkSizePlugin","constructor","options","apply","compiler","minChunkSize","hooks","compilation","tap","optimizeChunksAdvanced","chunks","equalOptions","chunkOverhead","entryChunkMultiplicator","sortedSizeFilteredExtendedPairCombinations","reduce","combinations","a","idx","i","b","push","filter","pair","p0SmallerThanMinChunkSize","size","p1SmallerThanMinChunkSize","map","ab","integratedSize","sort","diff","length","integrate","splice","indexOf","module","exports"],"sources":["/home/soon/bulletin-board/node_modules/webpack/lib/optimize/MinChunkSizePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/MinChunkSizePlugin\").MinChunkSizePluginOptions} MinChunkSizePluginOptions */\n\nclass MinChunkSizePlugin {\n\t/**\n\t * @param {MinChunkSizePluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Min Chunk Size Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minChunkSize = options.minChunkSize;\n\t\tcompiler.hooks.compilation.tap(\"MinChunkSizePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\"MinChunkSizePlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tconst equalOptions = {\n\t\t\t\t\t\tchunkOverhead: 1,\n\t\t\t\t\t\tentryChunkMultiplicator: 1\n\t\t\t\t\t};\n\n\t\t\t\t\tconst sortedSizeFilteredExtendedPairCombinations = chunks\n\t\t\t\t\t\t.reduce((combinations, a, idx) => {\n\t\t\t\t\t\t\t// create combination pairs\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = chunks[i];\n\t\t\t\t\t\t\t\tcombinations.push([b, a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn combinations;\n\t\t\t\t\t\t}, [])\n\t\t\t\t\t\t.filter(pair => {\n\t\t\t\t\t\t\t// check if one of the chunks sizes is smaller than the minChunkSize\n\t\t\t\t\t\t\tconst p0SmallerThanMinChunkSize =\n\t\t\t\t\t\t\t\tpair[0].size(equalOptions) < minChunkSize;\n\t\t\t\t\t\t\tconst p1SmallerThanMinChunkSize =\n\t\t\t\t\t\t\t\tpair[1].size(equalOptions) < minChunkSize;\n\t\t\t\t\t\t\treturn p0SmallerThanMinChunkSize || p1SmallerThanMinChunkSize;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\t\t// extend combination pairs with size and integrated size\n\t\t\t\t\t\t\tconst a = pair[0].size(options);\n\t\t\t\t\t\t\tconst b = pair[1].size(options);\n\t\t\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], options);\n\t\t\t\t\t\t\treturn [a + b - ab, ab, pair[0], pair[1]];\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(pair => {\n\t\t\t\t\t\t\t// filter pairs that do not have an integratedSize\n\t\t\t\t\t\t\t// meaning they can NOT be integrated!\n\t\t\t\t\t\t\treturn pair[1] !== false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t// sadly javascript does an inplace sort here\n\t\t\t\t\t\t\t// sort by size\n\t\t\t\t\t\t\tconst diff = b[0] - a[0];\n\t\t\t\t\t\t\tif (diff !== 0) return diff;\n\t\t\t\t\t\t\treturn a[1] - b[1];\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (sortedSizeFilteredExtendedPairCombinations.length === 0) return;\n\n\t\t\t\t\tconst pair = sortedSizeFilteredExtendedPairCombinations[0];\n\n\t\t\t\t\tpair[2].integrate(pair[3], \"min-size\");\n\t\t\t\t\tchunks.splice(chunks.indexOf(pair[3]), 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = MinChunkSizePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}